android.support.v4.app.BackStackState
android.support.v4.app.BackStackState: android.os.Parcelable$Creator CREATOR
android.support.v4.app.Fragment: java.util.HashMap sClassMap
android.support.v4.app.Fragment: int INITIALIZING
android.support.v4.app.Fragment: int CREATED
android.support.v4.app.Fragment: int ACTIVITY_CREATED
android.support.v4.app.Fragment: int STOPPED
android.support.v4.app.Fragment: int STARTED
android.support.v4.app.Fragment: int RESUMED
android.support.v4.app.Fragment: int mState
android.support.v4.app.Fragment: android.view.View mAnimatingAway
android.support.v4.app.Fragment: int mStateAfterAnimating
android.support.v4.app.Fragment: android.os.Bundle mSavedFragmentState
android.support.v4.app.Fragment: android.util.SparseArray mSavedViewState
android.support.v4.app.Fragment: int mIndex
android.support.v4.app.Fragment: java.lang.String mWho
android.support.v4.app.Fragment: android.os.Bundle mArguments
android.support.v4.app.Fragment: android.support.v4.app.Fragment mTarget
android.support.v4.app.Fragment: int mTargetIndex
android.support.v4.app.Fragment: int mTargetRequestCode
android.support.v4.app.Fragment: boolean mAdded
android.support.v4.app.Fragment: boolean mRemoving
android.support.v4.app.Fragment: boolean mResumed
android.support.v4.app.Fragment: boolean mFromLayout
android.support.v4.app.Fragment: boolean mInLayout
android.support.v4.app.Fragment: boolean mRestored
android.support.v4.app.Fragment: int mBackStackNesting
android.support.v4.app.Fragment: android.support.v4.app.FragmentManagerImpl mFragmentManager
android.support.v4.app.Fragment: android.support.v4.app.FragmentActivity mActivity
android.support.v4.app.Fragment: android.support.v4.app.FragmentManagerImpl mChildFragmentManager
android.support.v4.app.Fragment: android.support.v4.app.Fragment mParentFragment
android.support.v4.app.Fragment: int mFragmentId
android.support.v4.app.Fragment: int mContainerId
android.support.v4.app.Fragment: java.lang.String mTag
android.support.v4.app.Fragment: boolean mHidden
android.support.v4.app.Fragment: boolean mDetached
android.support.v4.app.Fragment: boolean mRetainInstance
android.support.v4.app.Fragment: boolean mRetaining
android.support.v4.app.Fragment: boolean mHasMenu
android.support.v4.app.Fragment: boolean mMenuVisible
android.support.v4.app.Fragment: boolean mCalled
android.support.v4.app.Fragment: int mNextAnim
android.support.v4.app.Fragment: android.view.ViewGroup mContainer
android.support.v4.app.Fragment: android.view.View mView
android.support.v4.app.Fragment: android.view.View mInnerView
android.support.v4.app.Fragment: boolean mDeferStart
android.support.v4.app.Fragment: boolean mUserVisibleHint
android.support.v4.app.Fragment: android.support.v4.app.LoaderManagerImpl mLoaderManager
android.support.v4.app.Fragment: boolean mLoadersStarted
android.support.v4.app.Fragment: boolean mCheckedForLoaderManager
android.support.v4.app.Fragment: Fragment()
android.support.v4.app.Fragment: android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String)
android.support.v4.app.Fragment: android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)
android.support.v4.app.Fragment: void restoreViewState(android.os.Bundle)
android.support.v4.app.Fragment: void setIndex(int,android.support.v4.app.Fragment)
android.support.v4.app.Fragment: boolean isInBackStack()
android.support.v4.app.Fragment: boolean equals(java.lang.Object)
android.support.v4.app.Fragment: int hashCode()
android.support.v4.app.Fragment: java.lang.String toString()
android.support.v4.app.Fragment: int getId()
android.support.v4.app.Fragment: java.lang.String getTag()
android.support.v4.app.Fragment: void setArguments(android.os.Bundle)
android.support.v4.app.Fragment: android.os.Bundle getArguments()
android.support.v4.app.Fragment: void setInitialSavedState(android.support.v4.app.Fragment$SavedState)
android.support.v4.app.Fragment: void setTargetFragment(android.support.v4.app.Fragment,int)
android.support.v4.app.Fragment: android.support.v4.app.Fragment getTargetFragment()
android.support.v4.app.Fragment: int getTargetRequestCode()
android.support.v4.app.Fragment: android.support.v4.app.FragmentActivity getActivity()
android.support.v4.app.Fragment: android.content.res.Resources getResources()
android.support.v4.app.Fragment: java.lang.CharSequence getText(int)
android.support.v4.app.Fragment: java.lang.String getString(int)
android.support.v4.app.Fragment: java.lang.String getString(int,java.lang.Object[])
android.support.v4.app.Fragment: android.support.v4.app.FragmentManager getFragmentManager()
android.support.v4.app.Fragment: android.support.v4.app.FragmentManager getChildFragmentManager()
android.support.v4.app.Fragment: android.support.v4.app.Fragment getParentFragment()
android.support.v4.app.Fragment: boolean isAdded()
android.support.v4.app.Fragment: boolean isDetached()
android.support.v4.app.Fragment: boolean isRemoving()
android.support.v4.app.Fragment: boolean isInLayout()
android.support.v4.app.Fragment: boolean isResumed()
android.support.v4.app.Fragment: boolean isVisible()
android.support.v4.app.Fragment: boolean isHidden()
android.support.v4.app.Fragment: boolean hasOptionsMenu()
android.support.v4.app.Fragment: boolean isMenuVisible()
android.support.v4.app.Fragment: void onHiddenChanged(boolean)
android.support.v4.app.Fragment: void setRetainInstance(boolean)
android.support.v4.app.Fragment: boolean getRetainInstance()
android.support.v4.app.Fragment: void setHasOptionsMenu(boolean)
android.support.v4.app.Fragment: void setMenuVisibility(boolean)
android.support.v4.app.Fragment: void setUserVisibleHint(boolean)
android.support.v4.app.Fragment: boolean getUserVisibleHint()
android.support.v4.app.Fragment: android.support.v4.app.LoaderManager getLoaderManager()
android.support.v4.app.Fragment: void startActivity(android.content.Intent)
android.support.v4.app.Fragment: void startActivityForResult(android.content.Intent,int)
android.support.v4.app.Fragment: void onActivityResult(int,int,android.content.Intent)
android.support.v4.app.Fragment: android.view.LayoutInflater getLayoutInflater(android.os.Bundle)
android.support.v4.app.Fragment: void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle)
android.support.v4.app.Fragment: void onAttach(android.app.Activity)
android.support.v4.app.Fragment: android.view.animation.Animation onCreateAnimation(int,boolean,int)
android.support.v4.app.Fragment: void onCreate(android.os.Bundle)
android.support.v4.app.Fragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
android.support.v4.app.Fragment: void onViewCreated(android.view.View,android.os.Bundle)
android.support.v4.app.Fragment: android.view.View getView()
android.support.v4.app.Fragment: void onActivityCreated(android.os.Bundle)
android.support.v4.app.Fragment: void onViewStateRestored(android.os.Bundle)
android.support.v4.app.Fragment: void onStart()
android.support.v4.app.Fragment: void onResume()
android.support.v4.app.Fragment: void onSaveInstanceState(android.os.Bundle)
android.support.v4.app.Fragment: void onConfigurationChanged(android.content.res.Configuration)
android.support.v4.app.Fragment: void onPause()
android.support.v4.app.Fragment: void onStop()
android.support.v4.app.Fragment: void onLowMemory()
android.support.v4.app.Fragment: void onDestroyView()
android.support.v4.app.Fragment: void onDestroy()
android.support.v4.app.Fragment: void initState()
android.support.v4.app.Fragment: void onDetach()
android.support.v4.app.Fragment: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)
android.support.v4.app.Fragment: void onPrepareOptionsMenu(android.view.Menu)
android.support.v4.app.Fragment: void onDestroyOptionsMenu()
android.support.v4.app.Fragment: boolean onOptionsItemSelected(android.view.MenuItem)
android.support.v4.app.Fragment: void onOptionsMenuClosed(android.view.Menu)
android.support.v4.app.Fragment: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)
android.support.v4.app.Fragment: void registerForContextMenu(android.view.View)
android.support.v4.app.Fragment: void unregisterForContextMenu(android.view.View)
android.support.v4.app.Fragment: boolean onContextItemSelected(android.view.MenuItem)
android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
android.support.v4.app.Fragment: android.support.v4.app.Fragment findFragmentByWho(java.lang.String)
android.support.v4.app.Fragment: void instantiateChildFragmentManager()
android.support.v4.app.Fragment: void performCreate(android.os.Bundle)
android.support.v4.app.Fragment: android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
android.support.v4.app.Fragment: void performActivityCreated(android.os.Bundle)
android.support.v4.app.Fragment: void performStart()
android.support.v4.app.Fragment: void performResume()
android.support.v4.app.Fragment: void performConfigurationChanged(android.content.res.Configuration)
android.support.v4.app.Fragment: void performLowMemory()
android.support.v4.app.Fragment: boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)
android.support.v4.app.Fragment: boolean performPrepareOptionsMenu(android.view.Menu)
android.support.v4.app.Fragment: boolean performOptionsItemSelected(android.view.MenuItem)
android.support.v4.app.Fragment: boolean performContextItemSelected(android.view.MenuItem)
android.support.v4.app.Fragment: void performOptionsMenuClosed(android.view.Menu)
android.support.v4.app.Fragment: void performSaveInstanceState(android.os.Bundle)
android.support.v4.app.Fragment: void performPause()
android.support.v4.app.Fragment: void performStop()
android.support.v4.app.Fragment: void performReallyStop()
android.support.v4.app.Fragment: void performDestroyView()
android.support.v4.app.Fragment: void performDestroy()
android.support.v4.app.Fragment: void <clinit>()
android.support.v4.app.Fragment$SavedState
android.support.v4.app.Fragment$SavedState: android.os.Parcelable$Creator CREATOR
android.support.v4.app.FragmentActivity
android.support.v4.app.FragmentActivity: java.lang.String TAG
android.support.v4.app.FragmentActivity: java.lang.String FRAGMENTS_TAG
android.support.v4.app.FragmentActivity: int HONEYCOMB
android.support.v4.app.FragmentActivity: int MSG_REALLY_STOPPED
android.support.v4.app.FragmentActivity: int MSG_RESUME_PENDING
android.support.v4.app.FragmentActivity: android.os.Handler mHandler
android.support.v4.app.FragmentActivity: android.support.v4.app.FragmentManagerImpl mFragments
android.support.v4.app.FragmentActivity: android.support.v4.app.FragmentContainer mContainer
android.support.v4.app.FragmentActivity: boolean mCreated
android.support.v4.app.FragmentActivity: boolean mResumed
android.support.v4.app.FragmentActivity: boolean mStopped
android.support.v4.app.FragmentActivity: boolean mReallyStopped
android.support.v4.app.FragmentActivity: boolean mRetaining
android.support.v4.app.FragmentActivity: boolean mOptionsMenuInvalidated
android.support.v4.app.FragmentActivity: boolean mCheckedForLoaderManager
android.support.v4.app.FragmentActivity: boolean mLoadersStarted
android.support.v4.app.FragmentActivity: java.util.HashMap mAllLoaderManagers
android.support.v4.app.FragmentActivity: android.support.v4.app.LoaderManagerImpl mLoaderManager
android.support.v4.app.FragmentActivity: FragmentActivity()
android.support.v4.app.FragmentActivity: void onActivityResult(int,int,android.content.Intent)
android.support.v4.app.FragmentActivity: void onBackPressed()
android.support.v4.app.FragmentActivity: void onConfigurationChanged(android.content.res.Configuration)
android.support.v4.app.FragmentActivity: void onCreate(android.os.Bundle)
android.support.v4.app.FragmentActivity: boolean onCreatePanelMenu(int,android.view.Menu)
android.support.v4.app.FragmentActivity: android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)
android.support.v4.app.FragmentActivity: void onDestroy()
android.support.v4.app.FragmentActivity: boolean onKeyDown(int,android.view.KeyEvent)
android.support.v4.app.FragmentActivity: void onLowMemory()
android.support.v4.app.FragmentActivity: boolean onMenuItemSelected(int,android.view.MenuItem)
android.support.v4.app.FragmentActivity: void onPanelClosed(int,android.view.Menu)
android.support.v4.app.FragmentActivity: void onPause()
android.support.v4.app.FragmentActivity: void onNewIntent(android.content.Intent)
android.support.v4.app.FragmentActivity: void onResume()
android.support.v4.app.FragmentActivity: void onPostResume()
android.support.v4.app.FragmentActivity: void onResumeFragments()
android.support.v4.app.FragmentActivity: boolean onPreparePanel(int,android.view.View,android.view.Menu)
android.support.v4.app.FragmentActivity: java.lang.Object onRetainNonConfigurationInstance()
android.support.v4.app.FragmentActivity: void onSaveInstanceState(android.os.Bundle)
android.support.v4.app.FragmentActivity: void onStart()
android.support.v4.app.FragmentActivity: void onStop()
android.support.v4.app.FragmentActivity: java.lang.Object onRetainCustomNonConfigurationInstance()
android.support.v4.app.FragmentActivity: java.lang.Object getLastCustomNonConfigurationInstance()
android.support.v4.app.FragmentActivity: void supportInvalidateOptionsMenu()
android.support.v4.app.FragmentActivity: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
android.support.v4.app.FragmentActivity: java.lang.String viewToString(android.view.View)
android.support.v4.app.FragmentActivity: void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View)
android.support.v4.app.FragmentActivity: void doReallyStop(boolean)
android.support.v4.app.FragmentActivity: void onReallyStop()
android.support.v4.app.FragmentActivity: void onAttachFragment(android.support.v4.app.Fragment)
android.support.v4.app.FragmentActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()
android.support.v4.app.FragmentActivity: void startActivityForResult(android.content.Intent,int)
android.support.v4.app.FragmentActivity: void startActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int)
android.support.v4.app.FragmentActivity: void invalidateSupportFragment(java.lang.String)
android.support.v4.app.FragmentActivity: android.support.v4.app.LoaderManager getSupportLoaderManager()
android.support.v4.app.FragmentActivity: android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean)
android.support.v4.app.FragmentManagerState
android.support.v4.app.FragmentManagerState: android.os.Parcelable$Creator CREATOR
android.support.v4.app.FragmentPagerAdapter: java.lang.String TAG
android.support.v4.app.FragmentPagerAdapter: boolean DEBUG
android.support.v4.app.FragmentPagerAdapter: android.support.v4.app.FragmentManager mFragmentManager
android.support.v4.app.FragmentPagerAdapter: android.support.v4.app.FragmentTransaction mCurTransaction
android.support.v4.app.FragmentPagerAdapter: android.support.v4.app.Fragment mCurrentPrimaryItem
android.support.v4.app.FragmentPagerAdapter: FragmentPagerAdapter(android.support.v4.app.FragmentManager)
android.support.v4.app.FragmentPagerAdapter: android.support.v4.app.Fragment getItem(int)
android.support.v4.app.FragmentPagerAdapter: void startUpdate(android.view.ViewGroup)
android.support.v4.app.FragmentPagerAdapter: java.lang.Object instantiateItem(android.view.ViewGroup,int)
android.support.v4.app.FragmentPagerAdapter: void destroyItem(android.view.ViewGroup,int,java.lang.Object)
android.support.v4.app.FragmentPagerAdapter: void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object)
android.support.v4.app.FragmentPagerAdapter: void finishUpdate(android.view.ViewGroup)
android.support.v4.app.FragmentPagerAdapter: boolean isViewFromObject(android.view.View,java.lang.Object)
android.support.v4.app.FragmentPagerAdapter: android.os.Parcelable saveState()
android.support.v4.app.FragmentPagerAdapter: void restoreState(android.os.Parcelable,java.lang.ClassLoader)
android.support.v4.app.FragmentPagerAdapter: long getItemId(int)
android.support.v4.app.FragmentPagerAdapter: java.lang.String makeFragmentName(int,long)
android.support.v4.app.FragmentState
android.support.v4.app.FragmentState: android.os.Parcelable$Creator CREATOR
android.support.v4.app.FragmentTabHost
android.support.v4.app.FragmentTabHost: FragmentTabHost(android.content.Context,android.util.AttributeSet)
android.support.v4.app.FragmentTabHost$SavedState
android.support.v4.app.FragmentTabHost$SavedState: android.os.Parcelable$Creator CREATOR
android.support.v4.content.FileProvider
android.support.v4.content.ModernAsyncTask$Status: android.support.v4.content.ModernAsyncTask$Status[] values()
android.support.v4.content.ModernAsyncTask$Status: android.support.v4.content.ModernAsyncTask$Status valueOf(java.lang.String)
android.support.v4.content.WakefulBroadcastReceiver
android.support.v4.view.PagerAdapter: android.database.DataSetObservable mObservable
android.support.v4.view.PagerAdapter: int POSITION_UNCHANGED
android.support.v4.view.PagerAdapter: int POSITION_NONE
android.support.v4.view.PagerAdapter: PagerAdapter()
android.support.v4.view.PagerAdapter: int getCount()
android.support.v4.view.PagerAdapter: void startUpdate(android.view.ViewGroup)
android.support.v4.view.PagerAdapter: java.lang.Object instantiateItem(android.view.ViewGroup,int)
android.support.v4.view.PagerAdapter: void destroyItem(android.view.ViewGroup,int,java.lang.Object)
android.support.v4.view.PagerAdapter: void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object)
android.support.v4.view.PagerAdapter: void finishUpdate(android.view.ViewGroup)
android.support.v4.view.PagerAdapter: void startUpdate(android.view.View)
android.support.v4.view.PagerAdapter: java.lang.Object instantiateItem(android.view.View,int)
android.support.v4.view.PagerAdapter: void destroyItem(android.view.View,int,java.lang.Object)
android.support.v4.view.PagerAdapter: void setPrimaryItem(android.view.View,int,java.lang.Object)
android.support.v4.view.PagerAdapter: void finishUpdate(android.view.View)
android.support.v4.view.PagerAdapter: boolean isViewFromObject(android.view.View,java.lang.Object)
android.support.v4.view.PagerAdapter: android.os.Parcelable saveState()
android.support.v4.view.PagerAdapter: void restoreState(android.os.Parcelable,java.lang.ClassLoader)
android.support.v4.view.PagerAdapter: int getItemPosition(java.lang.Object)
android.support.v4.view.PagerAdapter: void notifyDataSetChanged()
android.support.v4.view.PagerAdapter: void registerDataSetObserver(android.database.DataSetObserver)
android.support.v4.view.PagerAdapter: void unregisterDataSetObserver(android.database.DataSetObserver)
android.support.v4.view.PagerAdapter: java.lang.CharSequence getPageTitle(int)
android.support.v4.view.PagerAdapter: float getPageWidth(int)
android.support.v4.view.PagerTabStrip
android.support.v4.view.PagerTabStrip: PagerTabStrip(android.content.Context,android.util.AttributeSet)
android.support.v4.view.PagerTitleStrip
android.support.v4.view.PagerTitleStrip: PagerTitleStrip(android.content.Context,android.util.AttributeSet)
android.support.v4.view.ViewPager
android.support.v4.view.ViewPager: ViewPager(android.content.Context,android.util.AttributeSet)
android.support.v4.view.ViewPager$LayoutParams
android.support.v4.view.ViewPager$LayoutParams: ViewPager$LayoutParams(android.content.Context,android.util.AttributeSet)
android.support.v4.view.ViewPager$SavedState
android.support.v4.view.ViewPager$SavedState: android.os.Parcelable$Creator CREATOR
android.support.v4.widget.DrawerLayout
android.support.v4.widget.DrawerLayout: DrawerLayout(android.content.Context,android.util.AttributeSet)
android.support.v4.widget.DrawerLayout: DrawerLayout(android.content.Context,android.util.AttributeSet,int)
android.support.v4.widget.DrawerLayout$LayoutParams
android.support.v4.widget.DrawerLayout$LayoutParams: DrawerLayout$LayoutParams(android.content.Context,android.util.AttributeSet)
android.support.v4.widget.DrawerLayout$SavedState
android.support.v4.widget.DrawerLayout$SavedState: android.os.Parcelable$Creator CREATOR
android.support.v4.widget.SlidingPaneLayout
android.support.v4.widget.SlidingPaneLayout: SlidingPaneLayout(android.content.Context,android.util.AttributeSet)
android.support.v4.widget.SlidingPaneLayout: SlidingPaneLayout(android.content.Context,android.util.AttributeSet,int)
android.support.v4.widget.SlidingPaneLayout$LayoutParams
android.support.v4.widget.SlidingPaneLayout$LayoutParams: SlidingPaneLayout$LayoutParams(android.content.Context,android.util.AttributeSet)
android.support.v4.widget.SlidingPaneLayout$SavedState
android.support.v4.widget.SlidingPaneLayout$SavedState: android.os.Parcelable$Creator CREATOR
com.alibaba.fastjson.parser.Feature: com.alibaba.fastjson.parser.Feature[] values()
com.alibaba.fastjson.parser.Feature: com.alibaba.fastjson.parser.Feature valueOf(java.lang.String)
com.alibaba.fastjson.serializer.SerializerFeature: com.alibaba.fastjson.serializer.SerializerFeature[] values()
com.alibaba.fastjson.serializer.SerializerFeature: com.alibaba.fastjson.serializer.SerializerFeature valueOf(java.lang.String)
com.bairuitech.anychat.AnyChatAudioHelper
com.bairuitech.anychat.AnyChatAudioHelper: java.lang.String TAG
com.bairuitech.anychat.AnyChatAudioHelper: android.media.AudioTrack mAudioTrack
com.bairuitech.anychat.AnyChatAudioHelper: android.media.AudioRecord mAudioRecord
com.bairuitech.anychat.AnyChatAudioHelper: int PLAY_MODE_AUTO
com.bairuitech.anychat.AnyChatAudioHelper: int PLAY_MODE_RECEIVER
com.bairuitech.anychat.AnyChatAudioHelper: int PLAY_MODE_SPEAKER
com.bairuitech.anychat.AnyChatAudioHelper: com.bairuitech.anychat.AnyChatAudioHelper$PlayAudioThread mPlayAudioThread
com.bairuitech.anychat.AnyChatAudioHelper: boolean mPlayThreadExitFlag
com.bairuitech.anychat.AnyChatAudioHelper: int mMinPlayBufSize
com.bairuitech.anychat.AnyChatAudioHelper: boolean mAudioPlayReleased
com.bairuitech.anychat.AnyChatAudioHelper: com.bairuitech.anychat.AnyChatAudioHelper$RecordAudioThread mRecordAudioThread
com.bairuitech.anychat.AnyChatAudioHelper: boolean mRecordThreadExitFlag
com.bairuitech.anychat.AnyChatAudioHelper: int mMinRecordBufSize
com.bairuitech.anychat.AnyChatAudioHelper: boolean mAudioRecordReleased
com.bairuitech.anychat.AnyChatAudioHelper: android.content.Context mContext
com.bairuitech.anychat.AnyChatAudioHelper: int mProfile
com.bairuitech.anychat.AnyChatAudioHelper: int mPlayMode
com.bairuitech.anychat.AnyChatAudioHelper: int MAX_PWM_LEVEL
com.bairuitech.anychat.AnyChatAudioHelper: int MAX_DB_LEVEL
com.bairuitech.anychat.AnyChatAudioHelper: byte[] mCMDLevel
com.bairuitech.anychat.AnyChatAudioHelper: int mLevel
com.bairuitech.anychat.AnyChatAudioHelper: AnyChatAudioHelper()
com.bairuitech.anychat.AnyChatAudioHelper: void SetContext(android.content.Context)
com.bairuitech.anychat.AnyChatAudioHelper: int InitAudioPlayer(int)
com.bairuitech.anychat.AnyChatAudioHelper: void ReleaseAudioPlayer()
com.bairuitech.anychat.AnyChatAudioHelper: java.lang.Boolean IsSpeakerMode()
com.bairuitech.anychat.AnyChatAudioHelper: void SwitchPlayMode(int)
com.bairuitech.anychat.AnyChatAudioHelper: int InitAudioRecorder(int)
com.bairuitech.anychat.AnyChatAudioHelper: void ReleaseAudioRecorder()
com.bairuitech.anychat.AnyChatAudioHelper: android.media.AudioTrack access$0(com.bairuitech.anychat.AnyChatAudioHelper)
com.bairuitech.anychat.AnyChatAudioHelper: boolean access$1(com.bairuitech.anychat.AnyChatAudioHelper)
com.bairuitech.anychat.AnyChatAudioHelper: int access$2(com.bairuitech.anychat.AnyChatAudioHelper)
com.bairuitech.anychat.AnyChatAudioHelper: byte[] access$3(com.bairuitech.anychat.AnyChatAudioHelper)
com.bairuitech.anychat.AnyChatAudioHelper: void access$4(com.bairuitech.anychat.AnyChatAudioHelper,int)
com.bairuitech.anychat.AnyChatAudioHelper: android.media.AudioRecord access$5(com.bairuitech.anychat.AnyChatAudioHelper)
com.bairuitech.anychat.AnyChatAudioHelper: boolean access$6(com.bairuitech.anychat.AnyChatAudioHelper)
com.bairuitech.anychat.AnyChatAudioHelper$PlayAudioThread
com.bairuitech.anychat.AnyChatAudioHelper$PlayAudioThread: com.bairuitech.anychat.AnyChatAudioHelper this$0
com.bairuitech.anychat.AnyChatAudioHelper$PlayAudioThread: AnyChatAudioHelper$PlayAudioThread(com.bairuitech.anychat.AnyChatAudioHelper)
com.bairuitech.anychat.AnyChatAudioHelper$PlayAudioThread: void run()
com.bairuitech.anychat.AnyChatAudioHelper$RecordAudioThread
com.bairuitech.anychat.AnyChatAudioHelper$RecordAudioThread: com.bairuitech.anychat.AnyChatAudioHelper this$0
com.bairuitech.anychat.AnyChatAudioHelper$RecordAudioThread: AnyChatAudioHelper$RecordAudioThread(com.bairuitech.anychat.AnyChatAudioHelper)
com.bairuitech.anychat.AnyChatAudioHelper$RecordAudioThread: void run()
com.bairuitech.anychat.AnyChatBaseEvent
com.bairuitech.anychat.AnyChatBaseEvent: void OnAnyChatConnectMessage(boolean)
com.bairuitech.anychat.AnyChatBaseEvent: void OnAnyChatLoginMessage(int,int)
com.bairuitech.anychat.AnyChatBaseEvent: void OnAnyChatEnterRoomMessage(int,int)
com.bairuitech.anychat.AnyChatBaseEvent: void OnAnyChatOnlineUserMessage(int,int)
com.bairuitech.anychat.AnyChatBaseEvent: void OnAnyChatUserAtRoomMessage(int,boolean)
com.bairuitech.anychat.AnyChatBaseEvent: void OnAnyChatLinkCloseMessage(int)
com.bairuitech.anychat.AnyChatCameraHelper
com.bairuitech.anychat.AnyChatCameraHelper: java.lang.String TAG
com.bairuitech.anychat.AnyChatCameraHelper: android.hardware.Camera mCamera
com.bairuitech.anychat.AnyChatCameraHelper: boolean bIfPreview
com.bairuitech.anychat.AnyChatCameraHelper: boolean bNeedCapture
com.bairuitech.anychat.AnyChatCameraHelper: int iCurrentCameraId
com.bairuitech.anychat.AnyChatCameraHelper: android.view.SurfaceHolder currentHolder
com.bairuitech.anychat.AnyChatCameraHelper: int mVideoPixfmt
com.bairuitech.anychat.AnyChatCameraHelper: int iCaptureBuffers
com.bairuitech.anychat.AnyChatCameraHelper: android.content.Context mContext
com.bairuitech.anychat.AnyChatCameraHelper: int mCameraOrientation
com.bairuitech.anychat.AnyChatCameraHelper: int mCameraFacing
com.bairuitech.anychat.AnyChatCameraHelper: int mDeviceOrientation
com.bairuitech.anychat.AnyChatCameraHelper: int CAMERA_FACING_BACK
com.bairuitech.anychat.AnyChatCameraHelper: int CAMERA_FACING_FRONT
com.bairuitech.anychat.AnyChatCameraHelper: AnyChatCameraHelper()
com.bairuitech.anychat.AnyChatCameraHelper: void SetContext(android.content.Context)
com.bairuitech.anychat.AnyChatCameraHelper: void initCamera()
com.bairuitech.anychat.AnyChatCameraHelper: void CaptureControl(boolean)
com.bairuitech.anychat.AnyChatCameraHelper: int GetCameraNumber()
com.bairuitech.anychat.AnyChatCameraHelper: void CameraAutoFocus()
com.bairuitech.anychat.AnyChatCameraHelper: void SwitchCamera()
com.bairuitech.anychat.AnyChatCameraHelper: void SelectVideoCapture(int)
com.bairuitech.anychat.AnyChatCameraHelper: void SelectCamera(int)
com.bairuitech.anychat.AnyChatCameraHelper: void surfaceChanged(android.view.SurfaceHolder,int,int,int)
com.bairuitech.anychat.AnyChatCameraHelper: void surfaceCreated(android.view.SurfaceHolder)
com.bairuitech.anychat.AnyChatCameraHelper: void surfaceDestroyed(android.view.SurfaceHolder)
com.bairuitech.anychat.AnyChatCameraHelper: int getDeviceOrientation()
com.bairuitech.anychat.AnyChatCameraHelper: void setCameraDisplayOrientation()
com.bairuitech.anychat.AnyChatCameraHelper: boolean access$0(com.bairuitech.anychat.AnyChatCameraHelper)
com.bairuitech.anychat.AnyChatCameraHelper: android.hardware.Camera access$1(com.bairuitech.anychat.AnyChatCameraHelper)
com.bairuitech.anychat.AnyChatCameraHelper$1
com.bairuitech.anychat.AnyChatCameraHelper$1: com.bairuitech.anychat.AnyChatCameraHelper this$0
com.bairuitech.anychat.AnyChatCameraHelper$1: AnyChatCameraHelper$1(com.bairuitech.anychat.AnyChatCameraHelper)
com.bairuitech.anychat.AnyChatCameraHelper$1: void onPreviewFrame(byte[],android.hardware.Camera)
com.bairuitech.anychat.AnyChatCoreSDK
com.bairuitech.anychat.AnyChatCoreSDK: com.bairuitech.anychat.AnyChatBaseEvent baseEvent
com.bairuitech.anychat.AnyChatCoreSDK: com.bairuitech.anychat.AnyChatStateChgEvent stateChgEvent
com.bairuitech.anychat.AnyChatCoreSDK: com.bairuitech.anychat.AnyChatPrivateChatEvent privateChatEvent
com.bairuitech.anychat.AnyChatCoreSDK: com.bairuitech.anychat.AnyChatTextMsgEvent textMsgEvent
com.bairuitech.anychat.AnyChatCoreSDK: com.bairuitech.anychat.AnyChatTransDataEvent transDataEvent
com.bairuitech.anychat.AnyChatCoreSDK: com.bairuitech.anychat.AnyChatVideoCallEvent videoCallEvent
com.bairuitech.anychat.AnyChatCoreSDK: com.bairuitech.anychat.AnyChatUserInfoEvent userInfoEvent
com.bairuitech.anychat.AnyChatCoreSDK: com.bairuitech.anychat.AnyChatDataEncDecEvent encdecEvent
com.bairuitech.anychat.AnyChatCoreSDK: com.bairuitech.anychat.AnyChatRecordEvent recordEvent
com.bairuitech.anychat.AnyChatCoreSDK: com.bairuitech.anychat.AnyChatCoreSDK mAnyChat
com.bairuitech.anychat.AnyChatCoreSDK: com.bairuitech.anychat.AnyChatCoreSDK$MainHandler mHandler
com.bairuitech.anychat.AnyChatCoreSDK: com.bairuitech.anychat.AnyChatAudioHelper mAudioHelper
com.bairuitech.anychat.AnyChatCoreSDK: com.bairuitech.anychat.AnyChatCameraHelper mCameraHelper
com.bairuitech.anychat.AnyChatCoreSDK: com.bairuitech.anychat.AnyChatSensorHelper mSensorHelper
com.bairuitech.anychat.AnyChatCoreSDK: com.bairuitech.anychat.AnyChatVideoHelper mVideoHelper
com.bairuitech.anychat.AnyChatCoreSDK: int HANDLE_TYPE_NOTIFYMSG
com.bairuitech.anychat.AnyChatCoreSDK: int HANDLE_TYPE_TEXTMSG
com.bairuitech.anychat.AnyChatCoreSDK: int HANDLE_TYPE_TRANSFILE
com.bairuitech.anychat.AnyChatCoreSDK: int HANDLE_TYPE_TRANSBUF
com.bairuitech.anychat.AnyChatCoreSDK: int HANDLE_TYPE_TRANSBUFEX
com.bairuitech.anychat.AnyChatCoreSDK: int HANDLE_TYPE_SDKFILTER
com.bairuitech.anychat.AnyChatCoreSDK: int HANDLE_TYPE_VIDEOCALL
com.bairuitech.anychat.AnyChatCoreSDK: int HANDLE_TYPE_RECORD
com.bairuitech.anychat.AnyChatCoreSDK: void <clinit>()
com.bairuitech.anychat.AnyChatCoreSDK: AnyChatCoreSDK()
com.bairuitech.anychat.AnyChatCoreSDK: com.bairuitech.anychat.AnyChatCoreSDK getInstance(android.content.Context)
com.bairuitech.anychat.AnyChatCoreSDK: void SetBaseEvent(com.bairuitech.anychat.AnyChatBaseEvent)
com.bairuitech.anychat.AnyChatCoreSDK: void SetStateChgEvent(com.bairuitech.anychat.AnyChatStateChgEvent)
com.bairuitech.anychat.AnyChatCoreSDK: void SetPrivateChatEvent(com.bairuitech.anychat.AnyChatPrivateChatEvent)
com.bairuitech.anychat.AnyChatCoreSDK: void SetTextMessageEvent(com.bairuitech.anychat.AnyChatTextMsgEvent)
com.bairuitech.anychat.AnyChatCoreSDK: void SetTransDataEvent(com.bairuitech.anychat.AnyChatTransDataEvent)
com.bairuitech.anychat.AnyChatCoreSDK: void SetVideoCallEvent(com.bairuitech.anychat.AnyChatVideoCallEvent)
com.bairuitech.anychat.AnyChatCoreSDK: void SetUserInfoEvent(com.bairuitech.anychat.AnyChatUserInfoEvent)
com.bairuitech.anychat.AnyChatCoreSDK: void SetDataEncDecEvent(com.bairuitech.anychat.AnyChatDataEncDecEvent)
com.bairuitech.anychat.AnyChatCoreSDK: void SetRecordSnapShotEvent(com.bairuitech.anychat.AnyChatRecordEvent)
com.bairuitech.anychat.AnyChatCoreSDK: int GetSDKMainVersion()
com.bairuitech.anychat.AnyChatCoreSDK: int GetSDKSubVersion()
com.bairuitech.anychat.AnyChatCoreSDK: java.lang.String GetSDKBuildTime()
com.bairuitech.anychat.AnyChatCoreSDK: int RegisterNotify()
com.bairuitech.anychat.AnyChatCoreSDK: int InitSDK(int,int)
com.bairuitech.anychat.AnyChatCoreSDK: int Connect(java.lang.String,int)
com.bairuitech.anychat.AnyChatCoreSDK: int Login(java.lang.String,java.lang.String)
com.bairuitech.anychat.AnyChatCoreSDK: int EnterRoom(int,java.lang.String)
com.bairuitech.anychat.AnyChatCoreSDK: int EnterRoomEx(java.lang.String,java.lang.String)
com.bairuitech.anychat.AnyChatCoreSDK: int LeaveRoom(int)
com.bairuitech.anychat.AnyChatCoreSDK: int Logout()
com.bairuitech.anychat.AnyChatCoreSDK: int Release()
com.bairuitech.anychat.AnyChatCoreSDK: int[] GetOnlineUser()
com.bairuitech.anychat.AnyChatCoreSDK: int SetVideoPos(int,android.view.Surface,int,int,int,int)
com.bairuitech.anychat.AnyChatCoreSDK: int UserCameraControl(int,int)
com.bairuitech.anychat.AnyChatCoreSDK: int UserSpeakControl(int,int)
com.bairuitech.anychat.AnyChatCoreSDK: int StreamRecordCtrl(int,int,int,int)
com.bairuitech.anychat.AnyChatCoreSDK: int StreamRecordCtrlEx(int,int,int,int,java.lang.String)
com.bairuitech.anychat.AnyChatCoreSDK: int SnapShot(int,int,int)
com.bairuitech.anychat.AnyChatCoreSDK: int AudioGetVolume(int)
com.bairuitech.anychat.AnyChatCoreSDK: int AudioSetVolume(int,int)
com.bairuitech.anychat.AnyChatCoreSDK: java.lang.String QueryUserStateString(int,int)
com.bairuitech.anychat.AnyChatCoreSDK: int QueryUserStateInt(int,int)
com.bairuitech.anychat.AnyChatCoreSDK: int GetUserSpeakVolume(int)
com.bairuitech.anychat.AnyChatCoreSDK: int GetCameraState(int)
com.bairuitech.anychat.AnyChatCoreSDK: int GetSpeakState(int)
com.bairuitech.anychat.AnyChatCoreSDK: int GetUserVideoWidth(int)
com.bairuitech.anychat.AnyChatCoreSDK: int GetUserVideoHeight(int)
com.bairuitech.anychat.AnyChatCoreSDK: java.lang.String QueryRoomStateString(int,int)
com.bairuitech.anychat.AnyChatCoreSDK: int QueryRoomStateInt(int,int)
com.bairuitech.anychat.AnyChatCoreSDK: int SetServerAuthPass(java.lang.String)
com.bairuitech.anychat.AnyChatCoreSDK: int SetSDKOptionInt(int,int)
com.bairuitech.anychat.AnyChatCoreSDK: int SetSDKOptionString(int,java.lang.String)
com.bairuitech.anychat.AnyChatCoreSDK: int GetSDKOptionInt(int)
com.bairuitech.anychat.AnyChatCoreSDK: java.lang.String GetSDKOptionString(int)
com.bairuitech.anychat.AnyChatCoreSDK: int SendTextMessage(int,int,java.lang.String)
com.bairuitech.anychat.AnyChatCoreSDK: int TransFile(int,java.lang.String,int,int,int,com.bairuitech.anychat.AnyChatOutParam)
com.bairuitech.anychat.AnyChatCoreSDK: int TransBuffer(int,byte[],int)
com.bairuitech.anychat.AnyChatCoreSDK: int TransBufferEx(int,byte[],int,int,int,int,com.bairuitech.anychat.AnyChatOutParam)
com.bairuitech.anychat.AnyChatCoreSDK: int CancelTransTask(int,int)
com.bairuitech.anychat.AnyChatCoreSDK: int QueryTransTaskInfo(int,int,int,com.bairuitech.anychat.AnyChatOutParam)
com.bairuitech.anychat.AnyChatCoreSDK: int SendSDKFilterData(byte[],int)
com.bairuitech.anychat.AnyChatCoreSDK: byte[] FetchAudioPlayBuffer(int)
com.bairuitech.anychat.AnyChatCoreSDK: void CameraAutoFocus()
com.bairuitech.anychat.AnyChatCoreSDK: java.lang.String GetUserName(int)
com.bairuitech.anychat.AnyChatCoreSDK: java.lang.String GetUserIPAddr(int)
com.bairuitech.anychat.AnyChatCoreSDK: java.lang.String[] EnumVideoCapture()
com.bairuitech.anychat.AnyChatCoreSDK: int SelectVideoCapture(java.lang.String)
com.bairuitech.anychat.AnyChatCoreSDK: java.lang.String GetCurVideoCapture()
com.bairuitech.anychat.AnyChatCoreSDK: java.lang.String[] EnumAudioCapture()
com.bairuitech.anychat.AnyChatCoreSDK: int SelectAudioCapture(java.lang.String)
com.bairuitech.anychat.AnyChatCoreSDK: java.lang.String GetCurAudioCapture()
com.bairuitech.anychat.AnyChatCoreSDK: java.lang.String[] EnumAudioPlayback()
com.bairuitech.anychat.AnyChatCoreSDK: int SelectAudioPlayback(java.lang.String)
com.bairuitech.anychat.AnyChatCoreSDK: java.lang.String GetCurAudioPlayback()
com.bairuitech.anychat.AnyChatCoreSDK: int ChangeChatMode(int)
com.bairuitech.anychat.AnyChatCoreSDK: int GetUserChatMode(int)
com.bairuitech.anychat.AnyChatCoreSDK: int PrivateChatRequest(int)
com.bairuitech.anychat.AnyChatCoreSDK: int PrivateChatEcho(int,int,int)
com.bairuitech.anychat.AnyChatCoreSDK: int PrivateChatEchoEx(int,int,int)
com.bairuitech.anychat.AnyChatCoreSDK: int PrivateChatExit(int)
com.bairuitech.anychat.AnyChatCoreSDK: int SetInputVideoFormat(int,int,int,int,int)
com.bairuitech.anychat.AnyChatCoreSDK: int InputVideoData(byte[],int,int)
com.bairuitech.anychat.AnyChatCoreSDK: int SetInputAudioFormat(int,int,int,int)
com.bairuitech.anychat.AnyChatCoreSDK: int InputAudioData(byte[],int,int)
com.bairuitech.anychat.AnyChatCoreSDK: int VideoCallControl(int,int,int,int,int,java.lang.String)
com.bairuitech.anychat.AnyChatCoreSDK: int[] GetUserFriends()
com.bairuitech.anychat.AnyChatCoreSDK: int GetFriendStatus(int)
com.bairuitech.anychat.AnyChatCoreSDK: int[] GetUserGroups()
com.bairuitech.anychat.AnyChatCoreSDK: int[] GetGroupFriends(int)
com.bairuitech.anychat.AnyChatCoreSDK: java.lang.String GetUserInfo(int,int)
com.bairuitech.anychat.AnyChatCoreSDK: java.lang.String GetGroupName(int)
com.bairuitech.anychat.AnyChatCoreSDK: int UserInfoControl(int,int,int,int,java.lang.String)
com.bairuitech.anychat.AnyChatCoreSDK: int MultiCastControl(java.lang.String,int,java.lang.String,int,int)
com.bairuitech.anychat.AnyChatCoreSDK: void OnNotifyMsg(int,int,int)
com.bairuitech.anychat.AnyChatCoreSDK: void OnAnyChatNotifyMsg(int,int,int)
com.bairuitech.anychat.AnyChatCoreSDK: void OnTextMessageCallBack(int,int,int,java.lang.String)
com.bairuitech.anychat.AnyChatCoreSDK: void OnTransFileCallBack(int,java.lang.String,java.lang.String,int,int,int,int)
com.bairuitech.anychat.AnyChatCoreSDK: void OnTransBufferCallBack(int,byte[],int)
com.bairuitech.anychat.AnyChatCoreSDK: void OnTransBufferExCallBack(int,byte[],int,int,int,int)
com.bairuitech.anychat.AnyChatCoreSDK: void OnSDKFilterDataCallBack(byte[],int)
com.bairuitech.anychat.AnyChatCoreSDK: void OnVideoDataCallBack(int,byte[],int,int,int)
com.bairuitech.anychat.AnyChatCoreSDK: void OnVideoCallEventCallBack(int,int,int,int,int,java.lang.String)
com.bairuitech.anychat.AnyChatCoreSDK: void OnRecordSnapShotExCallBack(int,java.lang.String,int,int,int,java.lang.String)
com.bairuitech.anychat.AnyChatCoreSDK: int OnDataEncDecCallBack(int,int,byte[],int,com.bairuitech.anychat.AnyChatOutParam)
com.bairuitech.anychat.AnyChatCoreSDK: int access$0()
com.bairuitech.anychat.AnyChatCoreSDK: int access$1()
com.bairuitech.anychat.AnyChatCoreSDK: int access$2()
com.bairuitech.anychat.AnyChatCoreSDK: int access$3()
com.bairuitech.anychat.AnyChatCoreSDK: int access$4()
com.bairuitech.anychat.AnyChatCoreSDK: int access$5()
com.bairuitech.anychat.AnyChatCoreSDK: int access$6()
com.bairuitech.anychat.AnyChatCoreSDK: int access$7()
com.bairuitech.anychat.AnyChatCoreSDK$MainHandler
com.bairuitech.anychat.AnyChatCoreSDK$MainHandler: java.lang.ref.WeakReference mAnyChat
com.bairuitech.anychat.AnyChatCoreSDK$MainHandler: AnyChatCoreSDK$MainHandler(com.bairuitech.anychat.AnyChatCoreSDK)
com.bairuitech.anychat.AnyChatCoreSDK$MainHandler: AnyChatCoreSDK$MainHandler(android.os.Looper)
com.bairuitech.anychat.AnyChatCoreSDK$MainHandler: void handleMessage(android.os.Message)
com.bairuitech.anychat.AnyChatDataEncDecEvent
com.bairuitech.anychat.AnyChatDataEncDecEvent: int BRAC_DATAENCDEC_FLAGS_ENCMODE
com.bairuitech.anychat.AnyChatDataEncDecEvent: int BRAC_DATAENCDEC_FLAGS_DECMODE
com.bairuitech.anychat.AnyChatDataEncDecEvent: int BRAC_DATAENCDEC_FLAGS_AUDIO
com.bairuitech.anychat.AnyChatDataEncDecEvent: int BRAC_DATAENCDEC_FLAGS_VIDEO
com.bairuitech.anychat.AnyChatDataEncDecEvent: int BRAC_DATAENCDEC_FLAGS_BUFFER
com.bairuitech.anychat.AnyChatDataEncDecEvent: int BRAC_DATAENCDEC_FLAGS_TXTMSG
com.bairuitech.anychat.AnyChatDataEncDecEvent: int OnAnyChatDataEncDec(int,int,byte[],int,com.bairuitech.anychat.AnyChatOutParam)
com.bairuitech.anychat.AnyChatDefine
com.bairuitech.anychat.AnyChatDefine: int WM_GV
com.bairuitech.anychat.AnyChatDefine: int WM_GV_CONNECT
com.bairuitech.anychat.AnyChatDefine: int WM_GV_LOGINSYSTEM
com.bairuitech.anychat.AnyChatDefine: int WM_GV_ENTERROOM
com.bairuitech.anychat.AnyChatDefine: int WM_GV_MICSTATECHANGE
com.bairuitech.anychat.AnyChatDefine: int WM_GV_USERATROOM
com.bairuitech.anychat.AnyChatDefine: int WM_GV_LINKCLOSE
com.bairuitech.anychat.AnyChatDefine: int WM_GV_ONLINEUSER
com.bairuitech.anychat.AnyChatDefine: int WM_GV_CAMERASTATE
com.bairuitech.anychat.AnyChatDefine: int WM_GV_CHATMODECHG
com.bairuitech.anychat.AnyChatDefine: int WM_GV_ACTIVESTATE
com.bairuitech.anychat.AnyChatDefine: int WM_GV_P2PCONNECTSTATE
com.bairuitech.anychat.AnyChatDefine: int WM_GV_VIDEOSIZECHG
com.bairuitech.anychat.AnyChatDefine: int WM_GV_USERINFOUPDATE
com.bairuitech.anychat.AnyChatDefine: int WM_GV_FRIENDSTATUS
com.bairuitech.anychat.AnyChatDefine: int WM_GV_PRIVATEREQUEST
com.bairuitech.anychat.AnyChatDefine: int WM_GV_PRIVATEECHO
com.bairuitech.anychat.AnyChatDefine: int WM_GV_PRIVATEEXIT
com.bairuitech.anychat.AnyChatDefine: int WM_GV_AUDIOPLAYCTRL
com.bairuitech.anychat.AnyChatDefine: int WM_GV_AUDIORECCTRL
com.bairuitech.anychat.AnyChatDefine: int WM_GV_VIDEOCAPCTRL
com.bairuitech.anychat.AnyChatDefine: int BRAC_PIX_FMT_RGB24
com.bairuitech.anychat.AnyChatDefine: int BRAC_PIX_FMT_RGB32
com.bairuitech.anychat.AnyChatDefine: int BRAC_PIX_FMT_YV12
com.bairuitech.anychat.AnyChatDefine: int BRAC_PIX_FMT_YUY2
com.bairuitech.anychat.AnyChatDefine: int BRAC_PIX_FMT_YUV420P
com.bairuitech.anychat.AnyChatDefine: int BRAC_PIX_FMT_RGB565
com.bairuitech.anychat.AnyChatDefine: int BRAC_PIX_FMT_RGB555
com.bairuitech.anychat.AnyChatDefine: int BRAC_PIX_FMT_NV12
com.bairuitech.anychat.AnyChatDefine: int BRAC_PIX_FMT_NV21
com.bairuitech.anychat.AnyChatDefine: int BRAC_PIX_FMT_NV16
com.bairuitech.anychat.AnyChatDefine: int VIDEOCAP_DRIVER_JAVA
com.bairuitech.anychat.AnyChatDefine: int VIDEOSHOW_DRIVER_JAVA
com.bairuitech.anychat.AnyChatDefine: int AUDIOREC_DRIVER_JAVA
com.bairuitech.anychat.AnyChatDefine: int AUDIOPLAY_DRIVER_JAVA
com.bairuitech.anychat.AnyChatDefine: int BRAC_SO_AUDIO_VADCTRL
com.bairuitech.anychat.AnyChatDefine: int BRAC_SO_AUDIO_NSCTRL
com.bairuitech.anychat.AnyChatDefine: int BRAC_SO_AUDIO_ECHOCTRL
com.bairuitech.anychat.AnyChatDefine: int BRAC_SO_AUDIO_AGCCTRL
com.bairuitech.anychat.AnyChatDefine: int BRAC_SO_AUDIO_CPATUREMODE
com.bairuitech.anychat.AnyChatDefine: int BRAC_SO_AUDIO_MICBOOST
com.bairuitech.anychat.AnyChatDefine: int BRAC_SO_AUDIO_AUTOPARAM
com.bairuitech.anychat.AnyChatDefine: int BRAC_SO_AUDIO_MONOBITRATE
com.bairuitech.anychat.AnyChatDefine: int BRAC_SO_AUDIO_STEREOBITRATE
com.bairuitech.anychat.AnyChatDefine: int BRAC_SO_AUDIO_PLAYDRVCTRL
com.bairuitech.anychat.AnyChatDefine: int BRAC_SO_AUDIO_SOFTVOLMODE
com.bairuitech.anychat.AnyChatDefine: int BRAC_SO_AUDIO_RECORDDRVCTRL
com.bairuitech.anychat.AnyChatDefine: int BRAC_SO_AUDIO_ECHODELAY
com.bairuitech.anychat.AnyChatDefine: int BRAC_SO_AUDIO_NSLEVEL
com.bairuitech.anychat.AnyChatDefine: int BRAC_SO_RECORD_VIDEOBR
com.bairuitech.anychat.AnyChatDefine: int BRAC_SO_RECORD_AUDIOBR
com.bairuitech.anychat.AnyChatDefine: int BRAC_SO_RECORD_TMPDIR
com.bairuitech.anychat.AnyChatDefine: int BRAC_SO_SNAPSHOT_TMPDIR
com.bairuitech.anychat.AnyChatDefine: int BRAC_SO_RECORD_FILETYPE
com.bairuitech.anychat.AnyChatDefine: int BRAC_SO_RECORD_WIDTH
com.bairuitech.anychat.AnyChatDefine: int BRAC_SO_RECORD_HEIGHT
com.bairuitech.anychat.AnyChatDefine: int BRAC_SO_RECORD_FILENAMERULE
com.bairuitech.anychat.AnyChatDefine: int BRAC_SO_RECORD_CLIPMODE
com.bairuitech.anychat.AnyChatDefine: int BRAC_SO_CORESDK_TMPDIR
com.bairuitech.anychat.AnyChatDefine: int BRAC_SO_CORESDK_LOADCODEC
com.bairuitech.anychat.AnyChatDefine: int BRAC_SO_CORESDK_USEARMV6LIB
com.bairuitech.anychat.AnyChatDefine: int BRAC_SO_CORESDK_USEHWCODEC
com.bairuitech.anychat.AnyChatDefine: int BRAC_SO_CORESDK_PATH
com.bairuitech.anychat.AnyChatDefine: int BRAC_SO_CORESDK_DUMPCOREINFO
com.bairuitech.anychat.AnyChatDefine: int BRAC_SO_CORESDK_MAINVERSION
com.bairuitech.anychat.AnyChatDefine: int BRAC_SO_CORESDK_SUBVERSION
com.bairuitech.anychat.AnyChatDefine: int BRAC_SO_CORESDK_BUILDTIME
com.bairuitech.anychat.AnyChatDefine: int BRAC_SO_CORESDK_EXTVIDEOINPUT
com.bairuitech.anychat.AnyChatDefine: int BRAC_SO_CORESDK_EXTAUDIOINPUT
com.bairuitech.anychat.AnyChatDefine: int BRAC_SO_LOCALVIDEO_BITRATECTRL
com.bairuitech.anychat.AnyChatDefine: int BRAC_SO_LOCALVIDEO_QUALITYCTRL
com.bairuitech.anychat.AnyChatDefine: int BRAC_SO_LOCALVIDEO_GOPCTRL
com.bairuitech.anychat.AnyChatDefine: int BRAC_SO_LOCALVIDEO_FPSCTRL
com.bairuitech.anychat.AnyChatDefine: int BRAC_SO_LOCALVIDEO_PRESETCTRL
com.bairuitech.anychat.AnyChatDefine: int BRAC_SO_LOCALVIDEO_APPLYPARAM
com.bairuitech.anychat.AnyChatDefine: int BRAC_SO_LOCALVIDEO_VIDEOSIZEPOLITIC
com.bairuitech.anychat.AnyChatDefine: int BRAC_SO_LOCALVIDEO_DEINTERLACE
com.bairuitech.anychat.AnyChatDefine: int BRAC_SO_LOCALVIDEO_WIDTHCTRL
com.bairuitech.anychat.AnyChatDefine: int BRAC_SO_LOCALVIDEO_HEIGHTCTRL
com.bairuitech.anychat.AnyChatDefine: int BRAC_SO_LOCALVIDEO_FOCUSCTRL
com.bairuitech.anychat.AnyChatDefine: int BRAC_SO_LOCALVIDEO_PIXFMTCTRL
com.bairuitech.anychat.AnyChatDefine: int BRAC_SO_LOCALVIDEO_OVERLAY
com.bairuitech.anychat.AnyChatDefine: int BRAC_SO_LOCALVIDEO_CODECID
com.bairuitech.anychat.AnyChatDefine: int BRAC_SO_LOCALVIDEO_ROTATECTRL
com.bairuitech.anychat.AnyChatDefine: int BRAC_SO_LOCALVIDEO_CAPDRIVER
com.bairuitech.anychat.AnyChatDefine: int BRAC_SO_LOCALVIDEO_FIXCOLORDEVIA
com.bairuitech.anychat.AnyChatDefine: int BRAC_SO_LOCALVIDEO_ORIENTATION
com.bairuitech.anychat.AnyChatDefine: int BRAC_SO_LOCALVIDEO_AUTOROTATION
com.bairuitech.anychat.AnyChatDefine: int BRAC_SO_LOCALVIDEO_SURFACEROTATION
com.bairuitech.anychat.AnyChatDefine: int BRAC_SO_LOCALVIDEO_CAMERAFACE
com.bairuitech.anychat.AnyChatDefine: int BRAC_SO_LOCALVIDEO_DEVICEMODE
com.bairuitech.anychat.AnyChatDefine: int BRAC_SO_NETWORK_P2PPOLITIC
com.bairuitech.anychat.AnyChatDefine: int BRAC_SO_NETWORK_P2PCONNECT
com.bairuitech.anychat.AnyChatDefine: int BRAC_SO_NETWORK_P2PBREAK
com.bairuitech.anychat.AnyChatDefine: int BRAC_SO_NETWORK_TCPSERVICEPORT
com.bairuitech.anychat.AnyChatDefine: int BRAC_SO_NETWORK_UDPSERVICEPORT
com.bairuitech.anychat.AnyChatDefine: int BRAC_SO_NETWORK_MULTICASTPOLITIC
com.bairuitech.anychat.AnyChatDefine: int BRAC_SO_NETWORK_TRANSBUFMAXBITRATE
com.bairuitech.anychat.AnyChatDefine: int BRAC_SO_NETWORK_AUTORECONNECT
com.bairuitech.anychat.AnyChatDefine: int BRAC_SO_PROXY_FUNCTIONCTRL
com.bairuitech.anychat.AnyChatDefine: int BRAC_SO_PROXY_VIDEOCTRL
com.bairuitech.anychat.AnyChatDefine: int BRAC_SO_PROXY_AUDIOCTRL
com.bairuitech.anychat.AnyChatDefine: int BRAC_SO_STREAM_BUFFERTIME
com.bairuitech.anychat.AnyChatDefine: int BRAC_SO_STREAM_SMOOTHPLAYMODE
com.bairuitech.anychat.AnyChatDefine: int BRAC_SO_VIDEOSHOW_MODECTRL
com.bairuitech.anychat.AnyChatDefine: int BRAC_SO_VIDEOSHOW_SETPRIMARYUSER
com.bairuitech.anychat.AnyChatDefine: int BRAC_SO_VIDEOSHOW_SETOVERLAYUSER
com.bairuitech.anychat.AnyChatDefine: int BRAC_SO_VIDEOSHOW_DRIVERCTRL
com.bairuitech.anychat.AnyChatDefine: int BRAC_SO_VIDEOSHOW_GPUDIRECTRENDER
com.bairuitech.anychat.AnyChatDefine: int BRAC_SO_VIDEOSHOW_AUTOROTATION
com.bairuitech.anychat.AnyChatDefine: int BRAC_SO_VIDEOSHOW_CLIPMODE
com.bairuitech.anychat.AnyChatDefine: int BRAC_SO_CORESDK_DEVICEMODE
com.bairuitech.anychat.AnyChatDefine: int BRAC_SO_CORESDK_SCREENCAMERACTRL
com.bairuitech.anychat.AnyChatDefine: int BRAC_SO_CORESDK_DATAENCRYPTION
com.bairuitech.anychat.AnyChatDefine: int BRAC_SO_CORESDK_UPLOADLOGINFO
com.bairuitech.anychat.AnyChatDefine: int BRAC_SO_CORESDK_WRITELOG
com.bairuitech.anychat.AnyChatDefine: int BRAC_TRANSTASK_PROGRESS
com.bairuitech.anychat.AnyChatDefine: int BRAC_TRANSTASK_BITRATE
com.bairuitech.anychat.AnyChatDefine: int BRAC_TRANSTASK_STATUS
com.bairuitech.anychat.AnyChatDefine: int BRAC_RECORD_FLAGS_VIDEO
com.bairuitech.anychat.AnyChatDefine: int BRAC_RECORD_FLAGS_AUDIO
com.bairuitech.anychat.AnyChatDefine: int BRAC_RECORD_FLAGS_SERVER
com.bairuitech.anychat.AnyChatDefine: int BRAC_RECORD_FLAGS_MIXAUDIO
com.bairuitech.anychat.AnyChatDefine: int BRAC_RECORD_FLAGS_MIXVIDEO
com.bairuitech.anychat.AnyChatDefine: int BRAC_RECORD_FLAGS_ABREAST
com.bairuitech.anychat.AnyChatDefine: int BRAC_RECORD_FLAGS_STEREO
com.bairuitech.anychat.AnyChatDefine: int BRAC_RECORD_FLAGS_STREAM
com.bairuitech.anychat.AnyChatDefine: int BRAC_RECORD_FLAGS_USERFILENAME
com.bairuitech.anychat.AnyChatDefine: int BRAC_USERSTATE_CAMERA
com.bairuitech.anychat.AnyChatDefine: int BRAC_USERSTATE_HOLDMIC
com.bairuitech.anychat.AnyChatDefine: int BRAC_USERSTATE_SPEAKVOLUME
com.bairuitech.anychat.AnyChatDefine: int BRAC_USERSTATE_RECORDING
com.bairuitech.anychat.AnyChatDefine: int BRAC_USERSTATE_LEVEL
com.bairuitech.anychat.AnyChatDefine: int BRAC_USERSTATE_NICKNAME
com.bairuitech.anychat.AnyChatDefine: int BRAC_USERSTATE_LOCALIP
com.bairuitech.anychat.AnyChatDefine: int BRAC_USERSTATE_INTERNETIP
com.bairuitech.anychat.AnyChatDefine: int BRAC_USERSTATE_VIDEOBITRATE
com.bairuitech.anychat.AnyChatDefine: int BRAC_USERSTATE_AUDIOBITRATE
com.bairuitech.anychat.AnyChatDefine: int BRAC_USERSTATE_P2PCONNECT
com.bairuitech.anychat.AnyChatDefine: int BRAC_USERSTATE_NETWORKSTATUS
com.bairuitech.anychat.AnyChatDefine: int BRAC_USERSTATE_VIDEOSIZE
com.bairuitech.anychat.AnyChatDefine: int BRAC_USERSTATE_PACKLOSSRATE
com.bairuitech.anychat.AnyChatDefine: int BRAC_USERSTATE_DEVICETYPE
com.bairuitech.anychat.AnyChatDefine: int BRAC_USERSTATE_SELFUSERSTATUS
com.bairuitech.anychat.AnyChatDefine: int BRAC_USERSTATE_SELFUSERID
com.bairuitech.anychat.AnyChatDefine: int BRAC_USERSTATE_VIDEOROTATION
com.bairuitech.anychat.AnyChatDefine: int BRAC_USERSTATE_VIDEOMIRRORED
com.bairuitech.anychat.AnyChatDefine: int BRAC_ROOMSTATE_ROOMNAME
com.bairuitech.anychat.AnyChatDefine: int BRAC_ROOMSTATE_ONLINEUSERS
com.bairuitech.anychat.AnyChatDefine: int BRAC_VIDEOCALL_EVENT_REQUEST
com.bairuitech.anychat.AnyChatDefine: int BRAC_VIDEOCALL_EVENT_REPLY
com.bairuitech.anychat.AnyChatDefine: int BRAC_VIDEOCALL_EVENT_START
com.bairuitech.anychat.AnyChatDefine: int BRAC_VIDEOCALL_EVENT_FINISH
com.bairuitech.anychat.AnyChatDefine: int BRAC_VIDEOCALL_FLAGS_AUDIO
com.bairuitech.anychat.AnyChatDefine: int BRAC_VIDEOCALL_FLAGS_VIDEO
com.bairuitech.anychat.AnyChatDefine: int BRAC_VIDEOCALL_FLAGS_FBSRCAUDIO
com.bairuitech.anychat.AnyChatDefine: int BRAC_VIDEOCALL_FLAGS_FBSRCVIDEO
com.bairuitech.anychat.AnyChatDefine: int BRAC_VIDEOCALL_FLAGS_FBTARAUDIO
com.bairuitech.anychat.AnyChatDefine: int BRAC_VIDEOCALL_FLAGS_FBTARVIDEO
com.bairuitech.anychat.AnyChatDefine: int BRAC_ROTATION_FLAGS_MIRRORED
com.bairuitech.anychat.AnyChatDefine: int BRAC_ROTATION_FLAGS_ROTATION90
com.bairuitech.anychat.AnyChatDefine: int BRAC_ROTATION_FLAGS_ROTATION180
com.bairuitech.anychat.AnyChatDefine: int BRAC_ROTATION_FLAGS_ROTATION270
com.bairuitech.anychat.AnyChatDefine: int BRAC_USERINFO_CTRLCODE_ROTATION
com.bairuitech.anychat.AnyChatDefine: int BRAC_USERINFO_CTRLCODE_DEBUGLOG
com.bairuitech.anychat.AnyChatDefine: int BRAC_USERINFO_CTRLCODE_LVORIENTFIX
com.bairuitech.anychat.AnyChatDefine: int BRAC_ERRORCODE_SUCCESS
com.bairuitech.anychat.AnyChatDefine: int BRAC_ERRORCODE_SESSION_QUIT
com.bairuitech.anychat.AnyChatDefine: int BRAC_ERRORCODE_SESSION_OFFLINE
com.bairuitech.anychat.AnyChatDefine: int BRAC_ERRORCODE_SESSION_BUSY
com.bairuitech.anychat.AnyChatDefine: int BRAC_ERRORCODE_SESSION_REFUSE
com.bairuitech.anychat.AnyChatDefine: int BRAC_ERRORCODE_SESSION_TIMEOUT
com.bairuitech.anychat.AnyChatDefine: int BRAC_ERRORCODE_SESSION_DISCONNECT
com.bairuitech.anychat.AnyChatDefine: int ANYCHAT_RECORD_FLAGS_VIDEO
com.bairuitech.anychat.AnyChatDefine: int ANYCHAT_RECORD_FLAGS_AUDIO
com.bairuitech.anychat.AnyChatDefine: int ANYCHAT_RECORD_FLAGS_SERVER
com.bairuitech.anychat.AnyChatDefine: int ANYCHAT_RECORD_FLAGS_MIXAUDIO
com.bairuitech.anychat.AnyChatDefine: int ANYCHAT_RECORD_FLAGS_MIXVIDEO
com.bairuitech.anychat.AnyChatDefine: int ANYCHAT_RECORD_FLAGS_ABREAST
com.bairuitech.anychat.AnyChatDefine: int ANYCHAT_RECORD_FLAGS_STEREO
com.bairuitech.anychat.AnyChatDefine: int ANYCHAT_RECORD_FLAGS_SNAPSHOT
com.bairuitech.anychat.AnyChatDefine: int ANYCHAT_RECORD_FLAGS_LOCALCB
com.bairuitech.anychat.AnyChatDefine: int ANYCHAT_RECORD_FLAGS_STREAM
com.bairuitech.anychat.AnyChatDefine: int ANYCHAT_RECORD_FLAGS_USERFILENAME
com.bairuitech.anychat.AnyChatDefine: AnyChatDefine()
com.bairuitech.anychat.AnyChatOrientationEventListener
com.bairuitech.anychat.AnyChatOrientationEventListener: AnyChatOrientationEventListener(android.content.Context,int)
com.bairuitech.anychat.AnyChatOrientationEventListener: void onOrientationChanged(int)
com.bairuitech.anychat.AnyChatOutParam
com.bairuitech.anychat.AnyChatOutParam: int iValue
com.bairuitech.anychat.AnyChatOutParam: java.lang.String szValue
com.bairuitech.anychat.AnyChatOutParam: int[] intArray
com.bairuitech.anychat.AnyChatOutParam: byte[] byteArray
com.bairuitech.anychat.AnyChatOutParam: double fValue
com.bairuitech.anychat.AnyChatOutParam: AnyChatOutParam()
com.bairuitech.anychat.AnyChatOutParam: int GetIntValue()
com.bairuitech.anychat.AnyChatOutParam: void SetIntValue(int)
com.bairuitech.anychat.AnyChatOutParam: double GetFloatValue()
com.bairuitech.anychat.AnyChatOutParam: void SetFloatValue(double)
com.bairuitech.anychat.AnyChatOutParam: java.lang.String GetStrValue()
com.bairuitech.anychat.AnyChatOutParam: void SetStrValue(java.lang.String)
com.bairuitech.anychat.AnyChatOutParam: int[] GetIntArray()
com.bairuitech.anychat.AnyChatOutParam: void SetIntArray(int[])
com.bairuitech.anychat.AnyChatOutParam: byte[] GetByteArray()
com.bairuitech.anychat.AnyChatOutParam: void SetByteArray(byte[])
com.bairuitech.anychat.AnyChatPrivateChatEvent
com.bairuitech.anychat.AnyChatPrivateChatEvent: void OnAnyChatPrivateRequestMessage(int,int)
com.bairuitech.anychat.AnyChatPrivateChatEvent: void OnAnyChatPrivateEchoMessage(int,int)
com.bairuitech.anychat.AnyChatPrivateChatEvent: void OnAnyChatPrivateExitMessage(int,int)
com.bairuitech.anychat.AnyChatRecordEvent
com.bairuitech.anychat.AnyChatRecordEvent: void OnAnyChatRecordEvent(int,java.lang.String,int,int,int,java.lang.String)
com.bairuitech.anychat.AnyChatRecordEvent: void OnAnyChatSnapShotEvent(int,java.lang.String,int,int,java.lang.String)
com.bairuitech.anychat.AnyChatSensorHelper
com.bairuitech.anychat.AnyChatSensorHelper: com.bairuitech.anychat.AnyChatOrientationEventListener orientationListener
com.bairuitech.anychat.AnyChatSensorHelper: float LastXSpead
com.bairuitech.anychat.AnyChatSensorHelper: float LastYSpead
com.bairuitech.anychat.AnyChatSensorHelper: float LastZSpead
com.bairuitech.anychat.AnyChatSensorHelper: boolean bCameraNeedFocus
com.bairuitech.anychat.AnyChatSensorHelper: java.util.Date LastSportTime
com.bairuitech.anychat.AnyChatSensorHelper: AnyChatSensorHelper()
com.bairuitech.anychat.AnyChatSensorHelper: void InitSensor(android.content.Context)
com.bairuitech.anychat.AnyChatSensorHelper: void DestroySensor()
com.bairuitech.anychat.AnyChatSensorHelper: void onAccuracyChanged(android.hardware.Sensor,int)
com.bairuitech.anychat.AnyChatSensorHelper: void onSensorChanged(android.hardware.SensorEvent)
com.bairuitech.anychat.AnyChatStateChgEvent
com.bairuitech.anychat.AnyChatStateChgEvent: void OnAnyChatMicStateChgMessage(int,boolean)
com.bairuitech.anychat.AnyChatStateChgEvent: void OnAnyChatCameraStateChgMessage(int,int)
com.bairuitech.anychat.AnyChatStateChgEvent: void OnAnyChatChatModeChgMessage(int,boolean)
com.bairuitech.anychat.AnyChatStateChgEvent: void OnAnyChatActiveStateChgMessage(int,int)
com.bairuitech.anychat.AnyChatStateChgEvent: void OnAnyChatP2PConnectStateMessage(int,int)
com.bairuitech.anychat.AnyChatTextMsgEvent
com.bairuitech.anychat.AnyChatTextMsgEvent: void OnAnyChatTextMessage(int,int,boolean,java.lang.String)
com.bairuitech.anychat.AnyChatTransDataEvent
com.bairuitech.anychat.AnyChatTransDataEvent: void OnAnyChatTransFile(int,java.lang.String,java.lang.String,int,int,int,int)
com.bairuitech.anychat.AnyChatTransDataEvent: void OnAnyChatTransBuffer(int,byte[],int)
com.bairuitech.anychat.AnyChatTransDataEvent: void OnAnyChatTransBufferEx(int,byte[],int,int,int,int)
com.bairuitech.anychat.AnyChatTransDataEvent: void OnAnyChatSDKFilterData(byte[],int)
com.bairuitech.anychat.AnyChatUserInfoEvent
com.bairuitech.anychat.AnyChatUserInfoEvent: void OnAnyChatUserInfoUpdate(int,int)
com.bairuitech.anychat.AnyChatUserInfoEvent: void OnAnyChatFriendStatus(int,int)
com.bairuitech.anychat.AnyChatVideoCallEvent
com.bairuitech.anychat.AnyChatVideoCallEvent: void OnAnyChatVideoCallEvent(int,int,int,int,int,java.lang.String)
com.bairuitech.anychat.AnyChatVideoHelper
com.bairuitech.anychat.AnyChatVideoHelper: int MAX_VIDEO_NUM
com.bairuitech.anychat.AnyChatVideoHelper: com.bairuitech.anychat.VideoRenderer[] render
com.bairuitech.anychat.AnyChatVideoHelper: AnyChatVideoHelper()
com.bairuitech.anychat.AnyChatVideoHelper: int bindVideo(android.view.SurfaceHolder)
com.bairuitech.anychat.AnyChatVideoHelper: void SetVideoUser(int,int)
com.bairuitech.anychat.AnyChatVideoHelper: int SetVideoFmt(int,int,int)
com.bairuitech.anychat.AnyChatVideoHelper: void setMaxCutScale(int,float)
com.bairuitech.anychat.AnyChatVideoHelper: void ShowVideo(int,byte[],int,int)
com.bairuitech.anychat.AnyChatVideoHelper: com.bairuitech.anychat.VideoRenderer GetRenderByUserId(int)
com.bairuitech.anychat.VideoRenderer
com.bairuitech.anychat.VideoRenderer: android.graphics.Bitmap bitmap
com.bairuitech.anychat.VideoRenderer: android.view.SurfaceHolder surfaceHolder
com.bairuitech.anychat.VideoRenderer: android.graphics.Rect srcRect
com.bairuitech.anychat.VideoRenderer: android.graphics.Rect dstRect
com.bairuitech.anychat.VideoRenderer: float dstBottomScale
com.bairuitech.anychat.VideoRenderer: float dstRightScale
com.bairuitech.anychat.VideoRenderer: float max_cut_imgscale
com.bairuitech.anychat.VideoRenderer: int mUserid
com.bairuitech.anychat.VideoRenderer: VideoRenderer(android.view.SurfaceHolder)
com.bairuitech.anychat.VideoRenderer: int GetUserId()
com.bairuitech.anychat.VideoRenderer: void SetUserId(int)
com.bairuitech.anychat.VideoRenderer: void setMaxCutScale(float)
com.bairuitech.anychat.VideoRenderer: void changeDestRect(int,int)
com.bairuitech.anychat.VideoRenderer: void surfaceChanged(android.view.SurfaceHolder,int,int,int)
com.bairuitech.anychat.VideoRenderer: void surfaceCreated(android.view.SurfaceHolder)
com.bairuitech.anychat.VideoRenderer: void surfaceDestroyed(android.view.SurfaceHolder)
com.bairuitech.anychat.VideoRenderer: android.graphics.Bitmap CreateBitmap(int,int)
com.bairuitech.anychat.VideoRenderer: void SetCoordinates(float,float,float,float)
com.bairuitech.anychat.VideoRenderer: void DrawByteBuffer(byte[],int,int)
com.bairuitech.config.ConfigEntity
com.bairuitech.config.ConfigEntity: int VIDEO_MODE_SERVERCONFIG
com.bairuitech.config.ConfigEntity: int VIDEO_MODE_CUSTOMCONFIG
com.bairuitech.config.ConfigEntity: int VIDEO_QUALITY_NORMAL
com.bairuitech.config.ConfigEntity: int VIDEO_QUALITY_GOOD
com.bairuitech.config.ConfigEntity: int VIDEO_QUALITY_BEST
com.bairuitech.config.ConfigEntity: int mConfigMode
com.bairuitech.config.ConfigEntity: int mResolutionWidth
com.bairuitech.config.ConfigEntity: int mResolutionHeight
com.bairuitech.config.ConfigEntity: int mVideoBitrate
com.bairuitech.config.ConfigEntity: int mVideoFps
com.bairuitech.config.ConfigEntity: int mVideoQuality
com.bairuitech.config.ConfigEntity: int mVideoPreset
com.bairuitech.config.ConfigEntity: int mVideoOverlay
com.bairuitech.config.ConfigEntity: int mVideoRotateMode
com.bairuitech.config.ConfigEntity: int mFixColorDeviation
com.bairuitech.config.ConfigEntity: int mVideoShowGPURender
com.bairuitech.config.ConfigEntity: int mVideoAutoRotation
com.bairuitech.config.ConfigEntity: int mEnableP2P
com.bairuitech.config.ConfigEntity: int mUseARMv6Lib
com.bairuitech.config.ConfigEntity: int mEnableAEC
com.bairuitech.config.ConfigEntity: int mUseHWCodec
com.bairuitech.config.ConfigEntity: ConfigEntity()
com.bairuitech.config.ConfigService
com.bairuitech.config.ConfigService: ConfigService()
com.bairuitech.config.ConfigService: com.bairuitech.config.ConfigEntity LoadConfig(android.content.Context)
com.bairuitech.config.ConfigService: void SaveConfig(android.content.Context,com.bairuitech.config.ConfigEntity)
com.bairuitech.helloanychat.MainActivity
com.bairuitech.helloanychat.MainActivity: int ACTIVITY_ID_VIDEOCONFIG
com.bairuitech.helloanychat.MainActivity: android.widget.ListView mRoleList
com.bairuitech.helloanychat.MainActivity: android.widget.EditText mEditIP
com.bairuitech.helloanychat.MainActivity: android.widget.EditText mEditPort
com.bairuitech.helloanychat.MainActivity: android.widget.EditText mEditName
com.bairuitech.helloanychat.MainActivity: android.widget.EditText mEditRoomID
com.bairuitech.helloanychat.MainActivity: android.widget.TextView mBottomConnMsg
com.bairuitech.helloanychat.MainActivity: android.widget.TextView mBottomBuildMsg
com.bairuitech.helloanychat.MainActivity: android.widget.Button mBtnStart
com.bairuitech.helloanychat.MainActivity: android.widget.Button mBtnLogout
com.bairuitech.helloanychat.MainActivity: android.widget.Button mBtnWaiting
com.bairuitech.helloanychat.MainActivity: android.widget.LinearLayout mWaitingLayout
com.bairuitech.helloanychat.MainActivity: android.widget.LinearLayout mProgressLayout
com.bairuitech.helloanychat.MainActivity: android.widget.TextView mTextMessage
com.bairuitech.helloanychat.MainActivity: android.widget.ImageView mImageOuter
com.bairuitech.helloanychat.MainActivity: android.widget.ImageView mImageOther
com.bairuitech.helloanychat.MainActivity: int mConnectMessageCount
com.bairuitech.helloanychat.MainActivity: java.lang.StringBuilder mConnectMessageStr
com.bairuitech.helloanychat.MainActivity: java.lang.String mStrIP
com.bairuitech.helloanychat.MainActivity: java.lang.String mStrName
com.bairuitech.helloanychat.MainActivity: int mSPort
com.bairuitech.helloanychat.MainActivity: int mSRoomID
com.bairuitech.helloanychat.MainActivity: int mEnterRommID
com.bairuitech.helloanychat.MainActivity: int SHOWLOGINSTATEFLAG
com.bairuitech.helloanychat.MainActivity: int SHOWWAITINGSTATEFLAG
com.bairuitech.helloanychat.MainActivity: int SHOWLOGOUTSTATEFLAG
com.bairuitech.helloanychat.MainActivity: int LOCALVIDEOAUTOROTATION
com.bairuitech.helloanychat.MainActivity: java.util.List mRoleInfoList
com.bairuitech.helloanychat.MainActivity: com.bairuitech.helloanychat.RoleListAdapter mAdapter
com.bairuitech.helloanychat.MainActivity: int UserselfID
com.bairuitech.helloanychat.MainActivity: com.bairuitech.anychat.AnyChatCoreSDK anyChatSDK
com.bairuitech.helloanychat.MainActivity: int MESSAGE_CONNECT_MESSAGE
com.bairuitech.helloanychat.MainActivity: int MESSAGE_CONNECT_MESSAGE_INTEVAL
com.bairuitech.helloanychat.MainActivity: int MESSAGE_CONNECT_TIMEOUT
com.bairuitech.helloanychat.MainActivity: int MESSAGE_CONNECT_TIMEOUT_INTEVAL
com.bairuitech.helloanychat.MainActivity: android.os.Handler mHandler
com.bairuitech.helloanychat.MainActivity: android.content.BroadcastReceiver mBroadcastReceiver
com.bairuitech.helloanychat.MainActivity: MainActivity()
com.bairuitech.helloanychat.MainActivity: void onCreate(android.os.Bundle)
com.bairuitech.helloanychat.MainActivity: void InitSDK()
com.bairuitech.helloanychat.MainActivity: void InitLayout()
com.bairuitech.helloanychat.MainActivity: void initLoginConfig()
com.bairuitech.helloanychat.MainActivity: void readLoginDate()
com.bairuitech.helloanychat.MainActivity: void saveLoginData()
com.bairuitech.helloanychat.MainActivity: boolean checkInputData()
com.bairuitech.helloanychat.MainActivity: void setBtnVisible(int)
com.bairuitech.helloanychat.MainActivity: void initWaitingTips()
com.bairuitech.helloanychat.MainActivity: void hideKeyboard()
com.bairuitech.helloanychat.MainActivity: void onDestroy()
com.bairuitech.helloanychat.MainActivity: void onResume()
com.bairuitech.helloanychat.MainActivity: void onRestart()
com.bairuitech.helloanychat.MainActivity: void OnAnyChatConnectMessage(boolean)
com.bairuitech.helloanychat.MainActivity: void OnAnyChatLoginMessage(int,int)
com.bairuitech.helloanychat.MainActivity: void OnAnyChatEnterRoomMessage(int,int)
com.bairuitech.helloanychat.MainActivity: void OnAnyChatOnlineUserMessage(int,int)
com.bairuitech.helloanychat.MainActivity: void updateUserList()
com.bairuitech.helloanychat.MainActivity: void onSelectItem(int)
com.bairuitech.helloanychat.MainActivity: int getRoleRandomIconID()
com.bairuitech.helloanychat.MainActivity: void onActivityResult(int,int,android.content.Intent)
com.bairuitech.helloanychat.MainActivity: void ApplyVideoConfig()
com.bairuitech.helloanychat.MainActivity: void OnAnyChatUserAtRoomMessage(int,boolean)
com.bairuitech.helloanychat.MainActivity: void OnAnyChatLinkCloseMessage(int)
com.bairuitech.helloanychat.MainActivity: void registerBoradcastReceiver()
com.bairuitech.helloanychat.MainActivity: void updateConnectStatus(boolean)
com.bairuitech.helloanychat.MainActivity: void login()
com.bairuitech.helloanychat.MainActivity: void updateConnectMessage()
com.bairuitech.helloanychat.MainActivity: void access$0(com.bairuitech.helloanychat.MainActivity)
com.bairuitech.helloanychat.MainActivity: void access$1(com.bairuitech.helloanychat.MainActivity,int)
com.bairuitech.helloanychat.MainActivity: android.widget.ListView access$2(com.bairuitech.helloanychat.MainActivity)
com.bairuitech.helloanychat.MainActivity: android.widget.TextView access$3(com.bairuitech.helloanychat.MainActivity)
com.bairuitech.helloanychat.MainActivity: boolean access$4(com.bairuitech.helloanychat.MainActivity)
com.bairuitech.helloanychat.MainActivity: android.widget.EditText access$5(com.bairuitech.helloanychat.MainActivity)
com.bairuitech.helloanychat.MainActivity: void access$6(com.bairuitech.helloanychat.MainActivity,int)
com.bairuitech.helloanychat.MainActivity: android.widget.EditText access$7(com.bairuitech.helloanychat.MainActivity)
com.bairuitech.helloanychat.MainActivity: void access$8(com.bairuitech.helloanychat.MainActivity,java.lang.String)
com.bairuitech.helloanychat.MainActivity: android.widget.EditText access$9(com.bairuitech.helloanychat.MainActivity)
com.bairuitech.helloanychat.MainActivity: void access$10(com.bairuitech.helloanychat.MainActivity,java.lang.String)
com.bairuitech.helloanychat.MainActivity: android.widget.EditText access$11(com.bairuitech.helloanychat.MainActivity)
com.bairuitech.helloanychat.MainActivity: void access$12(com.bairuitech.helloanychat.MainActivity,int)
com.bairuitech.helloanychat.MainActivity: java.lang.String access$13(com.bairuitech.helloanychat.MainActivity)
com.bairuitech.helloanychat.MainActivity: int access$14(com.bairuitech.helloanychat.MainActivity)
com.bairuitech.helloanychat.MainActivity: java.lang.String access$15(com.bairuitech.helloanychat.MainActivity)
com.bairuitech.helloanychat.MainActivity: java.util.List access$16(com.bairuitech.helloanychat.MainActivity)
com.bairuitech.helloanychat.MainActivity: void access$17(com.bairuitech.helloanychat.MainActivity,int)
com.bairuitech.helloanychat.MainActivity: android.os.Handler access$18(com.bairuitech.helloanychat.MainActivity)
com.bairuitech.helloanychat.MainActivity: void access$19(com.bairuitech.helloanychat.MainActivity)
com.bairuitech.helloanychat.MainActivity$1
com.bairuitech.helloanychat.MainActivity$1: com.bairuitech.helloanychat.MainActivity this$0
com.bairuitech.helloanychat.MainActivity$1: MainActivity$1(com.bairuitech.helloanychat.MainActivity)
com.bairuitech.helloanychat.MainActivity$1: void handleMessage(android.os.Message)
com.bairuitech.helloanychat.MainActivity$2
com.bairuitech.helloanychat.MainActivity$2: com.bairuitech.helloanychat.MainActivity this$0
com.bairuitech.helloanychat.MainActivity$2: MainActivity$2(com.bairuitech.helloanychat.MainActivity)
com.bairuitech.helloanychat.MainActivity$2: void onReceive(android.content.Context,android.content.Intent)
com.bairuitech.helloanychat.MainActivity$3
com.bairuitech.helloanychat.MainActivity$3: com.bairuitech.helloanychat.MainActivity this$0
com.bairuitech.helloanychat.MainActivity$3: MainActivity$3(com.bairuitech.helloanychat.MainActivity)
com.bairuitech.helloanychat.MainActivity$3: void onClick(android.view.View)
com.bairuitech.helloanychat.MainActivity$4
com.bairuitech.helloanychat.MainActivity$4: com.bairuitech.helloanychat.MainActivity this$0
com.bairuitech.helloanychat.MainActivity$4: MainActivity$4(com.bairuitech.helloanychat.MainActivity)
com.bairuitech.helloanychat.MainActivity$4: void onClick(android.view.View)
com.bairuitech.helloanychat.MainActivity$5
com.bairuitech.helloanychat.MainActivity$5: com.bairuitech.helloanychat.MainActivity this$0
com.bairuitech.helloanychat.MainActivity$5: MainActivity$5(com.bairuitech.helloanychat.MainActivity)
com.bairuitech.helloanychat.MainActivity$5: void onClick(android.view.View)
com.bairuitech.helloanychat.MainActivity$6
com.bairuitech.helloanychat.MainActivity$6: com.bairuitech.helloanychat.MainActivity this$0
com.bairuitech.helloanychat.MainActivity$6: MainActivity$6(com.bairuitech.helloanychat.MainActivity)
com.bairuitech.helloanychat.MainActivity$6: void run()
com.bairuitech.helloanychat.MainActivity$7
com.bairuitech.helloanychat.MainActivity$7: com.bairuitech.helloanychat.MainActivity this$0
com.bairuitech.helloanychat.MainActivity$7: MainActivity$7(com.bairuitech.helloanychat.MainActivity)
com.bairuitech.helloanychat.MainActivity$7: void onItemClick(android.widget.AdapterView,android.view.View,int,long)
com.bairuitech.helloanychat.RoleInfo
com.bairuitech.helloanychat.RoleInfo: java.lang.String mStrName
com.bairuitech.helloanychat.RoleInfo: java.lang.String mStrUserID
com.bairuitech.helloanychat.RoleInfo: int mRoleIconID
com.bairuitech.helloanychat.RoleInfo: RoleInfo()
com.bairuitech.helloanychat.RoleInfo: void setName(java.lang.String)
com.bairuitech.helloanychat.RoleInfo: java.lang.String getName()
com.bairuitech.helloanychat.RoleInfo: void setUserID(java.lang.String)
com.bairuitech.helloanychat.RoleInfo: java.lang.String getUserID()
com.bairuitech.helloanychat.RoleInfo: void setRoleIconID(int)
com.bairuitech.helloanychat.RoleInfo: int getRoleIconID()
com.bairuitech.helloanychat.RoleListAdapter
com.bairuitech.helloanychat.RoleListAdapter: android.content.Context mContext
com.bairuitech.helloanychat.RoleListAdapter: java.util.List mRoleList
com.bairuitech.helloanychat.RoleListAdapter: RoleListAdapter(android.content.Context,java.util.List)
com.bairuitech.helloanychat.RoleListAdapter: int getCount()
com.bairuitech.helloanychat.RoleListAdapter: java.lang.Object getItem(int)
com.bairuitech.helloanychat.RoleListAdapter: long getItemId(int)
com.bairuitech.helloanychat.RoleListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)
com.bairuitech.helloanychat.RoleListAdapter$ViewHolder
com.bairuitech.helloanychat.RoleListAdapter$ViewHolder: android.widget.TextView mname
com.bairuitech.helloanychat.RoleListAdapter$ViewHolder: android.widget.TextView mRoleID
com.bairuitech.helloanychat.RoleListAdapter$ViewHolder: android.widget.ImageView mRoleIcon
com.bairuitech.helloanychat.RoleListAdapter$ViewHolder: com.bairuitech.helloanychat.RoleListAdapter this$0
com.bairuitech.helloanychat.RoleListAdapter$ViewHolder: RoleListAdapter$ViewHolder(com.bairuitech.helloanychat.RoleListAdapter)
com.bairuitech.helloanychat.ValueUtils
com.bairuitech.helloanychat.ValueUtils: ValueUtils()
com.bairuitech.helloanychat.ValueUtils: boolean isListNotEmpty(java.util.List)
com.bairuitech.helloanychat.ValueUtils: boolean isListEmpty(java.util.List)
com.bairuitech.helloanychat.ValueUtils: boolean isStrEmpty(java.lang.String)
com.bairuitech.helloanychat.ValueUtils: boolean isStrNotEmpty(java.lang.String)
com.bairuitech.helloanychat.ValueUtils: boolean isNotEmpty(java.lang.Object)
com.bairuitech.helloanychat.ValueUtils: boolean isEmpty(java.lang.Object)
com.bairuitech.helloanychat.ValueUtils: boolean isHasEmptyView(android.view.View[])
com.bairuitech.helloanychat.ValueUtils: java.lang.String bolean2String(boolean)
com.bairuitech.helloanychat.VideoActivity
com.bairuitech.helloanychat.VideoActivity: int UPDATEVIDEOBITDELAYMILLIS
com.bairuitech.helloanychat.VideoActivity: int userID
com.bairuitech.helloanychat.VideoActivity: boolean bOnPaused
com.bairuitech.helloanychat.VideoActivity: boolean bSelfVideoOpened
com.bairuitech.helloanychat.VideoActivity: boolean bOtherVideoOpened
com.bairuitech.helloanychat.VideoActivity: java.lang.Boolean mFirstGetVideoBitrate
com.bairuitech.helloanychat.VideoActivity: java.lang.Boolean mFirstGetAudioBitrate
com.bairuitech.helloanychat.VideoActivity: android.view.SurfaceView mOtherView
com.bairuitech.helloanychat.VideoActivity: android.view.SurfaceView mMyView
com.bairuitech.helloanychat.VideoActivity: android.widget.ImageButton mImgSwitchVideo
com.bairuitech.helloanychat.VideoActivity: android.widget.Button mEndCallBtn
com.bairuitech.helloanychat.VideoActivity: android.widget.ImageButton mBtnCameraCtrl
com.bairuitech.helloanychat.VideoActivity: android.widget.ImageButton mBtnSpeakCtrl
com.bairuitech.helloanychat.VideoActivity: android.view.View mCtrlLayout
com.bairuitech.helloanychat.VideoActivity: android.widget.ImageView mImageVideoEnd
com.bairuitech.helloanychat.VideoActivity: android.widget.ImageView mImageCameraSwitch
com.bairuitech.helloanychat.VideoActivity: android.widget.ImageView mImageSpeakCtrl
com.bairuitech.helloanychat.VideoActivity: int MESSAGE_CONTROL_LAYOUT
com.bairuitech.helloanychat.VideoActivity: int MESSAGE_CONTROL_LAYOUT_INTEVAL
com.bairuitech.helloanychat.VideoActivity: android.os.Handler mHandler
com.bairuitech.helloanychat.VideoActivity: com.bairuitech.anychat.AnyChatCoreSDK anychatSDK
com.bairuitech.helloanychat.VideoActivity: android.os.Handler handler
com.bairuitech.helloanychat.VideoActivity: java.lang.Runnable runnable
com.bairuitech.helloanychat.VideoActivity: android.view.View$OnClickListener onClickListener
com.bairuitech.helloanychat.VideoActivity: VideoActivity()
com.bairuitech.helloanychat.VideoActivity: void onCreate(android.os.Bundle)
com.bairuitech.helloanychat.VideoActivity: void InitSDK()
com.bairuitech.helloanychat.VideoActivity: void InitLayout()
com.bairuitech.helloanychat.VideoActivity: void refreshAV()
com.bairuitech.helloanychat.VideoActivity: void exitVideoDialog()
com.bairuitech.helloanychat.VideoActivity: void destroyCurActivity()
com.bairuitech.helloanychat.VideoActivity: boolean onKeyDown(int,android.view.KeyEvent)
com.bairuitech.helloanychat.VideoActivity: void onRestart()
com.bairuitech.helloanychat.VideoActivity: void onResume()
com.bairuitech.helloanychat.VideoActivity: void onPause()
com.bairuitech.helloanychat.VideoActivity: void onDestroy()
com.bairuitech.helloanychat.VideoActivity: void adjustLocalVideo(boolean)
com.bairuitech.helloanychat.VideoActivity: void onConfigurationChanged(android.content.res.Configuration)
com.bairuitech.helloanychat.VideoActivity: void OnAnyChatConnectMessage(boolean)
com.bairuitech.helloanychat.VideoActivity: void OnAnyChatLoginMessage(int,int)
com.bairuitech.helloanychat.VideoActivity: void OnAnyChatEnterRoomMessage(int,int)
com.bairuitech.helloanychat.VideoActivity: void OnAnyChatOnlineUserMessage(int,int)
com.bairuitech.helloanychat.VideoActivity: void OnAnyChatUserAtRoomMessage(int,boolean)
com.bairuitech.helloanychat.VideoActivity: void OnAnyChatLinkCloseMessage(int)
com.bairuitech.helloanychat.VideoActivity: void updateControlLayout(boolean)
com.bairuitech.helloanychat.VideoActivity: void access$0(com.bairuitech.helloanychat.VideoActivity,boolean)
com.bairuitech.helloanychat.VideoActivity: void access$1(com.bairuitech.helloanychat.VideoActivity,java.lang.Boolean)
com.bairuitech.helloanychat.VideoActivity: android.view.SurfaceView access$2(com.bairuitech.helloanychat.VideoActivity)
com.bairuitech.helloanychat.VideoActivity: void access$3(com.bairuitech.helloanychat.VideoActivity,java.lang.Boolean)
com.bairuitech.helloanychat.VideoActivity: java.lang.Boolean access$4(com.bairuitech.helloanychat.VideoActivity)
com.bairuitech.helloanychat.VideoActivity: java.lang.Boolean access$5(com.bairuitech.helloanychat.VideoActivity)
com.bairuitech.helloanychat.VideoActivity: void access$6(com.bairuitech.helloanychat.VideoActivity,boolean)
com.bairuitech.helloanychat.VideoActivity: void access$7(com.bairuitech.helloanychat.VideoActivity)
com.bairuitech.helloanychat.VideoActivity: android.widget.ImageButton access$8(com.bairuitech.helloanychat.VideoActivity)
com.bairuitech.helloanychat.VideoActivity: android.widget.ImageView access$9(com.bairuitech.helloanychat.VideoActivity)
com.bairuitech.helloanychat.VideoActivity: android.widget.ImageButton access$10(com.bairuitech.helloanychat.VideoActivity)
com.bairuitech.helloanychat.VideoActivity: void access$11(com.bairuitech.helloanychat.VideoActivity)
com.bairuitech.helloanychat.VideoActivity$1
com.bairuitech.helloanychat.VideoActivity$1: com.bairuitech.helloanychat.VideoActivity this$0
com.bairuitech.helloanychat.VideoActivity$1: VideoActivity$1(com.bairuitech.helloanychat.VideoActivity)
com.bairuitech.helloanychat.VideoActivity$1: void handleMessage(android.os.Message)
com.bairuitech.helloanychat.VideoActivity$2
com.bairuitech.helloanychat.VideoActivity$2: com.bairuitech.helloanychat.VideoActivity this$0
com.bairuitech.helloanychat.VideoActivity$2: VideoActivity$2(com.bairuitech.helloanychat.VideoActivity)
com.bairuitech.helloanychat.VideoActivity$2: void run()
com.bairuitech.helloanychat.VideoActivity$3
com.bairuitech.helloanychat.VideoActivity$3: com.bairuitech.helloanychat.VideoActivity this$0
com.bairuitech.helloanychat.VideoActivity$3: VideoActivity$3(com.bairuitech.helloanychat.VideoActivity)
com.bairuitech.helloanychat.VideoActivity$3: void onClick(android.view.View)
com.bairuitech.helloanychat.VideoActivity$4
com.bairuitech.helloanychat.VideoActivity$4: com.bairuitech.helloanychat.VideoActivity this$0
com.bairuitech.helloanychat.VideoActivity$4: VideoActivity$4(com.bairuitech.helloanychat.VideoActivity)
com.bairuitech.helloanychat.VideoActivity$4: void onClick(android.app.Dialog)
com.bairuitech.helloanychat.VideoConfig
com.bairuitech.helloanychat.VideoConfig: android.widget.ImageButton mImgBtnReturn
com.bairuitech.helloanychat.VideoConfig: android.widget.TextView mTitleName
com.bairuitech.helloanychat.VideoConfig: android.widget.Button mSaveBtn
com.bairuitech.helloanychat.VideoConfig: com.bairuitech.config.ConfigEntity mConfigEntity
com.bairuitech.helloanychat.VideoConfig: android.widget.RadioButton mServerModelConfigBtn
com.bairuitech.helloanychat.VideoConfig: android.widget.RadioButton mCustomModelConfigBtn
com.bairuitech.helloanychat.VideoConfig: android.widget.TextView mResolutionTV
com.bairuitech.helloanychat.VideoConfig: android.widget.CheckBox mEnableP2PBox
com.bairuitech.helloanychat.VideoConfig: android.widget.CheckBox mVideoOverlayBox
com.bairuitech.helloanychat.VideoConfig: android.widget.CheckBox mUseARMv6Box
com.bairuitech.helloanychat.VideoConfig: android.widget.CheckBox mUseAECBox
com.bairuitech.helloanychat.VideoConfig: android.widget.CheckBox mUseHWCodecBox
com.bairuitech.helloanychat.VideoConfig: android.widget.CheckBox mVideoRotateBox
com.bairuitech.helloanychat.VideoConfig: android.widget.CheckBox mFixColorDeviation
com.bairuitech.helloanychat.VideoConfig: android.widget.CheckBox mVideoShowGPURender
com.bairuitech.helloanychat.VideoConfig: android.widget.CheckBox mVideoAutoRotation
com.bairuitech.helloanychat.VideoConfig: android.widget.Spinner mVideoSizeSpinner
com.bairuitech.helloanychat.VideoConfig: android.widget.Spinner mVideoBitrateSpinner
com.bairuitech.helloanychat.VideoConfig: android.widget.Spinner mVideoFPSSpinner
com.bairuitech.helloanychat.VideoConfig: android.widget.Spinner mVideoQualitySpinner
com.bairuitech.helloanychat.VideoConfig: android.widget.Spinner mVideoPresetSpinner
com.bairuitech.helloanychat.VideoConfig: java.lang.String[] mArrVideoSizeStr
com.bairuitech.helloanychat.VideoConfig: int[] mArrVideoWidthValue
com.bairuitech.helloanychat.VideoConfig: int[] mArrVideoHeightValue
com.bairuitech.helloanychat.VideoConfig: java.lang.String[] mArrVideoBitrateStr
com.bairuitech.helloanychat.VideoConfig: int[] mArrVideoBitrateValue
com.bairuitech.helloanychat.VideoConfig: java.lang.String[] mArrVideofpsStr
com.bairuitech.helloanychat.VideoConfig: int[] mArrVideofpsValue
com.bairuitech.helloanychat.VideoConfig: java.lang.String[] mArrVideoQualityStr
com.bairuitech.helloanychat.VideoConfig: int[] mArrVideoQualityValue
com.bairuitech.helloanychat.VideoConfig: java.lang.String[] mArrVideoPresetStr
com.bairuitech.helloanychat.VideoConfig: int[] mArrVideoPresetValue
com.bairuitech.helloanychat.VideoConfig: android.view.View$OnClickListener onClickListener
com.bairuitech.helloanychat.VideoConfig: VideoConfig()
com.bairuitech.helloanychat.VideoConfig: void onCreate(android.os.Bundle)
com.bairuitech.helloanychat.VideoConfig: void InitialLayout()
com.bairuitech.helloanychat.VideoConfig: void CustomControlsShow(boolean)
com.bairuitech.helloanychat.VideoConfig: void SaveConfig()
com.bairuitech.helloanychat.VideoConfig: android.widget.Spinner InsertSpinnerInterface(int,java.lang.String[],int[],int)
com.bairuitech.helloanychat.VideoConfig: void destroyCurActivity()
com.bairuitech.helloanychat.VideoConfig: void onDestroy()
com.bairuitech.helloanychat.VideoConfig: void onPause()
com.bairuitech.helloanychat.VideoConfig: android.widget.Button access$0(com.bairuitech.helloanychat.VideoConfig)
com.bairuitech.helloanychat.VideoConfig: void access$1(com.bairuitech.helloanychat.VideoConfig)
com.bairuitech.helloanychat.VideoConfig: android.widget.RadioButton access$2(com.bairuitech.helloanychat.VideoConfig)
com.bairuitech.helloanychat.VideoConfig: void access$3(com.bairuitech.helloanychat.VideoConfig,boolean)
com.bairuitech.helloanychat.VideoConfig: android.widget.RadioButton access$4(com.bairuitech.helloanychat.VideoConfig)
com.bairuitech.helloanychat.VideoConfig: android.widget.ImageButton access$5(com.bairuitech.helloanychat.VideoConfig)
com.bairuitech.helloanychat.VideoConfig: void access$6(com.bairuitech.helloanychat.VideoConfig)
com.bairuitech.helloanychat.VideoConfig$1
com.bairuitech.helloanychat.VideoConfig$1: com.bairuitech.helloanychat.VideoConfig this$0
com.bairuitech.helloanychat.VideoConfig$1: VideoConfig$1(com.bairuitech.helloanychat.VideoConfig)
com.bairuitech.helloanychat.VideoConfig$1: void onClick(android.view.View)
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy[] values()
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy valueOf(java.lang.String)
com.google.gson.LongSerializationPolicy: com.google.gson.LongSerializationPolicy[] values()
com.google.gson.LongSerializationPolicy: com.google.gson.LongSerializationPolicy valueOf(java.lang.String)
com.google.gson.ModifyFirstLetterNamingPolicy$LetterModifier: com.google.gson.ModifyFirstLetterNamingPolicy$LetterModifier[] values()
com.google.gson.ModifyFirstLetterNamingPolicy$LetterModifier: com.google.gson.ModifyFirstLetterNamingPolicy$LetterModifier valueOf(java.lang.String)
com.google.gson.stream.JsonScope: com.google.gson.stream.JsonScope[] values()
com.google.gson.stream.JsonScope: com.google.gson.stream.JsonScope valueOf(java.lang.String)
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken[] values()
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken valueOf(java.lang.String)
com.iflytek.asr.AsrService.Asr
com.iflytek.asr.AsrService.Asr: java.lang.String TAG
com.iflytek.asr.AsrService.Asr: int MSG_START_RECORD
com.iflytek.asr.AsrService.Asr: int MSG_STOP_RECORD
com.iflytek.asr.AsrService.Asr: int MSG_SPEECH_START
com.iflytek.asr.AsrService.Asr: int MSG_SPEECH_END
com.iflytek.asr.AsrService.Asr: int MSG_SPEECH_FLUSH_END
com.iflytek.asr.AsrService.Asr: int MSG_SPEECH_NO_DETECT
com.iflytek.asr.AsrService.Asr: int MSG_RESPONSE_TIMEOUT
com.iflytek.asr.AsrService.Asr: int MSG_SPEECH_TIMEOUT
com.iflytek.asr.AsrService.Asr: int MSG_END_BY_USER
com.iflytek.asr.AsrService.Asr: int MSG_HAVE_RESULT
com.iflytek.asr.AsrService.Asr: int MSG_HAVE_RESTART
com.iflytek.asr.AsrService.Asr: java.util.List mResult
com.iflytek.asr.AsrService.Asr: com.yuning.activity.Aitalkmode mActivity
com.iflytek.asr.AsrService.Asr: boolean mNeedStop
com.iflytek.asr.AsrService.Asr: com.iflytek.asr.AsrService.Asr$OnCallback mOnCallback
com.iflytek.asr.AsrService.Asr: android.os.Handler mMsgHandler
com.iflytek.asr.AsrService.Asr: java.util.concurrent.locks.ReentrantLock asrRunLock
com.iflytek.asr.AsrService.Asr: long TIMEOUT_WAIT_QUEUE
com.iflytek.asr.AsrService.Asr: void <clinit>()
com.iflytek.asr.AsrService.Asr: Asr()
com.iflytek.asr.AsrService.Asr: void startRecoThread(com.yuning.activity.Aitalkmode)
com.iflytek.asr.AsrService.Asr: void startRecoThread(com.yuning.activity.Aitalkmode,com.iflytek.asr.AsrService.Asr$OnCallback)
com.iflytek.asr.AsrService.Asr: int onCallMessage(int)
com.iflytek.asr.AsrService.Asr: int onCallResult()
com.iflytek.asr.AsrService.Asr: void reStart()
com.iflytek.asr.AsrService.Asr: int appendData(byte[],int)
com.iflytek.asr.AsrService.Asr: int JniGetVersion()
com.iflytek.asr.AsrService.Asr: int JniCreate()
com.iflytek.asr.AsrService.Asr: int JniDestroy()
com.iflytek.asr.AsrService.Asr: int JniStart(java.lang.String)
com.iflytek.asr.AsrService.Asr: int JniStop()
com.iflytek.asr.AsrService.Asr: int JniRunTask()
com.iflytek.asr.AsrService.Asr: int JniGetResCount()
com.iflytek.asr.AsrService.Asr: int JniGetSentenceId(int)
com.iflytek.asr.AsrService.Asr: int JniGetConfidence(int)
com.iflytek.asr.AsrService.Asr: int JniGetSlotNumber(int)
com.iflytek.asr.AsrService.Asr: int JniGetItemNumber(int,int)
com.iflytek.asr.AsrService.Asr: int JniGetItemId(int,int,int)
com.iflytek.asr.AsrService.Asr: java.lang.String JniGetItemText(int,int,int)
com.iflytek.asr.AsrService.Asr: int JniAppendData(byte[],int)
com.iflytek.asr.AsrService.Asr: int JniEndData()
com.iflytek.asr.AsrService.Asr: int JniBuildGrammar(byte[],int)
com.iflytek.asr.AsrService.Asr: int JniAddLexiconItem(java.lang.String,int)
com.iflytek.asr.AsrService.Asr: int JniBeginLexicon(java.lang.String,boolean)
com.iflytek.asr.AsrService.Asr: int JniEndLexicon()
com.iflytek.asr.AsrService.Asr: int JniMakeVoiceTag(java.lang.String,java.lang.String,byte[],int)
com.iflytek.asr.AsrService.Asr: int JniSetParam(int,int)
com.iflytek.asr.AsrService.Asr: com.yuning.activity.Aitalkmode access$0()
com.iflytek.asr.AsrService.Asr: com.iflytek.asr.AsrService.Asr$OnCallback access$1()
com.iflytek.asr.AsrService.Asr: java.util.concurrent.locks.ReentrantLock access$2()
com.iflytek.asr.AsrService.Asr$1
com.iflytek.asr.AsrService.Asr$1: Asr$1()
com.iflytek.asr.AsrService.Asr$1: void handleMessage(android.os.Message)
com.iflytek.asr.AsrService.Asr$1AsrRunThread
com.iflytek.asr.AsrService.Asr$1AsrRunThread: boolean isAsrRunable
com.iflytek.asr.AsrService.Asr$1AsrRunThread: int nRet
com.iflytek.asr.AsrService.Asr$1AsrRunThread: Asr$1AsrRunThread()
com.iflytek.asr.AsrService.Asr$1AsrRunThread: void run()
com.iflytek.asr.AsrService.Asr$OnCallback
com.iflytek.asr.AsrService.Asr$OnCallback: void onCallback()
com.iflytek.asr.AsrService.AsrRecord
com.iflytek.asr.AsrService.AsrRecord: java.lang.String TAG
com.iflytek.asr.AsrService.AsrRecord: int BUFF_SIZE
com.iflytek.asr.AsrService.AsrRecord: int FRAME_BUFF
com.iflytek.asr.AsrService.AsrRecord: int SAMPLE_RATE
com.iflytek.asr.AsrService.AsrRecord: int READ_DELAY
com.iflytek.asr.AsrService.AsrRecord: long WAIT_TEIMOUT
com.iflytek.asr.AsrService.AsrRecord: int BUFF_IGNORE
com.iflytek.asr.AsrService.AsrRecord: android.media.AudioRecord mRecord
com.iflytek.asr.AsrService.AsrRecord: java.util.concurrent.locks.ReentrantLock ReadThreadLock
com.iflytek.asr.AsrService.AsrRecord: boolean mRecordForceStop
com.iflytek.asr.AsrService.AsrRecord: boolean isThreadRun
com.iflytek.asr.AsrService.AsrRecord: void <clinit>()
com.iflytek.asr.AsrService.AsrRecord: AsrRecord()
com.iflytek.asr.AsrService.AsrRecord: int startRecord()
com.iflytek.asr.AsrService.AsrRecord: void stopRecord()
com.iflytek.asr.AsrService.AsrRecord: void ForceEndRecord()
com.iflytek.asr.AsrService.AsrRecord: java.util.concurrent.locks.ReentrantLock access$0()
com.iflytek.asr.AsrService.AsrRecord: android.media.AudioRecord access$1()
com.iflytek.asr.AsrService.AsrRecord: boolean access$2()
com.iflytek.asr.AsrService.AsrRecord: void access$3(boolean)
com.iflytek.asr.AsrService.AsrRecord$1ThreadRecord
com.iflytek.asr.AsrService.AsrRecord$1ThreadRecord: AsrRecord$1ThreadRecord()
com.iflytek.asr.AsrService.AsrRecord$1ThreadRecord: void run()
com.iflytek.asr.AsrService.RecognitionResult
com.iflytek.asr.AsrService.RecognitionResult: int NETWORK_TIMEOUT
com.iflytek.asr.AsrService.RecognitionResult: int NETWORK_ERROR
com.iflytek.asr.AsrService.RecognitionResult: int AUDIO_ERROR
com.iflytek.asr.AsrService.RecognitionResult: int SERVER_ERROR
com.iflytek.asr.AsrService.RecognitionResult: int CLIENT_ERROR
com.iflytek.asr.AsrService.RecognitionResult: int SPEECH_TIMEOUT
com.iflytek.asr.AsrService.RecognitionResult: int NO_MATCH
com.iflytek.asr.AsrService.RecognitionResult: int SERVICE_BUSY
com.iflytek.asr.AsrService.RecognitionResult: int RESPONSE_TIMEOUT
com.iflytek.asr.AsrService.RecognitionResult: int ASR_BUSY
com.iflytek.asr.AsrService.RecognitionResult: int ASR_ERROR
com.iflytek.asr.AsrService.RecognitionResult: int RAW_RECOGNITION_RESULT
com.iflytek.asr.AsrService.RecognitionResult: int WEB_SEARCH_RESULT
com.iflytek.asr.AsrService.RecognitionResult: int CONTACT_RESULT
com.iflytek.asr.AsrService.RecognitionResult: int ACTION_RESULT
com.iflytek.asr.AsrService.RecognitionResult: android.os.Parcelable$Creator CREATOR
com.iflytek.asr.AsrService.RecognitionResult: int mSentenceId
com.iflytek.asr.AsrService.RecognitionResult: int mConfidence
com.iflytek.asr.AsrService.RecognitionResult: int mSlot
com.iflytek.asr.AsrService.RecognitionResult: java.util.List mSlotList
com.iflytek.asr.AsrService.RecognitionResult: void <clinit>()
com.iflytek.asr.AsrService.RecognitionResult: RecognitionResult(android.os.Parcel)
com.iflytek.asr.AsrService.RecognitionResult: int describeContents()
com.iflytek.asr.AsrService.RecognitionResult: void writeToParcel(android.os.Parcel,int)
com.iflytek.asr.AsrService.RecognitionResult: RecognitionResult(int,int,int)
com.iflytek.asr.AsrService.RecognitionResult: void AddSlot(int,int[],java.lang.String[])
com.iflytek.asr.AsrService.RecognitionResult: java.lang.String toString()
com.iflytek.asr.AsrService.RecognitionResult$1
com.iflytek.asr.AsrService.RecognitionResult$1: RecognitionResult$1()
com.iflytek.asr.AsrService.RecognitionResult$1: com.iflytek.asr.AsrService.RecognitionResult createFromParcel(android.os.Parcel)
com.iflytek.asr.AsrService.RecognitionResult$1: com.iflytek.asr.AsrService.RecognitionResult[] newArray(int)
com.iflytek.asr.AsrService.RecognitionResult$1: java.lang.Object createFromParcel(android.os.Parcel)
com.iflytek.asr.AsrService.RecognitionResult$1: java.lang.Object[] newArray(int)
com.iflytek.asr.AsrService.Slot
com.iflytek.asr.AsrService.Slot: int mItemCount
com.iflytek.asr.AsrService.Slot: int[] mItemIds
com.iflytek.asr.AsrService.Slot: java.lang.String[] mItemTexts
com.iflytek.asr.AsrService.Slot: android.os.Parcelable$Creator CREATOR
com.iflytek.asr.AsrService.Slot: void <clinit>()
com.iflytek.asr.AsrService.Slot: Slot(int,int[],java.lang.String[])
com.iflytek.asr.AsrService.Slot: int describeContents()
com.iflytek.asr.AsrService.Slot: void writeToParcel(android.os.Parcel,int)
com.iflytek.asr.AsrService.Slot: Slot(android.os.Parcel)
com.iflytek.asr.AsrService.Slot$1
com.iflytek.asr.AsrService.Slot$1: Slot$1()
com.iflytek.asr.AsrService.Slot$1: com.iflytek.asr.AsrService.Slot createFromParcel(android.os.Parcel)
com.iflytek.asr.AsrService.Slot$1: com.iflytek.asr.AsrService.Slot[] newArray(int)
com.iflytek.asr.AsrService.Slot$1: java.lang.Object createFromParcel(android.os.Parcel)
com.iflytek.asr.AsrService.Slot$1: java.lang.Object[] newArray(int)
com.jayqqaa12.abase.core.AApp
com.jayqqaa12.abase.core.AApp: android.content.Context applicationContext
com.jayqqaa12.abase.core.AApp: java.util.Map tempMap
com.jayqqaa12.abase.core.AApp: void <clinit>()
com.jayqqaa12.abase.core.AApp: AApp()
com.jayqqaa12.abase.core.AApp: void onCreate()
com.jayqqaa12.abase.core.AApp: void setContext(android.content.Context)
com.jayqqaa12.abase.core.AApp: android.content.Context getContext()
com.jayqqaa12.abase.core.AApp: void setObject(java.lang.String,java.lang.Object)
com.jayqqaa12.abase.core.AApp: java.lang.Object getObject(java.lang.String)
com.jayqqaa12.abase.core.AApp: void removeObject(java.lang.String)
com.jayqqaa12.abase.core.AApp: void clearTemp()
com.jayqqaa12.abase.core.AApp: void setUncaughtExceptionHandler(java.lang.Thread$UncaughtExceptionHandler)
com.jayqqaa12.abase.core.ABitmap
com.jayqqaa12.abase.core.ABitmap: boolean pauseTask
com.jayqqaa12.abase.core.ABitmap: java.lang.Object pauseTaskLock
com.jayqqaa12.abase.core.ABitmap: android.content.Context context
com.jayqqaa12.abase.core.ABitmap: com.lidroid.xutils.bitmap.BitmapGlobalConfig globalConfig
com.jayqqaa12.abase.core.ABitmap: com.lidroid.xutils.bitmap.BitmapDisplayConfig defaultDisplayConfig
com.jayqqaa12.abase.core.ABitmap: ABitmap()
com.jayqqaa12.abase.core.ABitmap: void configDefaultImage(int,int)
com.jayqqaa12.abase.core.ABitmap: com.jayqqaa12.abase.core.ABitmap configDefaultLoadingImage(android.graphics.drawable.Drawable)
com.jayqqaa12.abase.core.ABitmap: com.jayqqaa12.abase.core.ABitmap configDefaultLoadingImage(int)
com.jayqqaa12.abase.core.ABitmap: com.jayqqaa12.abase.core.ABitmap configDefaultLoadingImage(android.graphics.Bitmap)
com.jayqqaa12.abase.core.ABitmap: com.jayqqaa12.abase.core.ABitmap configDefaultLoadFailedImage(android.graphics.drawable.Drawable)
com.jayqqaa12.abase.core.ABitmap: com.jayqqaa12.abase.core.ABitmap configDefaultLoadFailedImage(int)
com.jayqqaa12.abase.core.ABitmap: com.jayqqaa12.abase.core.ABitmap configDefaultLoadFailedImage(android.graphics.Bitmap)
com.jayqqaa12.abase.core.ABitmap: com.jayqqaa12.abase.core.ABitmap configDefaultBitmapMaxSize(int,int)
com.jayqqaa12.abase.core.ABitmap: com.jayqqaa12.abase.core.ABitmap configDefaultBitmapMaxSize(com.lidroid.xutils.bitmap.core.BitmapSize)
com.jayqqaa12.abase.core.ABitmap: com.jayqqaa12.abase.core.ABitmap configDefaultImageLoadAnimation(android.view.animation.Animation)
com.jayqqaa12.abase.core.ABitmap: com.jayqqaa12.abase.core.ABitmap configDefaultAutoRotation(boolean)
com.jayqqaa12.abase.core.ABitmap: com.jayqqaa12.abase.core.ABitmap configDefaultShowOriginal(boolean)
com.jayqqaa12.abase.core.ABitmap: com.jayqqaa12.abase.core.ABitmap configDefaultBitmapConfig(android.graphics.Bitmap$Config)
com.jayqqaa12.abase.core.ABitmap: com.jayqqaa12.abase.core.ABitmap configDefaultDisplayConfig(com.lidroid.xutils.bitmap.BitmapDisplayConfig)
com.jayqqaa12.abase.core.ABitmap: com.jayqqaa12.abase.core.ABitmap configDownloader(com.lidroid.xutils.bitmap.download.Downloader)
com.jayqqaa12.abase.core.ABitmap: com.jayqqaa12.abase.core.ABitmap configDefaultCacheExpiry(long)
com.jayqqaa12.abase.core.ABitmap: com.jayqqaa12.abase.core.ABitmap configDefaultConnectTimeout(int)
com.jayqqaa12.abase.core.ABitmap: com.jayqqaa12.abase.core.ABitmap configDefaultReadTimeout(int)
com.jayqqaa12.abase.core.ABitmap: com.jayqqaa12.abase.core.ABitmap configThreadPoolSize(int)
com.jayqqaa12.abase.core.ABitmap: com.jayqqaa12.abase.core.ABitmap configMemoryCacheEnabled(boolean)
com.jayqqaa12.abase.core.ABitmap: com.jayqqaa12.abase.core.ABitmap configDiskCacheEnabled(boolean)
com.jayqqaa12.abase.core.ABitmap: com.jayqqaa12.abase.core.ABitmap configDiskCacheFileNameGenerator(com.lidroid.xutils.util.core.LruDiskCache$DiskCacheFileNameGenerator)
com.jayqqaa12.abase.core.ABitmap: com.jayqqaa12.abase.core.ABitmap configBitmapCacheListener(com.lidroid.xutils.bitmap.BitmapCacheListener)
com.jayqqaa12.abase.core.ABitmap: com.jayqqaa12.abase.core.ABitmap configGlobalConfig(com.lidroid.xutils.bitmap.BitmapGlobalConfig)
com.jayqqaa12.abase.core.ABitmap: void display(android.view.View,java.lang.String)
com.jayqqaa12.abase.core.ABitmap: void display(android.view.View,java.lang.String,com.lidroid.xutils.bitmap.BitmapDisplayConfig)
com.jayqqaa12.abase.core.ABitmap: void display(android.view.View,java.lang.String,com.lidroid.xutils.bitmap.callback.BitmapLoadCallBack)
com.jayqqaa12.abase.core.ABitmap: void display(android.view.View,java.lang.String,com.lidroid.xutils.bitmap.BitmapDisplayConfig,com.lidroid.xutils.bitmap.callback.BitmapLoadCallBack)
com.jayqqaa12.abase.core.ABitmap: void clearCache()
com.jayqqaa12.abase.core.ABitmap: void clearMemoryCache()
com.jayqqaa12.abase.core.ABitmap: void clearDiskCache()
com.jayqqaa12.abase.core.ABitmap: void clearCache(java.lang.String)
com.jayqqaa12.abase.core.ABitmap: void clearMemoryCache(java.lang.String)
com.jayqqaa12.abase.core.ABitmap: void clearDiskCache(java.lang.String)
com.jayqqaa12.abase.core.ABitmap: void flushCache()
com.jayqqaa12.abase.core.ABitmap: void closeCache()
com.jayqqaa12.abase.core.ABitmap: java.io.File getBitmapFileFromDiskCache(java.lang.String)
com.jayqqaa12.abase.core.ABitmap: android.graphics.Bitmap getBitmapFromMemCache(java.lang.String,com.lidroid.xutils.bitmap.BitmapDisplayConfig)
com.jayqqaa12.abase.core.ABitmap: void resumeTasks()
com.jayqqaa12.abase.core.ABitmap: void pauseTasks()
com.jayqqaa12.abase.core.ABitmap: void stopTasks()
com.jayqqaa12.abase.core.ABitmap: com.jayqqaa12.abase.core.ABitmap$BitmapLoadTask getBitmapTaskFromContainer(android.view.View,com.lidroid.xutils.bitmap.callback.BitmapLoadCallBack)
com.jayqqaa12.abase.core.ABitmap: boolean bitmapLoadTaskExist(android.view.View,java.lang.String,com.lidroid.xutils.bitmap.callback.BitmapLoadCallBack)
com.jayqqaa12.abase.core.ABitmap: java.lang.Object access$0(com.jayqqaa12.abase.core.ABitmap)
com.jayqqaa12.abase.core.ABitmap: boolean access$1(com.jayqqaa12.abase.core.ABitmap)
com.jayqqaa12.abase.core.ABitmap: com.lidroid.xutils.bitmap.BitmapGlobalConfig access$2(com.jayqqaa12.abase.core.ABitmap)
com.jayqqaa12.abase.core.ABitmap: com.jayqqaa12.abase.core.ABitmap$BitmapLoadTask access$3(android.view.View,com.lidroid.xutils.bitmap.callback.BitmapLoadCallBack)
com.jayqqaa12.abase.core.ABitmap$BitmapLoadTask
com.jayqqaa12.abase.core.ABitmap$BitmapLoadTask: java.lang.String uri
com.jayqqaa12.abase.core.ABitmap$BitmapLoadTask: java.lang.ref.WeakReference containerReference
com.jayqqaa12.abase.core.ABitmap$BitmapLoadTask: com.lidroid.xutils.bitmap.callback.BitmapLoadCallBack callBack
com.jayqqaa12.abase.core.ABitmap$BitmapLoadTask: com.lidroid.xutils.bitmap.BitmapDisplayConfig displayConfig
com.jayqqaa12.abase.core.ABitmap$BitmapLoadTask: com.lidroid.xutils.bitmap.callback.BitmapLoadFrom from
com.jayqqaa12.abase.core.ABitmap$BitmapLoadTask: int PROGRESS_LOAD_STARTED
com.jayqqaa12.abase.core.ABitmap$BitmapLoadTask: int PROGRESS_LOADING
com.jayqqaa12.abase.core.ABitmap$BitmapLoadTask: com.jayqqaa12.abase.core.ABitmap this$0
com.jayqqaa12.abase.core.ABitmap$BitmapLoadTask: ABitmap$BitmapLoadTask(com.jayqqaa12.abase.core.ABitmap,android.view.View,java.lang.String,com.lidroid.xutils.bitmap.BitmapDisplayConfig,com.lidroid.xutils.bitmap.callback.BitmapLoadCallBack)
com.jayqqaa12.abase.core.ABitmap$BitmapLoadTask: android.graphics.Bitmap doInBackground(java.lang.Object[])
com.jayqqaa12.abase.core.ABitmap$BitmapLoadTask: void updateProgress(long,long)
com.jayqqaa12.abase.core.ABitmap$BitmapLoadTask: void onProgressUpdate(java.lang.Object[])
com.jayqqaa12.abase.core.ABitmap$BitmapLoadTask: void onPostExecute(android.graphics.Bitmap)
com.jayqqaa12.abase.core.ABitmap$BitmapLoadTask: void onCancelled(android.graphics.Bitmap)
com.jayqqaa12.abase.core.ABitmap$BitmapLoadTask: android.view.View getTargetContainer()
com.jayqqaa12.abase.core.ABitmap$BitmapLoadTask: void onPostExecute(java.lang.Object)
com.jayqqaa12.abase.core.ABitmap$BitmapLoadTask: void onCancelled(java.lang.Object)
com.jayqqaa12.abase.core.ABitmap$BitmapLoadTask: java.lang.Object doInBackground(java.lang.Object[])
com.jayqqaa12.abase.core.ABitmap$BitmapLoadTask: java.lang.String access$3(com.jayqqaa12.abase.core.ABitmap$BitmapLoadTask)
com.jayqqaa12.abase.core.ABitmap_
com.jayqqaa12.abase.core.ABitmap_: android.content.Context context_
com.jayqqaa12.abase.core.ABitmap_: com.jayqqaa12.abase.core.ABitmap_ instance_
com.jayqqaa12.abase.core.ABitmap_: ABitmap_(android.content.Context)
com.jayqqaa12.abase.core.ABitmap_: com.jayqqaa12.abase.core.ABitmap_ getInstance_(android.content.Context)
com.jayqqaa12.abase.core.ABitmap_: void init_()
com.jayqqaa12.abase.core.ACache
com.jayqqaa12.abase.core.ACache: int TIME_NONE
com.jayqqaa12.abase.core.ACache: int TIME_HOUR
com.jayqqaa12.abase.core.ACache: int TIME_DAY
com.jayqqaa12.abase.core.ACache: int MAX_SIZE
com.jayqqaa12.abase.core.ACache: int MAX_COUNT
com.jayqqaa12.abase.core.ACache: java.util.Map mInstanceMap
com.jayqqaa12.abase.core.ACache: com.jayqqaa12.abase.core.ACache$ACacheManager mCache
com.jayqqaa12.abase.core.ACache: void <clinit>()
com.jayqqaa12.abase.core.ACache: com.jayqqaa12.abase.core.ACache create()
com.jayqqaa12.abase.core.ACache: boolean isInit(java.lang.String)
com.jayqqaa12.abase.core.ACache: boolean isPastDue(java.lang.String,int)
com.jayqqaa12.abase.core.ACache: boolean isPastDue(java.lang.String)
com.jayqqaa12.abase.core.ACache: com.jayqqaa12.abase.core.ACache get(android.content.Context)
com.jayqqaa12.abase.core.ACache: com.jayqqaa12.abase.core.ACache get(android.content.Context,java.lang.String)
com.jayqqaa12.abase.core.ACache: com.jayqqaa12.abase.core.ACache get(java.io.File)
com.jayqqaa12.abase.core.ACache: com.jayqqaa12.abase.core.ACache get(android.content.Context,long,int)
com.jayqqaa12.abase.core.ACache: com.jayqqaa12.abase.core.ACache get(java.io.File,long,int)
com.jayqqaa12.abase.core.ACache: java.lang.String myPid()
com.jayqqaa12.abase.core.ACache: ACache(java.io.File,long,int)
com.jayqqaa12.abase.core.ACache: void put(java.lang.String,java.lang.String)
com.jayqqaa12.abase.core.ACache: void put(java.lang.String,java.lang.String,int)
com.jayqqaa12.abase.core.ACache: java.lang.String getAsString(java.lang.String)
com.jayqqaa12.abase.core.ACache: void put(java.lang.String,org.json.JSONObject)
com.jayqqaa12.abase.core.ACache: void put(java.lang.String,org.json.JSONObject,int)
com.jayqqaa12.abase.core.ACache: org.json.JSONObject getAsJSONObject(java.lang.String)
com.jayqqaa12.abase.core.ACache: void put(java.lang.String,org.json.JSONArray)
com.jayqqaa12.abase.core.ACache: void put(java.lang.String,org.json.JSONArray,int)
com.jayqqaa12.abase.core.ACache: org.json.JSONArray getAsJSONArray(java.lang.String)
com.jayqqaa12.abase.core.ACache: void put(java.lang.String,byte[])
com.jayqqaa12.abase.core.ACache: void put(java.lang.String,byte[],int)
com.jayqqaa12.abase.core.ACache: byte[] getAsBinary(java.lang.String)
com.jayqqaa12.abase.core.ACache: void put(java.lang.String,java.io.Serializable)
com.jayqqaa12.abase.core.ACache: void put(java.lang.String,java.io.Serializable,int)
com.jayqqaa12.abase.core.ACache: java.lang.Object getAsObject(java.lang.String)
com.jayqqaa12.abase.core.ACache: void put(java.lang.String,android.graphics.Bitmap)
com.jayqqaa12.abase.core.ACache: void put(java.lang.String,android.graphics.Bitmap,int)
com.jayqqaa12.abase.core.ACache: android.graphics.Bitmap getAsBitmap(java.lang.String)
com.jayqqaa12.abase.core.ACache: void put(java.lang.String,android.graphics.drawable.Drawable)
com.jayqqaa12.abase.core.ACache: void put(java.lang.String,android.graphics.drawable.Drawable,int)
com.jayqqaa12.abase.core.ACache: android.graphics.drawable.Drawable getAsDrawable(java.lang.String)
com.jayqqaa12.abase.core.ACache: java.io.File file(java.lang.String)
com.jayqqaa12.abase.core.ACache: boolean remove(java.lang.String)
com.jayqqaa12.abase.core.ACache: void clear()
com.jayqqaa12.abase.core.ACache$ACacheManager
com.jayqqaa12.abase.core.ACache$ACacheManager: java.util.concurrent.atomic.AtomicLong cacheSize
com.jayqqaa12.abase.core.ACache$ACacheManager: java.util.concurrent.atomic.AtomicInteger cacheCount
com.jayqqaa12.abase.core.ACache$ACacheManager: long sizeLimit
com.jayqqaa12.abase.core.ACache$ACacheManager: int countLimit
com.jayqqaa12.abase.core.ACache$ACacheManager: java.util.Map lastUsageDates
com.jayqqaa12.abase.core.ACache$ACacheManager: java.io.File cacheDir
com.jayqqaa12.abase.core.ACache$ACacheManager: com.jayqqaa12.abase.core.ACache this$0
com.jayqqaa12.abase.core.ACache$ACacheManager: ACache$ACacheManager(com.jayqqaa12.abase.core.ACache,java.io.File,long,int)
com.jayqqaa12.abase.core.ACache$ACacheManager: void calculateCacheSizeAndCacheCount()
com.jayqqaa12.abase.core.ACache$ACacheManager: void put(java.io.File)
com.jayqqaa12.abase.core.ACache$ACacheManager: java.io.File get(java.lang.String)
com.jayqqaa12.abase.core.ACache$ACacheManager: java.io.File newFile(java.lang.String)
com.jayqqaa12.abase.core.ACache$ACacheManager: boolean remove(java.lang.String)
com.jayqqaa12.abase.core.ACache$ACacheManager: void clear()
com.jayqqaa12.abase.core.ACache$ACacheManager: long removeNext()
com.jayqqaa12.abase.core.ACache$ACacheManager: long calculateSize(java.io.File)
com.jayqqaa12.abase.core.ACache$ACacheManager: long access$0(com.jayqqaa12.abase.core.ACache$ACacheManager,java.io.File)
com.jayqqaa12.abase.core.ACache$ACacheManager: java.util.Map access$1(com.jayqqaa12.abase.core.ACache$ACacheManager)
com.jayqqaa12.abase.core.ACache$ACacheManager: java.util.concurrent.atomic.AtomicLong access$2(com.jayqqaa12.abase.core.ACache$ACacheManager)
com.jayqqaa12.abase.core.ACache$ACacheManager: java.util.concurrent.atomic.AtomicInteger access$3(com.jayqqaa12.abase.core.ACache$ACacheManager)
com.jayqqaa12.abase.core.ACache$ACacheManager: ACache$ACacheManager(com.jayqqaa12.abase.core.ACache,java.io.File,long,int,com.jayqqaa12.abase.core.ACache$ACacheManager)
com.jayqqaa12.abase.core.ACache$ACacheManager: java.io.File access$5(com.jayqqaa12.abase.core.ACache$ACacheManager,java.lang.String)
com.jayqqaa12.abase.core.ACache$ACacheManager: void access$6(com.jayqqaa12.abase.core.ACache$ACacheManager,java.io.File)
com.jayqqaa12.abase.core.ACache$ACacheManager: java.io.File access$7(com.jayqqaa12.abase.core.ACache$ACacheManager,java.lang.String)
com.jayqqaa12.abase.core.ACache$ACacheManager: boolean access$8(com.jayqqaa12.abase.core.ACache$ACacheManager,java.lang.String)
com.jayqqaa12.abase.core.ACache$ACacheManager: void access$9(com.jayqqaa12.abase.core.ACache$ACacheManager)
com.jayqqaa12.abase.core.ACache$ACacheManager$1
com.jayqqaa12.abase.core.ACache$ACacheManager$1: com.jayqqaa12.abase.core.ACache$ACacheManager this$1
com.jayqqaa12.abase.core.ACache$ACacheManager$1: ACache$ACacheManager$1(com.jayqqaa12.abase.core.ACache$ACacheManager)
com.jayqqaa12.abase.core.ACache$ACacheManager$1: void run()
com.jayqqaa12.abase.core.ACache$Utils
com.jayqqaa12.abase.core.ACache$Utils: char mSeparator
com.jayqqaa12.abase.core.ACache$Utils: ACache$Utils()
com.jayqqaa12.abase.core.ACache$Utils: boolean isDue(java.lang.String)
com.jayqqaa12.abase.core.ACache$Utils: boolean isDue(byte[])
com.jayqqaa12.abase.core.ACache$Utils: java.lang.String newStringWithDateInfo(int,java.lang.String)
com.jayqqaa12.abase.core.ACache$Utils: byte[] newByteArrayWithDateInfo(int,byte[])
com.jayqqaa12.abase.core.ACache$Utils: java.lang.String clearDateInfo(java.lang.String)
com.jayqqaa12.abase.core.ACache$Utils: byte[] clearDateInfo(byte[])
com.jayqqaa12.abase.core.ACache$Utils: boolean hasDateInfo(byte[])
com.jayqqaa12.abase.core.ACache$Utils: java.lang.String[] getDateInfoFromDate(byte[])
com.jayqqaa12.abase.core.ACache$Utils: int indexOf(byte[],char)
com.jayqqaa12.abase.core.ACache$Utils: byte[] copyOfRange(byte[],int,int)
com.jayqqaa12.abase.core.ACache$Utils: java.lang.String createDateInfo(int)
com.jayqqaa12.abase.core.ACache$Utils: byte[] Bitmap2Bytes(android.graphics.Bitmap)
com.jayqqaa12.abase.core.ACache$Utils: android.graphics.Bitmap Bytes2Bimap(byte[])
com.jayqqaa12.abase.core.ACache$Utils: android.graphics.Bitmap drawable2Bitmap(android.graphics.drawable.Drawable)
com.jayqqaa12.abase.core.ACache$Utils: android.graphics.drawable.Drawable bitmap2Drawable(android.graphics.Bitmap)
com.jayqqaa12.abase.core.ACache$Utils: java.lang.String access$0(int,java.lang.String)
com.jayqqaa12.abase.core.ACache$Utils: boolean access$1(java.lang.String)
com.jayqqaa12.abase.core.ACache$Utils: java.lang.String access$2(java.lang.String)
com.jayqqaa12.abase.core.ACache$Utils: byte[] access$3(int,byte[])
com.jayqqaa12.abase.core.ACache$Utils: boolean access$4(byte[])
com.jayqqaa12.abase.core.ACache$Utils: byte[] access$5(byte[])
com.jayqqaa12.abase.core.ACache$Utils: byte[] access$6(android.graphics.Bitmap)
com.jayqqaa12.abase.core.ACache$Utils: android.graphics.Bitmap access$7(byte[])
com.jayqqaa12.abase.core.ACache$Utils: android.graphics.Bitmap access$8(android.graphics.drawable.Drawable)
com.jayqqaa12.abase.core.ACache$Utils: android.graphics.drawable.Drawable access$9(android.graphics.Bitmap)
com.jayqqaa12.abase.core.ADao
com.jayqqaa12.abase.core.ADao: com.jayqqaa12.abase.core.DbKit db
com.jayqqaa12.abase.core.ADao: void <clinit>()
com.jayqqaa12.abase.core.ADao: ADao()
com.jayqqaa12.abase.core.ADao: boolean save(java.lang.Object)
com.jayqqaa12.abase.core.ADao: java.lang.Object saveAndFind(java.lang.Object,com.lidroid.xutils.db.sqlite.Selector)
com.jayqqaa12.abase.core.ADao: boolean saveBindingId(java.lang.Object)
com.jayqqaa12.abase.core.ADao: boolean saveAll(java.util.List)
com.jayqqaa12.abase.core.ADao: boolean delete(java.lang.Object)
com.jayqqaa12.abase.core.ADao: boolean deleteAll(java.lang.Class)
com.jayqqaa12.abase.core.ADao: boolean delete(java.lang.Class,com.lidroid.xutils.db.sqlite.WhereBuilder)
com.jayqqaa12.abase.core.ADao: boolean update(java.lang.Object,java.lang.String)
com.jayqqaa12.abase.core.ADao: java.lang.Object find(java.lang.Class,java.lang.Object)
com.jayqqaa12.abase.core.ADao: java.lang.Object findFirst(java.lang.Class)
com.jayqqaa12.abase.core.ADao: java.lang.Object findFirst(com.lidroid.xutils.db.sqlite.Selector)
com.jayqqaa12.abase.core.ADao: java.util.List findAll(java.lang.Class)
com.jayqqaa12.abase.core.ADao: java.util.List findAll(com.lidroid.xutils.db.sqlite.Selector)
com.jayqqaa12.abase.core.ADao: boolean saveOrUpdate(java.lang.Object)
com.jayqqaa12.abase.core.ADao: boolean saveOrUpdateAll(java.util.List)
com.jayqqaa12.abase.core.ADao_
com.jayqqaa12.abase.core.ADao_: android.content.Context context_
com.jayqqaa12.abase.core.ADao_: ADao_(android.content.Context)
com.jayqqaa12.abase.core.ADao_: com.jayqqaa12.abase.core.ADao_ getInstance_(android.content.Context)
com.jayqqaa12.abase.core.ADao_: void init_()
com.jayqqaa12.abase.core.ADao_: void rebind(android.content.Context)
com.jayqqaa12.abase.core.AHttp
com.jayqqaa12.abase.core.AHttp: com.lidroid.xutils.http.HttpCache sHttpCache
com.jayqqaa12.abase.core.AHttp: org.apache.http.impl.client.DefaultHttpClient httpClient
com.jayqqaa12.abase.core.AHttp: org.apache.http.protocol.HttpContext httpContext
com.jayqqaa12.abase.core.AHttp: com.lidroid.xutils.http.callback.HttpRedirectHandler httpRedirectHandler
com.jayqqaa12.abase.core.AHttp: java.lang.String responseTextCharset
com.jayqqaa12.abase.core.AHttp: int acacheExpiry
com.jayqqaa12.abase.core.AHttp: int DEFAULT_CONN_TIMEOUT
com.jayqqaa12.abase.core.AHttp: int DEFAULT_RETRY_TIMES
com.jayqqaa12.abase.core.AHttp: java.lang.String HEADER_ACCEPT_ENCODING
com.jayqqaa12.abase.core.AHttp: java.lang.String ENCODING_GZIP
com.jayqqaa12.abase.core.AHttp: java.util.concurrent.ThreadFactory sThreadFactory
com.jayqqaa12.abase.core.AHttp: int threadPoolSize
com.jayqqaa12.abase.core.AHttp: java.util.concurrent.Executor downloadExecutor
com.jayqqaa12.abase.core.AHttp: java.util.concurrent.Executor sendExecutor
com.jayqqaa12.abase.core.AHttp: void <clinit>()
com.jayqqaa12.abase.core.AHttp: AHttp()
com.jayqqaa12.abase.core.AHttp: org.apache.http.client.HttpClient getHttpClient()
com.jayqqaa12.abase.core.AHttp: com.jayqqaa12.abase.core.AHttp configResponseTextCharset(java.lang.String)
com.jayqqaa12.abase.core.AHttp: com.jayqqaa12.abase.core.AHttp configHttpRedirectHandler(com.lidroid.xutils.http.callback.HttpRedirectHandler)
com.jayqqaa12.abase.core.AHttp: com.jayqqaa12.abase.core.AHttp configHttpCacheSize(int)
com.jayqqaa12.abase.core.AHttp: com.jayqqaa12.abase.core.AHttp configCookieStore(org.apache.http.client.CookieStore)
com.jayqqaa12.abase.core.AHttp: com.jayqqaa12.abase.core.AHttp configUserAgent(java.lang.String)
com.jayqqaa12.abase.core.AHttp: com.jayqqaa12.abase.core.AHttp configTimeout(int)
com.jayqqaa12.abase.core.AHttp: com.jayqqaa12.abase.core.AHttp configRegisterScheme(org.apache.http.conn.scheme.Scheme)
com.jayqqaa12.abase.core.AHttp: com.jayqqaa12.abase.core.AHttp configSSLSocketFactory(org.apache.http.conn.ssl.SSLSocketFactory)
com.jayqqaa12.abase.core.AHttp: com.jayqqaa12.abase.core.AHttp configRequestRetryCount(int)
com.jayqqaa12.abase.core.AHttp: com.jayqqaa12.abase.core.AHttp configRequestThreadPoolSize(int)
com.jayqqaa12.abase.core.AHttp: com.lidroid.xutils.http.HttpHandler get(java.lang.String,com.lidroid.xutils.http.callback.RequestCallBack)
com.jayqqaa12.abase.core.AHttp: com.lidroid.xutils.http.HttpHandler get(java.lang.String,int,com.lidroid.xutils.http.callback.RequestCallBack)
com.jayqqaa12.abase.core.AHttp: com.lidroid.xutils.http.HttpHandler getRefresh(java.lang.String,int,com.lidroid.xutils.http.callback.RequestCallBack)
com.jayqqaa12.abase.core.AHttp: com.lidroid.xutils.http.HttpHandler post(java.lang.String,com.lidroid.xutils.http.RequestParams,com.lidroid.xutils.http.callback.RequestCallBack)
com.jayqqaa12.abase.core.AHttp: com.lidroid.xutils.http.HttpHandler send(com.lidroid.xutils.http.client.HttpRequest$HttpMethod,java.lang.String,com.lidroid.xutils.http.callback.RequestCallBack)
com.jayqqaa12.abase.core.AHttp: com.lidroid.xutils.http.HttpHandler send(com.lidroid.xutils.http.client.HttpRequest$HttpMethod,java.lang.String,com.lidroid.xutils.http.RequestParams,com.lidroid.xutils.http.callback.RequestCallBack)
com.jayqqaa12.abase.core.AHttp: com.lidroid.xutils.http.ResponseStream sendSync(com.lidroid.xutils.http.client.HttpRequest$HttpMethod,java.lang.String)
com.jayqqaa12.abase.core.AHttp: com.lidroid.xutils.http.ResponseStream sendSync(com.lidroid.xutils.http.client.HttpRequest$HttpMethod,java.lang.String,com.lidroid.xutils.http.RequestParams)
com.jayqqaa12.abase.core.AHttp: com.lidroid.xutils.http.HttpHandler download(java.lang.String,java.lang.String,com.lidroid.xutils.http.callback.RequestCallBack)
com.jayqqaa12.abase.core.AHttp: com.lidroid.xutils.http.HttpHandler download(java.lang.String,java.lang.String,boolean,com.lidroid.xutils.http.callback.RequestCallBack)
com.jayqqaa12.abase.core.AHttp: com.lidroid.xutils.http.HttpHandler download(java.lang.String,java.lang.String,boolean,boolean,long,com.lidroid.xutils.http.callback.RequestCallBack)
com.jayqqaa12.abase.core.AHttp: com.lidroid.xutils.http.HttpHandler download(java.lang.String,java.lang.String,boolean,boolean,com.lidroid.xutils.http.callback.RequestCallBack)
com.jayqqaa12.abase.core.AHttp: com.lidroid.xutils.http.HttpHandler download(java.lang.String,java.lang.String,com.lidroid.xutils.http.RequestParams,com.lidroid.xutils.http.callback.RequestCallBack)
com.jayqqaa12.abase.core.AHttp: com.lidroid.xutils.http.HttpHandler download(java.lang.String,java.lang.String,com.lidroid.xutils.http.RequestParams,boolean,com.lidroid.xutils.http.callback.RequestCallBack)
com.jayqqaa12.abase.core.AHttp: com.lidroid.xutils.http.HttpHandler download(java.lang.String,java.lang.String,com.lidroid.xutils.http.RequestParams,boolean,boolean,com.lidroid.xutils.http.callback.RequestCallBack)
com.jayqqaa12.abase.core.AHttp: com.lidroid.xutils.http.HttpHandler download(com.lidroid.xutils.http.client.HttpRequest$HttpMethod,java.lang.String,java.lang.String,com.lidroid.xutils.http.RequestParams,com.lidroid.xutils.http.callback.RequestCallBack)
com.jayqqaa12.abase.core.AHttp: com.lidroid.xutils.http.HttpHandler download(com.lidroid.xutils.http.client.HttpRequest$HttpMethod,java.lang.String,java.lang.String,com.lidroid.xutils.http.RequestParams,boolean,com.lidroid.xutils.http.callback.RequestCallBack)
com.jayqqaa12.abase.core.AHttp: com.lidroid.xutils.http.HttpHandler download(com.lidroid.xutils.http.client.HttpRequest$HttpMethod,java.lang.String,java.lang.String,com.lidroid.xutils.http.RequestParams,boolean,boolean,long,com.lidroid.xutils.http.callback.RequestCallBack)
com.jayqqaa12.abase.core.AHttp: com.lidroid.xutils.http.HttpHandler sendRequest(com.lidroid.xutils.http.client.HttpRequest,com.lidroid.xutils.http.RequestParams,com.lidroid.xutils.http.callback.RequestCallBack)
com.jayqqaa12.abase.core.AHttp: com.lidroid.xutils.http.ResponseStream sendSyncRequest(com.lidroid.xutils.http.client.HttpRequest,com.lidroid.xutils.http.RequestParams)
com.jayqqaa12.abase.core.AHttp$1
com.jayqqaa12.abase.core.AHttp$1: java.util.concurrent.atomic.AtomicInteger mCount
com.jayqqaa12.abase.core.AHttp$1: AHttp$1()
com.jayqqaa12.abase.core.AHttp$1: java.lang.Thread newThread(java.lang.Runnable)
com.jayqqaa12.abase.core.AHttp$2
com.jayqqaa12.abase.core.AHttp$2: com.jayqqaa12.abase.core.AHttp this$0
com.jayqqaa12.abase.core.AHttp$2: AHttp$2(com.jayqqaa12.abase.core.AHttp)
com.jayqqaa12.abase.core.AHttp$2: void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)
com.jayqqaa12.abase.core.AHttp$3
com.jayqqaa12.abase.core.AHttp$3: com.jayqqaa12.abase.core.AHttp this$0
com.jayqqaa12.abase.core.AHttp$3: AHttp$3(com.jayqqaa12.abase.core.AHttp)
com.jayqqaa12.abase.core.AHttp$3: void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)
com.jayqqaa12.abase.core.AHttp_
com.jayqqaa12.abase.core.AHttp_: android.content.Context context_
com.jayqqaa12.abase.core.AHttp_: AHttp_(android.content.Context)
com.jayqqaa12.abase.core.AHttp_: com.jayqqaa12.abase.core.AHttp_ getInstance_(android.content.Context)
com.jayqqaa12.abase.core.AHttp_: void init_()
com.jayqqaa12.abase.core.AHttp_: void rebind(android.content.Context)
com.jayqqaa12.abase.core.APopup
com.jayqqaa12.abase.core.APopup: boolean isMenu
com.jayqqaa12.abase.core.APopup: APopup()
com.jayqqaa12.abase.core.APopup: APopup(java.lang.Class)
com.jayqqaa12.abase.core.APopup: APopup(android.view.View)
com.jayqqaa12.abase.core.APopup: com.jayqqaa12.abase.core.BindView getBindView()
com.jayqqaa12.abase.core.APopup: android.view.View initView()
com.jayqqaa12.abase.core.APopup: void setBack(android.view.View)
com.jayqqaa12.abase.core.APopup: void setView()
com.jayqqaa12.abase.core.APopup: void setIsMenu(boolean)
com.jayqqaa12.abase.core.APopup$1
com.jayqqaa12.abase.core.APopup$1: com.jayqqaa12.abase.core.APopup this$0
com.jayqqaa12.abase.core.APopup$1: APopup$1(com.jayqqaa12.abase.core.APopup)
com.jayqqaa12.abase.core.APopup$1: boolean onKey(android.view.View,int,android.view.KeyEvent)
com.jayqqaa12.abase.core.Abase
com.jayqqaa12.abase.core.Abase: java.util.Stack activityStack
com.jayqqaa12.abase.core.Abase: com.jayqqaa12.abase.core.Abase instance
com.jayqqaa12.abase.core.Abase: android.content.Context context
com.jayqqaa12.abase.core.Abase: void <clinit>()
com.jayqqaa12.abase.core.Abase: Abase()
com.jayqqaa12.abase.core.Abase: android.content.Context getContext()
com.jayqqaa12.abase.core.Abase: void setContext(android.content.Context)
com.jayqqaa12.abase.core.Abase: com.jayqqaa12.abase.core.Abase getAppManager()
com.jayqqaa12.abase.core.Abase: void addActivity(android.app.Activity)
com.jayqqaa12.abase.core.Abase: android.app.Activity currentActivity()
com.jayqqaa12.abase.core.Abase: void finishActivity()
com.jayqqaa12.abase.core.Abase: void finishActivity(android.app.Activity)
com.jayqqaa12.abase.core.Abase: void finishActivity(java.lang.Class)
com.jayqqaa12.abase.core.Abase: void finishAllActivity()
com.jayqqaa12.abase.core.Abase: void AppExit(android.content.Context)
com.jayqqaa12.abase.core.Abus
com.jayqqaa12.abase.core.Abus: Abus()
com.jayqqaa12.abase.core.Abus_
com.jayqqaa12.abase.core.Abus_: android.content.Context context_
com.jayqqaa12.abase.core.Abus_: com.jayqqaa12.abase.core.Abus_ instance_
com.jayqqaa12.abase.core.Abus_: Abus_(android.content.Context)
com.jayqqaa12.abase.core.Abus_: com.jayqqaa12.abase.core.Abus_ getInstance_(android.content.Context)
com.jayqqaa12.abase.core.Abus_: void init_()
com.jayqqaa12.abase.core.BindView
com.jayqqaa12.abase.core.BindView: BindView(android.content.Context)
com.jayqqaa12.abase.core.BindView: void bind()
com.jayqqaa12.abase.core.BindView_
com.jayqqaa12.abase.core.BindView_: boolean alreadyInflated_
com.jayqqaa12.abase.core.BindView_: org.androidannotations.api.view.OnViewChangedNotifier onViewChangedNotifier_
com.jayqqaa12.abase.core.BindView_: BindView_(android.content.Context)
com.jayqqaa12.abase.core.BindView_: com.jayqqaa12.abase.core.BindView build(android.content.Context)
com.jayqqaa12.abase.core.BindView_: void onFinishInflate()
com.jayqqaa12.abase.core.BindView_: void init_()
com.jayqqaa12.abase.core.DbKit
com.jayqqaa12.abase.core.DbKit: java.util.HashMap daoMap
com.jayqqaa12.abase.core.DbKit: android.database.sqlite.SQLiteDatabase database
com.jayqqaa12.abase.core.DbKit: com.jayqqaa12.abase.core.DbKit$DaoConfig daoConfig
com.jayqqaa12.abase.core.DbKit: boolean debug
com.jayqqaa12.abase.core.DbKit: boolean allowTransaction
com.jayqqaa12.abase.core.DbKit: java.util.concurrent.locks.Lock writeLock
com.jayqqaa12.abase.core.DbKit: boolean writeLocked
com.jayqqaa12.abase.core.DbKit: com.jayqqaa12.abase.core.DbKit$FindTempCache findTempCache
com.jayqqaa12.abase.core.DbKit: void <clinit>()
com.jayqqaa12.abase.core.DbKit: DbKit(com.jayqqaa12.abase.core.DbKit$DaoConfig)
com.jayqqaa12.abase.core.DbKit: com.jayqqaa12.abase.core.DbKit getInstance(com.jayqqaa12.abase.core.DbKit$DaoConfig)
com.jayqqaa12.abase.core.DbKit: com.jayqqaa12.abase.core.DbKit create(android.content.Context)
com.jayqqaa12.abase.core.DbKit: com.jayqqaa12.abase.core.DbKit create(android.content.Context,java.lang.String)
com.jayqqaa12.abase.core.DbKit: com.jayqqaa12.abase.core.DbKit create(android.content.Context,java.lang.String,java.lang.String)
com.jayqqaa12.abase.core.DbKit: com.jayqqaa12.abase.core.DbKit create(android.content.Context,java.lang.String,int,com.jayqqaa12.abase.core.DbKit$DbUpgradeListener)
com.jayqqaa12.abase.core.DbKit: com.jayqqaa12.abase.core.DbKit create(android.content.Context,java.lang.String,java.lang.String,int,com.jayqqaa12.abase.core.DbKit$DbUpgradeListener)
com.jayqqaa12.abase.core.DbKit: com.jayqqaa12.abase.core.DbKit create(com.jayqqaa12.abase.core.DbKit$DaoConfig)
com.jayqqaa12.abase.core.DbKit: com.jayqqaa12.abase.core.DbKit configDebug(boolean)
com.jayqqaa12.abase.core.DbKit: com.jayqqaa12.abase.core.DbKit configAllowTransaction(boolean)
com.jayqqaa12.abase.core.DbKit: android.database.sqlite.SQLiteDatabase getDatabase()
com.jayqqaa12.abase.core.DbKit: com.jayqqaa12.abase.core.DbKit$DaoConfig getDaoConfig()
com.jayqqaa12.abase.core.DbKit: void saveOrUpdate(java.lang.Object)
com.jayqqaa12.abase.core.DbKit: void saveOrUpdateAll(java.util.List)
com.jayqqaa12.abase.core.DbKit: void replace(java.lang.Object)
com.jayqqaa12.abase.core.DbKit: void replaceAll(java.util.List)
com.jayqqaa12.abase.core.DbKit: void save(java.lang.Object)
com.jayqqaa12.abase.core.DbKit: void saveAll(java.util.List)
com.jayqqaa12.abase.core.DbKit: boolean saveBindingId(java.lang.Object)
com.jayqqaa12.abase.core.DbKit: void saveBindingIdAll(java.util.List)
com.jayqqaa12.abase.core.DbKit: void deleteById(java.lang.Class,java.lang.Object)
com.jayqqaa12.abase.core.DbKit: void delete(java.lang.Object)
com.jayqqaa12.abase.core.DbKit: void delete(java.lang.Class,com.lidroid.xutils.db.sqlite.WhereBuilder)
com.jayqqaa12.abase.core.DbKit: void deleteAll(java.util.List)
com.jayqqaa12.abase.core.DbKit: void deleteAll(java.lang.Class)
com.jayqqaa12.abase.core.DbKit: void update(java.lang.Object,java.lang.String[])
com.jayqqaa12.abase.core.DbKit: void update(java.lang.Object,com.lidroid.xutils.db.sqlite.WhereBuilder,java.lang.String[])
com.jayqqaa12.abase.core.DbKit: void updateAll(java.util.List,java.lang.String[])
com.jayqqaa12.abase.core.DbKit: void updateAll(java.util.List,com.lidroid.xutils.db.sqlite.WhereBuilder,java.lang.String[])
com.jayqqaa12.abase.core.DbKit: java.lang.Object findById(java.lang.Class,java.lang.Object)
com.jayqqaa12.abase.core.DbKit: java.lang.Object findFirst(com.lidroid.xutils.db.sqlite.Selector)
com.jayqqaa12.abase.core.DbKit: java.lang.Object findFirst(java.lang.Class)
com.jayqqaa12.abase.core.DbKit: java.lang.Object findFirst(java.lang.Class,com.lidroid.xutils.db.sqlite.WhereBuilder)
com.jayqqaa12.abase.core.DbKit: java.lang.Object findFirst(java.lang.Object)
com.jayqqaa12.abase.core.DbKit: java.util.List findAll(com.lidroid.xutils.db.sqlite.Selector)
com.jayqqaa12.abase.core.DbKit: java.util.List findAll(java.lang.Class)
com.jayqqaa12.abase.core.DbKit: java.util.List findAll(java.lang.Class,com.lidroid.xutils.db.sqlite.WhereBuilder)
com.jayqqaa12.abase.core.DbKit: java.util.List findAll(java.lang.Object)
com.jayqqaa12.abase.core.DbKit: com.lidroid.xutils.db.table.DbModel findDbModelFirst(com.lidroid.xutils.db.sqlite.SqlInfo)
com.jayqqaa12.abase.core.DbKit: com.lidroid.xutils.db.table.DbModel findDbModelFirst(com.lidroid.xutils.db.sqlite.DbModelSelector)
com.jayqqaa12.abase.core.DbKit: java.util.List findDbModelAll(com.lidroid.xutils.db.sqlite.SqlInfo)
com.jayqqaa12.abase.core.DbKit: java.util.List findDbModelAll(com.lidroid.xutils.db.sqlite.DbModelSelector)
com.jayqqaa12.abase.core.DbKit: long count(com.lidroid.xutils.db.sqlite.Selector)
com.jayqqaa12.abase.core.DbKit: long count(java.lang.Class)
com.jayqqaa12.abase.core.DbKit: long count(java.lang.Class,com.lidroid.xutils.db.sqlite.WhereBuilder)
com.jayqqaa12.abase.core.DbKit: long count(java.lang.Object)
com.jayqqaa12.abase.core.DbKit: android.database.sqlite.SQLiteDatabase createDatabase(com.jayqqaa12.abase.core.DbKit$DaoConfig)
com.jayqqaa12.abase.core.DbKit: void saveOrUpdateWithoutTransaction(java.lang.Object)
com.jayqqaa12.abase.core.DbKit: boolean saveBindingIdWithoutTransaction(java.lang.Object)
com.jayqqaa12.abase.core.DbKit: long getLastAutoIncrementId(java.lang.String)
com.jayqqaa12.abase.core.DbKit: void createTableIfNotExist(java.lang.Class)
com.jayqqaa12.abase.core.DbKit: boolean tableIsExist(java.lang.Class)
com.jayqqaa12.abase.core.DbKit: void dropDb()
com.jayqqaa12.abase.core.DbKit: void dropTable(java.lang.Class)
com.jayqqaa12.abase.core.DbKit: void debugSql(java.lang.String)
com.jayqqaa12.abase.core.DbKit: void beginTransaction()
com.jayqqaa12.abase.core.DbKit: void setTransactionSuccessful()
com.jayqqaa12.abase.core.DbKit: void endTransaction()
com.jayqqaa12.abase.core.DbKit: void execNonQuery(com.lidroid.xutils.db.sqlite.SqlInfo)
com.jayqqaa12.abase.core.DbKit: void execNonQuery(java.lang.String)
com.jayqqaa12.abase.core.DbKit: android.database.Cursor execQuery(com.lidroid.xutils.db.sqlite.SqlInfo)
com.jayqqaa12.abase.core.DbKit: android.database.Cursor execQuery(java.lang.String)
com.jayqqaa12.abase.core.DbKit$DaoConfig
com.jayqqaa12.abase.core.DbKit$DaoConfig: android.content.Context context
com.jayqqaa12.abase.core.DbKit$DaoConfig: java.lang.String dbName
com.jayqqaa12.abase.core.DbKit$DaoConfig: int dbVersion
com.jayqqaa12.abase.core.DbKit$DaoConfig: com.jayqqaa12.abase.core.DbKit$DbUpgradeListener dbUpgradeListener
com.jayqqaa12.abase.core.DbKit$DaoConfig: java.lang.String dbDir
com.jayqqaa12.abase.core.DbKit$DaoConfig: DbKit$DaoConfig(android.content.Context)
com.jayqqaa12.abase.core.DbKit$DaoConfig: android.content.Context getContext()
com.jayqqaa12.abase.core.DbKit$DaoConfig: java.lang.String getDbName()
com.jayqqaa12.abase.core.DbKit$DaoConfig: void setDbName(java.lang.String)
com.jayqqaa12.abase.core.DbKit$DaoConfig: int getDbVersion()
com.jayqqaa12.abase.core.DbKit$DaoConfig: void setDbVersion(int)
com.jayqqaa12.abase.core.DbKit$DaoConfig: com.jayqqaa12.abase.core.DbKit$DbUpgradeListener getDbUpgradeListener()
com.jayqqaa12.abase.core.DbKit$DaoConfig: void setDbUpgradeListener(com.jayqqaa12.abase.core.DbKit$DbUpgradeListener)
com.jayqqaa12.abase.core.DbKit$DaoConfig: java.lang.String getDbDir()
com.jayqqaa12.abase.core.DbKit$DaoConfig: void setDbDir(java.lang.String)
com.jayqqaa12.abase.core.DbKit$DbUpgradeListener
com.jayqqaa12.abase.core.DbKit$DbUpgradeListener: void onUpgrade(com.jayqqaa12.abase.core.DbKit,int,int)
com.jayqqaa12.abase.core.DbKit$FindTempCache
com.jayqqaa12.abase.core.DbKit$FindTempCache: java.util.concurrent.ConcurrentHashMap cache
com.jayqqaa12.abase.core.DbKit$FindTempCache: long seq
com.jayqqaa12.abase.core.DbKit$FindTempCache: com.jayqqaa12.abase.core.DbKit this$0
com.jayqqaa12.abase.core.DbKit$FindTempCache: DbKit$FindTempCache(com.jayqqaa12.abase.core.DbKit)
com.jayqqaa12.abase.core.DbKit$FindTempCache: void put(java.lang.String,java.lang.Object)
com.jayqqaa12.abase.core.DbKit$FindTempCache: java.lang.Object get(java.lang.String)
com.jayqqaa12.abase.core.DbKit$FindTempCache: void setSeq(long)
com.jayqqaa12.abase.core.DbKit$FindTempCache: DbKit$FindTempCache(com.jayqqaa12.abase.core.DbKit,com.jayqqaa12.abase.core.DbKit$FindTempCache)
com.jayqqaa12.abase.core.ItemView
com.jayqqaa12.abase.core.ItemView: com.jayqqaa12.abase.core.Abus bus
com.jayqqaa12.abase.core.ItemView: void bind(java.lang.Object)
com.jayqqaa12.abase.core.ItemView: void bind(java.lang.Object,com.jayqqaa12.abase.core.activity.AAdapter)
com.jayqqaa12.abase.core.ItemView: ItemView(android.content.Context)
com.jayqqaa12.abase.core.ItemView: com.jayqqaa12.abase.core.ItemView bindView(android.content.Context,java.lang.Class,android.view.View,java.lang.Object,com.jayqqaa12.abase.core.activity.AAdapter)
com.jayqqaa12.abase.core.ItemView: com.jayqqaa12.abase.core.ItemView bindView(android.content.Context,java.lang.Class,android.view.View,java.lang.Object)
com.jayqqaa12.abase.core.ItemView_
com.jayqqaa12.abase.core.ItemView_: boolean alreadyInflated_
com.jayqqaa12.abase.core.ItemView_: org.androidannotations.api.view.OnViewChangedNotifier onViewChangedNotifier_
com.jayqqaa12.abase.core.ItemView_: ItemView_(android.content.Context)
com.jayqqaa12.abase.core.ItemView_: com.jayqqaa12.abase.core.ItemView build(android.content.Context)
com.jayqqaa12.abase.core.ItemView_: void onFinishInflate()
com.jayqqaa12.abase.core.ItemView_: void init_()
com.jayqqaa12.abase.core.activity.AActivity
com.jayqqaa12.abase.core.activity.AActivity: com.jayqqaa12.abase.core.Abus bus
com.jayqqaa12.abase.core.activity.AActivity: AActivity()
com.jayqqaa12.abase.core.activity.AActivity: void onCreate(android.os.Bundle)
com.jayqqaa12.abase.core.activity.AActivity: void onDestroy()
com.jayqqaa12.abase.core.activity.AActivity: void afterInject()
com.jayqqaa12.abase.core.activity.AActivity: void afterView()
com.jayqqaa12.abase.core.activity.AActivity: void init()
com.jayqqaa12.abase.core.activity.AActivity: void connect()
com.jayqqaa12.abase.core.activity.AActivity_
com.jayqqaa12.abase.core.activity.AActivity_: org.androidannotations.api.view.OnViewChangedNotifier onViewChangedNotifier_
com.jayqqaa12.abase.core.activity.AActivity_: AActivity_()
com.jayqqaa12.abase.core.activity.AActivity_: void onCreate(android.os.Bundle)
com.jayqqaa12.abase.core.activity.AActivity_: void init_(android.os.Bundle)
com.jayqqaa12.abase.core.activity.AActivity_: void setContentView(int)
com.jayqqaa12.abase.core.activity.AActivity_: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)
com.jayqqaa12.abase.core.activity.AActivity_: void setContentView(android.view.View)
com.jayqqaa12.abase.core.activity.AActivity_: com.jayqqaa12.abase.core.activity.AActivity_$IntentBuilder_ intent(android.content.Context)
com.jayqqaa12.abase.core.activity.AActivity_: com.jayqqaa12.abase.core.activity.AActivity_$IntentBuilder_ intent(android.support.v4.app.Fragment)
com.jayqqaa12.abase.core.activity.AActivity_: void onViewChanged(org.androidannotations.api.view.HasViews)
com.jayqqaa12.abase.core.activity.AActivity_$IntentBuilder_
com.jayqqaa12.abase.core.activity.AActivity_$IntentBuilder_: android.support.v4.app.Fragment fragmentSupport_
com.jayqqaa12.abase.core.activity.AActivity_$IntentBuilder_: AActivity_$IntentBuilder_(android.content.Context)
com.jayqqaa12.abase.core.activity.AActivity_$IntentBuilder_: AActivity_$IntentBuilder_(android.support.v4.app.Fragment)
com.jayqqaa12.abase.core.activity.AActivity_$IntentBuilder_: void startForResult(int)
com.jayqqaa12.abase.core.activity.AAdapter
com.jayqqaa12.abase.core.activity.AAdapter: java.util.List data
com.jayqqaa12.abase.core.activity.AAdapter: java.lang.Class clazz
com.jayqqaa12.abase.core.activity.AAdapter: android.content.Context context
com.jayqqaa12.abase.core.activity.AAdapter: AAdapter()
com.jayqqaa12.abase.core.activity.AAdapter: AAdapter(java.lang.Class,android.content.Context)
com.jayqqaa12.abase.core.activity.AAdapter: AAdapter(java.lang.Class,android.content.Context,java.util.List)
com.jayqqaa12.abase.core.activity.AAdapter: void setItemView(java.lang.Class,android.content.Context)
com.jayqqaa12.abase.core.activity.AAdapter: void refreshListView(android.widget.ListView)
com.jayqqaa12.abase.core.activity.AAdapter: void setData(java.util.List)
com.jayqqaa12.abase.core.activity.AAdapter: void addData(java.util.List)
com.jayqqaa12.abase.core.activity.AAdapter: java.lang.Object getItem(int)
com.jayqqaa12.abase.core.activity.AAdapter: long getItemId(int)
com.jayqqaa12.abase.core.activity.AAdapter: int getCount()
com.jayqqaa12.abase.core.activity.AAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)
com.jayqqaa12.abase.core.activity.AExpandableListAdapter
com.jayqqaa12.abase.core.activity.AExpandableListAdapter: java.lang.Class childClazz
com.jayqqaa12.abase.core.activity.AExpandableListAdapter: java.lang.Class groupClazz
com.jayqqaa12.abase.core.activity.AExpandableListAdapter: android.content.Context context
com.jayqqaa12.abase.core.activity.AExpandableListAdapter: java.util.List groups
com.jayqqaa12.abase.core.activity.AExpandableListAdapter: AExpandableListAdapter()
com.jayqqaa12.abase.core.activity.AExpandableListAdapter: AExpandableListAdapter(java.lang.Class,java.lang.Class,android.content.Context)
com.jayqqaa12.abase.core.activity.AExpandableListAdapter: void setData(java.util.List)
com.jayqqaa12.abase.core.activity.AExpandableListAdapter: int getGroupCount()
com.jayqqaa12.abase.core.activity.AExpandableListAdapter: int getChildrenCount(int)
com.jayqqaa12.abase.core.activity.AExpandableListAdapter: com.jayqqaa12.abase.model.Group getGroup(int)
com.jayqqaa12.abase.core.activity.AExpandableListAdapter: java.lang.Object getChild(int,int)
com.jayqqaa12.abase.core.activity.AExpandableListAdapter: long getGroupId(int)
com.jayqqaa12.abase.core.activity.AExpandableListAdapter: long getChildId(int,int)
com.jayqqaa12.abase.core.activity.AExpandableListAdapter: boolean hasStableIds()
com.jayqqaa12.abase.core.activity.AExpandableListAdapter: void setItemView(java.lang.Class,java.lang.Class,android.content.Context)
com.jayqqaa12.abase.core.activity.AExpandableListAdapter: android.view.View getGroupView(int,boolean,android.view.View,android.view.ViewGroup)
com.jayqqaa12.abase.core.activity.AExpandableListAdapter: android.view.View getChildView(int,int,boolean,android.view.View,android.view.ViewGroup)
com.jayqqaa12.abase.core.activity.AExpandableListAdapter: boolean isChildSelectable(int,int)
com.jayqqaa12.abase.core.activity.AExpandableListAdapter: java.lang.Object getGroup(int)
com.jayqqaa12.abase.core.activity.APagerAdapter
com.jayqqaa12.abase.core.activity.APagerAdapter: java.util.Map views
com.jayqqaa12.abase.core.activity.APagerAdapter: java.util.List data
com.jayqqaa12.abase.core.activity.APagerAdapter: java.lang.Class clazz
com.jayqqaa12.abase.core.activity.APagerAdapter: android.content.Context context
com.jayqqaa12.abase.core.activity.APagerAdapter: void setData(java.util.List)
com.jayqqaa12.abase.core.activity.APagerAdapter: APagerAdapter()
com.jayqqaa12.abase.core.activity.APagerAdapter: APagerAdapter(android.content.Context,java.lang.Class,java.util.List)
com.jayqqaa12.abase.core.activity.APagerAdapter: APagerAdapter(android.content.Context,java.lang.Class,java.lang.Object[])
com.jayqqaa12.abase.core.activity.APagerAdapter: void setItemView(java.lang.Class,android.content.Context)
com.jayqqaa12.abase.core.activity.APagerAdapter: APagerAdapter(java.util.Map)
com.jayqqaa12.abase.core.activity.APagerAdapter: APagerAdapter(int[])
com.jayqqaa12.abase.core.activity.APagerAdapter: APagerAdapter(android.view.View[])
com.jayqqaa12.abase.core.activity.APagerAdapter: void destroyItem(android.view.View,int,java.lang.Object)
com.jayqqaa12.abase.core.activity.APagerAdapter: java.lang.Object instantiateItem(android.view.View,int)
com.jayqqaa12.abase.core.activity.APagerAdapter: int getCount()
com.jayqqaa12.abase.core.activity.APagerAdapter: boolean isViewFromObject(android.view.View,java.lang.Object)
com.jayqqaa12.abase.core.fragment.AFragment
com.jayqqaa12.abase.core.fragment.AFragment: com.jayqqaa12.abase.core.Abus bus
com.jayqqaa12.abase.core.fragment.AFragment: boolean aleryInit
com.jayqqaa12.abase.core.fragment.AFragment: AFragment()
com.jayqqaa12.abase.core.fragment.AFragment: android.support.v4.app.Fragment newInstance(java.lang.Class)
com.jayqqaa12.abase.core.fragment.AFragment: java.util.List newInstances(java.lang.Class[])
com.jayqqaa12.abase.core.fragment.AFragment: java.util.List newInstances(java.util.List,java.lang.Class[])
com.jayqqaa12.abase.core.fragment.AFragment: android.support.v4.app.Fragment newInstance(java.lang.Class,android.os.Bundle)
com.jayqqaa12.abase.core.fragment.AFragment: void afterInject()
com.jayqqaa12.abase.core.fragment.AFragment: void afterView()
com.jayqqaa12.abase.core.fragment.AFragment: void init()
com.jayqqaa12.abase.core.fragment.AFragment: void connect()
com.jayqqaa12.abase.core.fragment.AFragment: void onDestroy()
com.jayqqaa12.abase.core.fragment.AFragment: void onDetach()
com.jayqqaa12.abase.core.fragment.AFragmentActivity
com.jayqqaa12.abase.core.fragment.AFragmentActivity: com.jayqqaa12.abase.core.Abus bus
com.jayqqaa12.abase.core.fragment.AFragmentActivity: AFragmentActivity()
com.jayqqaa12.abase.core.fragment.AFragmentActivity: void onDestroy()
com.jayqqaa12.abase.core.fragment.AFragmentActivity: void afterInject()
com.jayqqaa12.abase.core.fragment.AFragmentActivity: void afterView()
com.jayqqaa12.abase.core.fragment.AFragmentActivity: void init()
com.jayqqaa12.abase.core.fragment.AFragmentActivity: void connect()
com.jayqqaa12.abase.core.fragment.AFragmentActivity: android.support.v4.app.FragmentTabHost getTabHost(int)
com.jayqqaa12.abase.core.fragment.AFragmentActivity: java.lang.Class[] getSubClass(java.lang.Class[])
com.jayqqaa12.abase.core.fragment.AFragmentActivity: android.support.v4.app.FragmentTabHost initMyTab(android.support.v4.app.FragmentTabHost,int,int[][],int[],java.lang.Class[])
com.jayqqaa12.abase.core.fragment.AFragmentActivity: void onPageScrollStateChanged(int)
com.jayqqaa12.abase.core.fragment.AFragmentActivity: void onPageScrolled(int,float,int)
com.jayqqaa12.abase.core.fragment.AFragmentActivity: void onPageSelected(int)
com.jayqqaa12.abase.core.fragment.AFragmentActivity: void onTabChanged(java.lang.String)
com.jayqqaa12.abase.core.fragment.AFragmentActivity_
com.jayqqaa12.abase.core.fragment.AFragmentActivity_: org.androidannotations.api.view.OnViewChangedNotifier onViewChangedNotifier_
com.jayqqaa12.abase.core.fragment.AFragmentActivity_: AFragmentActivity_()
com.jayqqaa12.abase.core.fragment.AFragmentActivity_: void onCreate(android.os.Bundle)
com.jayqqaa12.abase.core.fragment.AFragmentActivity_: void init_(android.os.Bundle)
com.jayqqaa12.abase.core.fragment.AFragmentActivity_: void setContentView(int)
com.jayqqaa12.abase.core.fragment.AFragmentActivity_: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)
com.jayqqaa12.abase.core.fragment.AFragmentActivity_: void setContentView(android.view.View)
com.jayqqaa12.abase.core.fragment.AFragmentActivity_: com.jayqqaa12.abase.core.fragment.AFragmentActivity_$IntentBuilder_ intent(android.content.Context)
com.jayqqaa12.abase.core.fragment.AFragmentActivity_: com.jayqqaa12.abase.core.fragment.AFragmentActivity_$IntentBuilder_ intent(android.support.v4.app.Fragment)
com.jayqqaa12.abase.core.fragment.AFragmentActivity_: boolean onKeyDown(int,android.view.KeyEvent)
com.jayqqaa12.abase.core.fragment.AFragmentActivity_: void onViewChanged(org.androidannotations.api.view.HasViews)
com.jayqqaa12.abase.core.fragment.AFragmentActivity_$IntentBuilder_
com.jayqqaa12.abase.core.fragment.AFragmentActivity_$IntentBuilder_: android.support.v4.app.Fragment fragmentSupport_
com.jayqqaa12.abase.core.fragment.AFragmentActivity_$IntentBuilder_: AFragmentActivity_$IntentBuilder_(android.content.Context)
com.jayqqaa12.abase.core.fragment.AFragmentActivity_$IntentBuilder_: AFragmentActivity_$IntentBuilder_(android.support.v4.app.Fragment)
com.jayqqaa12.abase.core.fragment.AFragmentActivity_$IntentBuilder_: void startForResult(int)
com.jayqqaa12.abase.core.fragment.AFragmentPagerAdapter
com.jayqqaa12.abase.core.fragment.AFragmentPagerAdapter: java.util.List list
com.jayqqaa12.abase.core.fragment.AFragmentPagerAdapter: java.util.List lables
com.jayqqaa12.abase.core.fragment.AFragmentPagerAdapter: AFragmentPagerAdapter(android.support.v4.app.FragmentManager)
com.jayqqaa12.abase.core.fragment.AFragmentPagerAdapter: AFragmentPagerAdapter(android.support.v4.app.FragmentManager,java.util.ArrayList)
com.jayqqaa12.abase.core.fragment.AFragmentPagerAdapter: AFragmentPagerAdapter(android.support.v4.app.FragmentManager,android.support.v4.app.Fragment[])
com.jayqqaa12.abase.core.fragment.AFragmentPagerAdapter: void setFragment(java.lang.Class[])
com.jayqqaa12.abase.core.fragment.AFragmentPagerAdapter: void setFragment(android.support.v4.app.Fragment[])
com.jayqqaa12.abase.core.fragment.AFragmentPagerAdapter: void setFragment(java.util.List)
com.jayqqaa12.abase.core.fragment.AFragmentPagerAdapter: void setLable(java.lang.String[])
com.jayqqaa12.abase.core.fragment.AFragmentPagerAdapter: java.lang.CharSequence getPageTitle(int)
com.jayqqaa12.abase.core.fragment.AFragmentPagerAdapter: android.support.v4.app.Fragment getItem(int)
com.jayqqaa12.abase.core.fragment.AFragmentPagerAdapter: int getCount()
com.jayqqaa12.abase.core.fragment.AFragment_
com.jayqqaa12.abase.core.fragment.AFragment_: org.androidannotations.api.view.OnViewChangedNotifier onViewChangedNotifier_
com.jayqqaa12.abase.core.fragment.AFragment_: android.view.View contentView_
com.jayqqaa12.abase.core.fragment.AFragment_: AFragment_()
com.jayqqaa12.abase.core.fragment.AFragment_: void onCreate(android.os.Bundle)
com.jayqqaa12.abase.core.fragment.AFragment_: android.view.View findViewById(int)
com.jayqqaa12.abase.core.fragment.AFragment_: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
com.jayqqaa12.abase.core.fragment.AFragment_: void onDestroyView()
com.jayqqaa12.abase.core.fragment.AFragment_: void init_(android.os.Bundle)
com.jayqqaa12.abase.core.fragment.AFragment_: void onViewCreated(android.view.View,android.os.Bundle)
com.jayqqaa12.abase.core.fragment.AFragment_: com.jayqqaa12.abase.core.fragment.AFragment_$FragmentBuilder_ builder()
com.jayqqaa12.abase.core.fragment.AFragment_: void onViewChanged(org.androidannotations.api.view.HasViews)
com.jayqqaa12.abase.core.fragment.AFragment_$FragmentBuilder_
com.jayqqaa12.abase.core.fragment.AFragment_$FragmentBuilder_: AFragment_$FragmentBuilder_()
com.jayqqaa12.abase.core.fragment.AFragment_$FragmentBuilder_: com.jayqqaa12.abase.core.fragment.AFragment build()
com.jayqqaa12.abase.core.fragment.AFragment_$FragmentBuilder_: java.lang.Object build()
com.jayqqaa12.abase.core.listener.OnLoadStatusListener
com.jayqqaa12.abase.core.listener.OnLoadStatusListener: void onLoadStatus(java.lang.Object,int)
com.jayqqaa12.abase.download.DownloadInfo
com.jayqqaa12.abase.download.DownloadInfo: long id
com.jayqqaa12.abase.download.DownloadInfo: com.lidroid.xutils.http.HttpHandler handler
com.jayqqaa12.abase.download.DownloadInfo: com.lidroid.xutils.http.HttpHandler$State state
com.jayqqaa12.abase.download.DownloadInfo: java.lang.String downloadUrl
com.jayqqaa12.abase.download.DownloadInfo: java.lang.String fileName
com.jayqqaa12.abase.download.DownloadInfo: java.lang.String fileSavePath
com.jayqqaa12.abase.download.DownloadInfo: long progress
com.jayqqaa12.abase.download.DownloadInfo: long fileLength
com.jayqqaa12.abase.download.DownloadInfo: boolean autoResume
com.jayqqaa12.abase.download.DownloadInfo: boolean autoRename
com.jayqqaa12.abase.download.DownloadInfo: DownloadInfo()
com.jayqqaa12.abase.download.DownloadInfo: DownloadInfo(java.lang.String,java.lang.String,java.lang.String)
com.jayqqaa12.abase.download.DownloadInfo: long getId()
com.jayqqaa12.abase.download.DownloadInfo: void setId(long)
com.jayqqaa12.abase.download.DownloadInfo: com.lidroid.xutils.http.HttpHandler getHandler()
com.jayqqaa12.abase.download.DownloadInfo: void setHandler(com.lidroid.xutils.http.HttpHandler)
com.jayqqaa12.abase.download.DownloadInfo: com.lidroid.xutils.http.HttpHandler$State getState()
com.jayqqaa12.abase.download.DownloadInfo: void setState(com.lidroid.xutils.http.HttpHandler$State)
com.jayqqaa12.abase.download.DownloadInfo: java.lang.String getDownloadUrl()
com.jayqqaa12.abase.download.DownloadInfo: void setDownloadUrl(java.lang.String)
com.jayqqaa12.abase.download.DownloadInfo: java.lang.String getFileName()
com.jayqqaa12.abase.download.DownloadInfo: void setFileName(java.lang.String)
com.jayqqaa12.abase.download.DownloadInfo: java.lang.String getFileSavePath()
com.jayqqaa12.abase.download.DownloadInfo: void setFileSavePath(java.lang.String)
com.jayqqaa12.abase.download.DownloadInfo: long getProgress()
com.jayqqaa12.abase.download.DownloadInfo: void setProgress(long)
com.jayqqaa12.abase.download.DownloadInfo: long getFileLength()
com.jayqqaa12.abase.download.DownloadInfo: void setFileLength(long)
com.jayqqaa12.abase.download.DownloadInfo: boolean isAutoResume()
com.jayqqaa12.abase.download.DownloadInfo: void setAutoResume(boolean)
com.jayqqaa12.abase.download.DownloadInfo: boolean isAutoRename()
com.jayqqaa12.abase.download.DownloadInfo: void setAutoRename(boolean)
com.jayqqaa12.abase.download.DownloadInfo: boolean equals(java.lang.Object)
com.jayqqaa12.abase.download.DownloadInfo: int hashCode()
com.jayqqaa12.abase.download.DownloadManager
com.jayqqaa12.abase.download.DownloadManager: java.util.List downloadInfoList
com.jayqqaa12.abase.download.DownloadManager: int maxDownloadThread
com.jayqqaa12.abase.download.DownloadManager: com.jayqqaa12.abase.core.ADao db
com.jayqqaa12.abase.download.DownloadManager: DownloadManager(java.lang.Class)
com.jayqqaa12.abase.download.DownloadManager: java.util.List getDownloadList()
com.jayqqaa12.abase.download.DownloadManager: int getDownloadInfoListCount()
com.jayqqaa12.abase.download.DownloadManager: com.jayqqaa12.abase.download.DownloadInfo getDownloadInfo(int)
com.jayqqaa12.abase.download.DownloadManager: void addNewDownload(com.jayqqaa12.abase.download.DownloadInfo,com.lidroid.xutils.http.callback.RequestCallBack)
com.jayqqaa12.abase.download.DownloadManager: void resumeDownload(int,com.lidroid.xutils.http.callback.RequestCallBack)
com.jayqqaa12.abase.download.DownloadManager: void resumeDownload(com.jayqqaa12.abase.download.DownloadInfo,com.lidroid.xutils.http.callback.RequestCallBack)
com.jayqqaa12.abase.download.DownloadManager: void removeDownload(int)
com.jayqqaa12.abase.download.DownloadManager: void removeDownload(com.jayqqaa12.abase.download.DownloadInfo)
com.jayqqaa12.abase.download.DownloadManager: void stopDownload(int)
com.jayqqaa12.abase.download.DownloadManager: void stopDownload(com.jayqqaa12.abase.download.DownloadInfo)
com.jayqqaa12.abase.download.DownloadManager: void stopAllDownload()
com.jayqqaa12.abase.download.DownloadManager: void backupDownloadInfoList()
com.jayqqaa12.abase.download.DownloadManager: int getMaxDownloadThread()
com.jayqqaa12.abase.download.DownloadManager: void setMaxDownloadThread(int)
com.jayqqaa12.abase.download.DownloadManager: com.jayqqaa12.abase.core.ADao access$0(com.jayqqaa12.abase.download.DownloadManager)
com.jayqqaa12.abase.download.DownloadManager$HttpHandlerStateConverter
com.jayqqaa12.abase.download.DownloadManager$HttpHandlerStateConverter: com.jayqqaa12.abase.download.DownloadManager this$0
com.jayqqaa12.abase.download.DownloadManager$HttpHandlerStateConverter: DownloadManager$HttpHandlerStateConverter(com.jayqqaa12.abase.download.DownloadManager)
com.jayqqaa12.abase.download.DownloadManager$HttpHandlerStateConverter: com.lidroid.xutils.http.HttpHandler$State getFieldValue(android.database.Cursor,int)
com.jayqqaa12.abase.download.DownloadManager$HttpHandlerStateConverter: com.lidroid.xutils.http.HttpHandler$State getFieldValue(java.lang.String)
com.jayqqaa12.abase.download.DownloadManager$HttpHandlerStateConverter: java.lang.Object fieldValue2ColumnValue(com.lidroid.xutils.http.HttpHandler$State)
com.jayqqaa12.abase.download.DownloadManager$HttpHandlerStateConverter: com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType()
com.jayqqaa12.abase.download.DownloadManager$HttpHandlerStateConverter: java.lang.Object fieldValue2ColumnValue(java.lang.Object)
com.jayqqaa12.abase.download.DownloadManager$HttpHandlerStateConverter: java.lang.Object getFieldValue(android.database.Cursor,int)
com.jayqqaa12.abase.download.DownloadManager$HttpHandlerStateConverter: java.lang.Object getFieldValue(java.lang.String)
com.jayqqaa12.abase.download.DownloadManager$HttpHandlerStateConverter: DownloadManager$HttpHandlerStateConverter(com.jayqqaa12.abase.download.DownloadManager,com.jayqqaa12.abase.download.DownloadManager$HttpHandlerStateConverter)
com.jayqqaa12.abase.download.DownloadManager$ManagerCallBack
com.jayqqaa12.abase.download.DownloadManager$ManagerCallBack: com.jayqqaa12.abase.download.DownloadInfo downloadInfo
com.jayqqaa12.abase.download.DownloadManager$ManagerCallBack: com.lidroid.xutils.http.callback.RequestCallBack baseCallBack
com.jayqqaa12.abase.download.DownloadManager$ManagerCallBack: com.jayqqaa12.abase.download.DownloadManager this$0
com.jayqqaa12.abase.download.DownloadManager$ManagerCallBack: com.lidroid.xutils.http.callback.RequestCallBack getBaseCallBack()
com.jayqqaa12.abase.download.DownloadManager$ManagerCallBack: void setBaseCallBack(com.lidroid.xutils.http.callback.RequestCallBack)
com.jayqqaa12.abase.download.DownloadManager$ManagerCallBack: DownloadManager$ManagerCallBack(com.jayqqaa12.abase.download.DownloadManager,com.jayqqaa12.abase.download.DownloadInfo,com.lidroid.xutils.http.callback.RequestCallBack)
com.jayqqaa12.abase.download.DownloadManager$ManagerCallBack: java.lang.Object getUserTag()
com.jayqqaa12.abase.download.DownloadManager$ManagerCallBack: void setUserTag(java.lang.Object)
com.jayqqaa12.abase.download.DownloadManager$ManagerCallBack: void onStart()
com.jayqqaa12.abase.download.DownloadManager$ManagerCallBack: void onStopped()
com.jayqqaa12.abase.download.DownloadManager$ManagerCallBack: void onLoading(long,long,boolean)
com.jayqqaa12.abase.download.DownloadManager$ManagerCallBack: void onSuccess(com.lidroid.xutils.http.ResponseInfo)
com.jayqqaa12.abase.download.DownloadManager$ManagerCallBack: void onFailure(com.lidroid.xutils.exception.HttpException,java.lang.String)
com.jayqqaa12.abase.download.DownloadManager$ManagerCallBack: DownloadManager$ManagerCallBack(com.jayqqaa12.abase.download.DownloadManager,com.jayqqaa12.abase.download.DownloadInfo,com.lidroid.xutils.http.callback.RequestCallBack,com.jayqqaa12.abase.download.DownloadManager$ManagerCallBack)
com.jayqqaa12.abase.download.DownloadService
com.jayqqaa12.abase.download.DownloadService: com.jayqqaa12.abase.download.DownloadManager DOWNLOAD_MANAGER
com.jayqqaa12.abase.download.DownloadService: DownloadService()
com.jayqqaa12.abase.download.DownloadService: void setDownloadManager(com.jayqqaa12.abase.download.DownloadManager)
com.jayqqaa12.abase.download.DownloadService: com.jayqqaa12.abase.download.DownloadManager getDownloadManager()
com.jayqqaa12.abase.download.DownloadService: android.os.IBinder onBind(android.content.Intent)
com.jayqqaa12.abase.download.DownloadService: void onCreate()
com.jayqqaa12.abase.download.DownloadService: void onDestroy()
com.jayqqaa12.abase.exception.ACrashHandler
com.jayqqaa12.abase.exception.ACrashHandler: ACrashHandler()
com.jayqqaa12.abase.exception.ACrashHandler: void uncaughtException(java.lang.Thread,java.lang.Throwable)
com.jayqqaa12.abase.exception.ACrashHandler: void doHandler(java.lang.String)
com.jayqqaa12.abase.exception.ACrashHandler: void saveErrorLog(java.lang.Exception)
com.jayqqaa12.abase.exception.AException
com.jayqqaa12.abase.exception.AException: long serialVersionUID
com.jayqqaa12.abase.exception.AException: AException()
com.jayqqaa12.abase.exception.AException: AException(java.lang.String)
com.jayqqaa12.abase.exception.AException: AException(java.lang.Throwable)
com.jayqqaa12.abase.exception.AException: AException(java.lang.String,java.lang.Throwable)
com.jayqqaa12.abase.kit.ConfigKit
com.jayqqaa12.abase.kit.ConfigKit: android.content.SharedPreferences sp
com.jayqqaa12.abase.kit.ConfigKit: void <clinit>()
com.jayqqaa12.abase.kit.ConfigKit: ConfigKit()
com.jayqqaa12.abase.kit.ConfigKit: android.content.SharedPreferences getShadredPreferences()
com.jayqqaa12.abase.kit.ConfigKit: android.content.SharedPreferences getShadredPreferences(java.lang.String)
com.jayqqaa12.abase.kit.ConfigKit: android.content.SharedPreferences getDefaultSharedPreferences()
com.jayqqaa12.abase.kit.ConfigKit: java.lang.String getString(java.lang.String,java.lang.String)
com.jayqqaa12.abase.kit.ConfigKit: java.lang.Boolean getBoolean(java.lang.String,java.lang.Boolean)
com.jayqqaa12.abase.kit.ConfigKit: int getInteger(java.lang.String,int)
com.jayqqaa12.abase.kit.ConfigKit: long getLong(java.lang.String,long)
com.jayqqaa12.abase.kit.ConfigKit: float getFloat(java.lang.String,float)
com.jayqqaa12.abase.kit.ConfigKit: void setValue(java.lang.String,java.lang.Object)
com.jayqqaa12.abase.kit.DoubleClickExitKit
com.jayqqaa12.abase.kit.DoubleClickExitKit: android.app.Activity mActivity
com.jayqqaa12.abase.kit.DoubleClickExitKit: boolean isOnKeyBacking
com.jayqqaa12.abase.kit.DoubleClickExitKit: android.os.Handler mHandler
com.jayqqaa12.abase.kit.DoubleClickExitKit: android.widget.Toast mBackToast
com.jayqqaa12.abase.kit.DoubleClickExitKit: java.lang.Runnable onBackTimeRunnable
com.jayqqaa12.abase.kit.DoubleClickExitKit: DoubleClickExitKit(android.app.Activity)
com.jayqqaa12.abase.kit.DoubleClickExitKit: boolean onKeyDown(int,android.view.KeyEvent)
com.jayqqaa12.abase.kit.DoubleClickExitKit: void access$0(com.jayqqaa12.abase.kit.DoubleClickExitKit,boolean)
com.jayqqaa12.abase.kit.DoubleClickExitKit: android.widget.Toast access$1(com.jayqqaa12.abase.kit.DoubleClickExitKit)
com.jayqqaa12.abase.kit.DoubleClickExitKit$1
com.jayqqaa12.abase.kit.DoubleClickExitKit$1: com.jayqqaa12.abase.kit.DoubleClickExitKit this$0
com.jayqqaa12.abase.kit.DoubleClickExitKit$1: DoubleClickExitKit$1(com.jayqqaa12.abase.kit.DoubleClickExitKit)
com.jayqqaa12.abase.kit.DoubleClickExitKit$1: void run()
com.jayqqaa12.abase.kit.FragmentKit
com.jayqqaa12.abase.kit.FragmentKit: FragmentKit()
com.jayqqaa12.abase.kit.FragmentKit: void replace(int,android.support.v4.app.Fragment,android.support.v4.app.FragmentManager)
com.jayqqaa12.abase.kit.FragmentKit: void add(int,android.support.v4.app.Fragment,android.support.v4.app.FragmentManager)
com.jayqqaa12.abase.kit.FragmentKit: void remove(android.support.v4.app.Fragment,android.support.v4.app.FragmentManager)
com.jayqqaa12.abase.kit.IntentKit
com.jayqqaa12.abase.kit.IntentKit: IntentKit()
com.jayqqaa12.abase.kit.IntentKit: android.content.Intent getSubIntent(android.content.Context,java.lang.Class)
com.jayqqaa12.abase.kit.IntentKit: android.content.Intent getIntent(java.lang.String[],java.lang.Object[])
com.jayqqaa12.abase.kit.IntentKit: void startSubService(android.content.Context,java.lang.Class)
com.jayqqaa12.abase.kit.IntentKit: void startSubIntent(android.content.Context,java.lang.Class,java.lang.String,java.lang.Object)
com.jayqqaa12.abase.kit.IntentKit: void startSubIntent(android.content.Context,java.lang.Class)
com.jayqqaa12.abase.kit.IntentKit: void startSubIntent(android.content.Context,java.lang.Class,java.lang.String[],java.lang.Object[])
com.jayqqaa12.abase.kit.IntentKit: void startIntent(android.content.Context,java.lang.Class)
com.jayqqaa12.abase.kit.IntentKit: android.content.Intent startIntent(android.content.Context,java.lang.Class,java.lang.String,android.os.Bundle)
com.jayqqaa12.abase.kit.IntentKit: android.content.Intent startService(android.content.Context,java.lang.Class)
com.jayqqaa12.abase.kit.IntentKit: android.content.Intent startService(android.content.ContextWrapper,java.lang.Class)
com.jayqqaa12.abase.kit.IntentKit: void startService(android.content.Context,java.lang.Class,java.lang.String,java.io.Serializable)
com.jayqqaa12.abase.kit.IntentKit: void stopService(android.content.Context,java.lang.Class)
com.jayqqaa12.abase.kit.IntentKit: void startIntent(android.content.Context,java.lang.Class,java.lang.String,java.lang.Object)
com.jayqqaa12.abase.kit.IntentKit: void startIntent(android.content.Context,java.lang.Class,java.lang.String,java.io.Serializable)
com.jayqqaa12.abase.kit.IntentKit: void startIntent(android.content.Context,java.lang.Class,java.lang.String[],java.lang.Object[])
com.jayqqaa12.abase.kit.IntentKit: void startIntent(android.content.Context,java.lang.Class,java.lang.String,java.io.Serializable,java.lang.String,java.lang.Object)
com.jayqqaa12.abase.kit.IntentKit: void startIntentForReuslt(android.app.Activity,java.lang.Class,java.lang.String,java.io.Serializable,java.lang.String,java.lang.Object,int)
com.jayqqaa12.abase.kit.IntentKit: void startIntentForReuslt(android.app.Activity,java.lang.Class,java.lang.String,java.io.Serializable,java.lang.String[],java.lang.Object[],int)
com.jayqqaa12.abase.kit.IntentKit: void startIntentForReuslt(android.app.Activity,java.lang.Class,java.lang.String,java.lang.Object,int)
com.jayqqaa12.abase.kit.IntentKit: void startIntentForReuslt(android.app.Activity,java.lang.Class,java.lang.String[],java.lang.Object[],int)
com.jayqqaa12.abase.kit.IntentKit: void putExtra(java.lang.String,java.lang.Object,android.content.Intent)
com.jayqqaa12.abase.kit.IntentKit: void startIntentForReuslt(android.app.Activity,java.lang.Class,int)
com.jayqqaa12.abase.kit.ManageKit
com.jayqqaa12.abase.kit.ManageKit: ManageKit()
com.jayqqaa12.abase.kit.ManageKit: android.app.DownloadManager getDownloadManger()
com.jayqqaa12.abase.kit.ManageKit: android.app.admin.DevicePolicyManager getDevicePolicyManager()
com.jayqqaa12.abase.kit.ManageKit: android.app.KeyguardManager getKeyguardManager()
com.jayqqaa12.abase.kit.ManageKit: void registAdminDevice(android.content.Context,java.lang.Class)
com.jayqqaa12.abase.kit.ManageKit: android.app.AlarmManager getAlarmManager()
com.jayqqaa12.abase.kit.ManageKit: android.location.LocationManager getLocationManager()
com.jayqqaa12.abase.kit.ManageKit: android.view.WindowManager getWindowManager()
com.jayqqaa12.abase.kit.ManageKit: android.app.ActivityManager getActivityManager()
com.jayqqaa12.abase.kit.ManageKit: android.app.NotificationManager getNotificationManager()
com.jayqqaa12.abase.kit.ManageKit: android.content.pm.PackageManager getPackManager()
com.jayqqaa12.abase.kit.ManageKit: android.os.Bundle getMetaData()
com.jayqqaa12.abase.kit.ManageKit: android.net.ConnectivityManager getConnectivtyManager()
com.jayqqaa12.abase.kit.ManageKit: android.os.PowerManager getPowerManager()
com.jayqqaa12.abase.kit.ManageKit: android.telephony.TelephonyManager getTelephonyManager()
com.jayqqaa12.abase.kit.ManageKit: android.net.wifi.WifiManager getWifiManger()
com.jayqqaa12.abase.kit.ManageKit: android.view.LayoutInflater getInflater()
com.jayqqaa12.abase.kit.ManageKit: android.view.inputmethod.InputMethodManager getInputMethodManager()
com.jayqqaa12.abase.kit.MsgKit
com.jayqqaa12.abase.kit.MsgKit: int MSG_ADD
com.jayqqaa12.abase.kit.MsgKit: int MSG_REMOVE
com.jayqqaa12.abase.kit.MsgKit: int MSG_SAVE
com.jayqqaa12.abase.kit.MsgKit: int MSG_DELETE
com.jayqqaa12.abase.kit.MsgKit: int MSG_UPDATE
com.jayqqaa12.abase.kit.MsgKit: int MSG_SERACH
com.jayqqaa12.abase.kit.MsgKit: int MSG_FLASH
com.jayqqaa12.abase.kit.MsgKit: int MSG_CREATE
com.jayqqaa12.abase.kit.MsgKit: int MSG_FAIL
com.jayqqaa12.abase.kit.MsgKit: int MSG_SUCCESS
com.jayqqaa12.abase.kit.MsgKit: int MSG_FINISH
com.jayqqaa12.abase.kit.MsgKit: int MSG_STOP
com.jayqqaa12.abase.kit.MsgKit: int MSG_PAUSE
com.jayqqaa12.abase.kit.MsgKit: int MSG_DESTORY
com.jayqqaa12.abase.kit.MsgKit: int MSG_UP
com.jayqqaa12.abase.kit.MsgKit: int MSG_DOWN
com.jayqqaa12.abase.kit.MsgKit: int MSG_RIGHT
com.jayqqaa12.abase.kit.MsgKit: int MSG_LEFT
com.jayqqaa12.abase.kit.MsgKit: int MSG_START
com.jayqqaa12.abase.kit.MsgKit: int MSG_FIND
com.jayqqaa12.abase.kit.MsgKit: int MSG_LOAD
com.jayqqaa12.abase.kit.MsgKit: int MSG_REFRESH
com.jayqqaa12.abase.kit.MsgKit: int MSG_INIT
com.jayqqaa12.abase.kit.MsgKit: int MSG_ADD_REFRESH
com.jayqqaa12.abase.kit.MsgKit: int MSG_RETRY
com.jayqqaa12.abase.kit.MsgKit: int MSG_ALERY_INIT
com.jayqqaa12.abase.kit.MsgKit: int MSG_RESUME
com.jayqqaa12.abase.kit.MsgKit: MsgKit()
com.jayqqaa12.abase.kit.MsgKit: android.os.Bundle getBundle(java.lang.String[],java.lang.Object[])
com.jayqqaa12.abase.kit.MsgKit: void putBundle(android.os.Bundle,java.lang.String,java.lang.Object)
com.jayqqaa12.abase.kit.MsgKit: java.util.List getBundle(java.lang.String,java.lang.Object[])
com.jayqqaa12.abase.kit.MsgKit: java.util.List getBundle(java.lang.String[],java.lang.Object[][])
com.jayqqaa12.abase.kit.MsgKit: void sendMessage(android.os.Handler$Callback,int,java.lang.Object)
com.jayqqaa12.abase.kit.MsgKit: void sendMessage(android.os.Handler,int)
com.jayqqaa12.abase.kit.MsgKit: void sendMessage(android.os.Handler,int,int)
com.jayqqaa12.abase.kit.MsgKit: void sendMessage(android.os.Handler,int,java.lang.Object)
com.jayqqaa12.abase.kit.ResKit
com.jayqqaa12.abase.kit.ResKit: ResKit()
com.jayqqaa12.abase.kit.ResKit: int getResId(java.lang.String,java.lang.String)
com.jayqqaa12.abase.kit.ResKit: int[] getIntegerArray(int)
com.jayqqaa12.abase.kit.ResKit: java.lang.String[] getStringArray(int)
com.jayqqaa12.abase.kit.ResKit: java.lang.String[] getLocates()
com.jayqqaa12.abase.kit.ResKit: android.content.Context getContext()
com.jayqqaa12.abase.kit.ResKit: java.lang.String[] getStringArray(int[])
com.jayqqaa12.abase.kit.TextKit
com.jayqqaa12.abase.kit.TextKit: TextKit()
com.jayqqaa12.abase.kit.TextKit: java.lang.String getDataSize(long)
com.jayqqaa12.abase.kit.TextKit: java.lang.String getKbToMb(long)
com.jayqqaa12.abase.kit.TextKit: java.lang.String getBitToMb(long)
com.jayqqaa12.abase.kit.TextKit: java.lang.String getByteToMb(long)
com.jayqqaa12.abase.kit.TimeKit
com.jayqqaa12.abase.kit.TimeKit: java.lang.String TIMESTAMP
com.jayqqaa12.abase.kit.TimeKit: long TIME_HOUR
com.jayqqaa12.abase.kit.TimeKit: long TIME_DAY
com.jayqqaa12.abase.kit.TimeKit: void <clinit>()
com.jayqqaa12.abase.kit.TimeKit: TimeKit()
com.jayqqaa12.abase.kit.TimeKit: void saveTime()
com.jayqqaa12.abase.kit.TimeKit: void initTimeout()
com.jayqqaa12.abase.kit.TimeKit: boolean isTimeout(long)
com.jayqqaa12.abase.kit.TimeKit: long getDiffTime()
com.jayqqaa12.abase.kit.Txt
com.jayqqaa12.abase.kit.Txt: java.lang.String str
com.jayqqaa12.abase.kit.Txt: Txt(java.lang.String)
com.jayqqaa12.abase.kit.Txt: int containSum(java.lang.String,java.lang.String)
com.jayqqaa12.abase.kit.Txt: java.lang.String cut(java.lang.String,int)
com.jayqqaa12.abase.kit.Txt: java.lang.String inject(java.lang.String,java.lang.String[])
com.jayqqaa12.abase.kit.Txt: java.lang.String injectBy(java.lang.String,java.lang.String,java.lang.String[])
com.jayqqaa12.abase.kit.Txt: java.lang.String join(java.lang.String[],java.lang.String)
com.jayqqaa12.abase.kit.Txt: java.lang.String[] split(java.lang.String,java.lang.String)
com.jayqqaa12.abase.kit.Txt: java.lang.String htmlToText(java.lang.String)
com.jayqqaa12.abase.kit.Txt: java.lang.String encodeHTML(java.lang.String)
com.jayqqaa12.abase.kit.Txt: double parseDouble(java.lang.String)
com.jayqqaa12.abase.kit.Txt: double parseDouble(java.lang.String,double)
com.jayqqaa12.abase.kit.Txt: int parseInt(java.lang.String)
com.jayqqaa12.abase.kit.Txt: int parseInt(java.lang.String,int)
com.jayqqaa12.abase.kit.Txt: long parseLong(java.lang.String)
com.jayqqaa12.abase.kit.Txt: long parseLong(java.lang.String,long)
com.jayqqaa12.abase.kit.Txt: boolean test(java.lang.String)
com.jayqqaa12.abase.kit.Txt: boolean find(java.lang.String)
com.jayqqaa12.abase.kit.Txt: com.jayqqaa12.abase.kit.Txt replace(java.lang.String,java.lang.String)
com.jayqqaa12.abase.kit.Txt: com.jayqqaa12.abase.kit.Txt replaceFirst(java.lang.String,java.lang.String)
com.jayqqaa12.abase.kit.Txt: com.jayqqaa12.abase.kit.Txt restr(java.lang.String,java.lang.String)
com.jayqqaa12.abase.kit.Txt: java.lang.String toString()
com.jayqqaa12.abase.kit.Txt: java.lang.String getExt(java.lang.String)
com.jayqqaa12.abase.kit.VersionKit
com.jayqqaa12.abase.kit.VersionKit: VersionKit()
com.jayqqaa12.abase.kit.VersionKit: java.lang.String getVersionName()
com.jayqqaa12.abase.kit.VersionKit: int getVersionCode()
com.jayqqaa12.abase.kit.VersionKit: boolean isNewVersion(int)
com.jayqqaa12.abase.kit.common.DateKit
com.jayqqaa12.abase.kit.common.DateKit: java.lang.String HH_MM_SS
com.jayqqaa12.abase.kit.common.DateKit: java.lang.String YYYY_MM_DD
com.jayqqaa12.abase.kit.common.DateKit: java.lang.String YYYY_MM_DD_HH_MM_SS
com.jayqqaa12.abase.kit.common.DateKit: java.lang.String YY_MM_DD_HH_MM_SS
com.jayqqaa12.abase.kit.common.DateKit: DateKit()
com.jayqqaa12.abase.kit.common.DateKit: long getZeroTime()
com.jayqqaa12.abase.kit.common.DateKit: java.util.Date getAfterDate(java.util.Date,int)
com.jayqqaa12.abase.kit.common.DateKit: java.util.Date getAfterDate(java.util.Date,int,int)
com.jayqqaa12.abase.kit.common.DateKit: int getMonthDay(int,int)
com.jayqqaa12.abase.kit.common.DateKit: int[] getMonthDayByYear(int)
com.jayqqaa12.abase.kit.common.DateKit: long[] dateDiff(java.lang.String,java.lang.String)
com.jayqqaa12.abase.kit.common.DateKit: long[] dateDiff(java.lang.String,java.lang.String,java.lang.String)
com.jayqqaa12.abase.kit.common.DateKit: java.util.Date parseDate(java.lang.String,java.lang.String)
com.jayqqaa12.abase.kit.common.DateKit: java.util.Date parseDate(java.lang.String)
com.jayqqaa12.abase.kit.common.DateKit: java.lang.String format(java.util.Date,java.lang.String)
com.jayqqaa12.abase.kit.common.DateKit: java.lang.String format(java.util.Date)
com.jayqqaa12.abase.kit.common.DateKit: int getYear(java.util.Date)
com.jayqqaa12.abase.kit.common.DateKit: int getMonth(java.util.Date)
com.jayqqaa12.abase.kit.common.DateKit: int getDay(java.util.Date)
com.jayqqaa12.abase.kit.common.DateKit: int getHour(java.util.Date)
com.jayqqaa12.abase.kit.common.DateKit: int getMinute(java.util.Date)
com.jayqqaa12.abase.kit.common.DateKit: int getSecond(java.util.Date)
com.jayqqaa12.abase.kit.common.DateKit: long getMillis(java.util.Date)
com.jayqqaa12.abase.kit.common.DateKit: java.lang.String getDate(java.util.Date)
com.jayqqaa12.abase.kit.common.DateKit: java.lang.String getTime(java.util.Date)
com.jayqqaa12.abase.kit.common.DateKit: java.lang.String getDateTime(java.util.Date)
com.jayqqaa12.abase.kit.common.DateKit: java.util.Date addDate(java.util.Date,int)
com.jayqqaa12.abase.kit.common.DateKit: long diffDate(java.util.Date,java.util.Date)
com.jayqqaa12.abase.kit.common.DateKit: java.lang.String getMonthBegin(java.lang.String)
com.jayqqaa12.abase.kit.common.DateKit: java.lang.String getMonthEnd(java.lang.String)
com.jayqqaa12.abase.kit.common.DateKit: java.lang.String formatDate(java.util.Date)
com.jayqqaa12.abase.kit.common.DateKit: java.lang.String formatDateByFormat(java.util.Date,java.lang.String)
com.jayqqaa12.abase.kit.common.DateKit: int getCurrentDayOfWeek()
com.jayqqaa12.abase.kit.common.L
com.jayqqaa12.abase.kit.common.L: int LOG_LEVEL
com.jayqqaa12.abase.kit.common.L: int ERROR
com.jayqqaa12.abase.kit.common.L: int DEBUG
com.jayqqaa12.abase.kit.common.L: int WARN
com.jayqqaa12.abase.kit.common.L: int INFO
com.jayqqaa12.abase.kit.common.L: int VERBOSE
com.jayqqaa12.abase.kit.common.L: int PRINTLN
com.jayqqaa12.abase.kit.common.L: L()
com.jayqqaa12.abase.kit.common.L: void d(java.lang.Object)
com.jayqqaa12.abase.kit.common.L: void e(java.lang.Object)
com.jayqqaa12.abase.kit.common.L: void i(java.lang.Object)
com.jayqqaa12.abase.kit.common.L: void v(java.lang.Object)
com.jayqqaa12.abase.kit.common.L: void w(java.lang.Object)
com.jayqqaa12.abase.kit.common.L: void d(java.lang.String,java.lang.Object)
com.jayqqaa12.abase.kit.common.L: void e(java.lang.String,java.lang.Object)
com.jayqqaa12.abase.kit.common.L: void i(java.lang.String,java.lang.Object)
com.jayqqaa12.abase.kit.common.L: void v(java.lang.String,java.lang.Object)
com.jayqqaa12.abase.kit.common.L: void w(java.lang.String,java.lang.Object)
com.jayqqaa12.abase.kit.common.L: void println(int,java.lang.String,java.lang.Object)
com.jayqqaa12.abase.kit.common.L: java.lang.String getExceptionStackTrace(java.lang.Throwable)
com.jayqqaa12.abase.kit.common.LogcatKit
com.jayqqaa12.abase.kit.common.LogcatKit: java.lang.String cmd
com.jayqqaa12.abase.kit.common.LogcatKit: LogcatKit()
com.jayqqaa12.abase.kit.common.LogcatKit: void startLog(java.lang.String)
com.jayqqaa12.abase.kit.common.LogcatKit: void startLog(java.lang.String,java.lang.String)
com.jayqqaa12.abase.kit.common.LogcatKit: void startLog(java.lang.String,java.lang.String,java.lang.String)
com.jayqqaa12.abase.kit.common.LogcatKit: void startLog(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.jayqqaa12.abase.kit.common.LogcatKit: java.io.BufferedReader getLog(java.lang.String,java.lang.String)
com.jayqqaa12.abase.kit.common.Provider
com.jayqqaa12.abase.kit.common.Provider: java.lang.String CONTENT
com.jayqqaa12.abase.kit.common.Provider: java.lang.String SPACE_DELETE
com.jayqqaa12.abase.kit.common.Provider: java.lang.String SPACE_INSERT
com.jayqqaa12.abase.kit.common.Provider: java.lang.String SPACE_QUERY
com.jayqqaa12.abase.kit.common.Provider: java.lang.String DELETE
com.jayqqaa12.abase.kit.common.Provider: java.lang.String INSERT
com.jayqqaa12.abase.kit.common.Provider: java.lang.String QUERY
com.jayqqaa12.abase.kit.common.Provider: java.lang.String UPDATE
com.jayqqaa12.abase.kit.common.Provider: android.net.Uri ALL_APN_URI
com.jayqqaa12.abase.kit.common.Provider: android.net.Uri PREFERRED_APN_URI
com.jayqqaa12.abase.kit.common.Provider: void <clinit>()
com.jayqqaa12.abase.kit.common.Provider: Provider()
com.jayqqaa12.abase.kit.common.ReflectKit
com.jayqqaa12.abase.kit.common.ReflectKit: ReflectKit()
com.jayqqaa12.abase.kit.common.ReflectKit: java.lang.Object getValue(java.lang.Object,java.lang.String)
com.jayqqaa12.abase.kit.common.ReflectKit: java.lang.Class getSubClass(java.lang.Class)
com.jayqqaa12.abase.kit.common.ReflectKit: java.lang.Object getValueAndParent(java.lang.Object,java.lang.String)
com.jayqqaa12.abase.kit.common.T
com.jayqqaa12.abase.kit.common.T: T()
com.jayqqaa12.abase.kit.common.T: void show(java.lang.String,int)
com.jayqqaa12.abase.kit.common.T: void ShortToast(java.lang.String)
com.jayqqaa12.abase.kit.common.T: void ShortToast(int)
com.jayqqaa12.abase.kit.common.T: void LongToast(java.lang.String)
com.jayqqaa12.abase.kit.common.TAG
com.jayqqaa12.abase.kit.common.TAG: java.lang.String ActivityManager
com.jayqqaa12.abase.kit.common.TAG: java.lang.String SYSTEM
com.jayqqaa12.abase.kit.common.TAG: java.lang.String NETWORK
com.jayqqaa12.abase.kit.common.TAG: java.lang.String ACTIVITY
com.jayqqaa12.abase.kit.common.TAG: java.lang.String SERVICE
com.jayqqaa12.abase.kit.common.TAG: java.lang.String DAO
com.jayqqaa12.abase.kit.common.TAG: java.lang.String DB
com.jayqqaa12.abase.kit.common.TAG: java.lang.String ENGINE
com.jayqqaa12.abase.kit.common.TAG: java.lang.String RECEIVER
com.jayqqaa12.abase.kit.common.TAG: java.lang.String UTIL
com.jayqqaa12.abase.kit.common.TAG: java.lang.String OBSERVER
com.jayqqaa12.abase.kit.common.TAG: java.lang.String VIEW
com.jayqqaa12.abase.kit.common.TAG: java.lang.String ADAPTER
com.jayqqaa12.abase.kit.common.TAG: java.lang.String DOMAIN
com.jayqqaa12.abase.kit.common.TAG: java.lang.String APP
com.jayqqaa12.abase.kit.common.TAG: java.lang.String DEBUG
com.jayqqaa12.abase.kit.common.TAG: java.lang.String ERROR
com.jayqqaa12.abase.kit.common.TAG: java.lang.String INFO
com.jayqqaa12.abase.kit.common.TAG: java.lang.String VERBOSE
com.jayqqaa12.abase.kit.common.TAG: java.lang.String WARN
com.jayqqaa12.abase.kit.common.TAG: TAG()
com.jayqqaa12.abase.kit.common.Validate
com.jayqqaa12.abase.kit.common.Validate: Validate()
com.jayqqaa12.abase.kit.common.Validate: boolean equals(java.lang.String,java.lang.String)
com.jayqqaa12.abase.kit.common.Validate: boolean isEmpty(java.lang.String)
com.jayqqaa12.abase.kit.common.Validate: boolean notEmpty(java.lang.String)
com.jayqqaa12.abase.kit.common.Validate: boolean notEmpty(java.util.Collection)
com.jayqqaa12.abase.kit.common.Validate: boolean notEmpty(java.lang.Object[])
com.jayqqaa12.abase.kit.common.Validate: boolean isEmail(java.lang.String)
com.jayqqaa12.abase.kit.io.FileKit
com.jayqqaa12.abase.kit.io.FileKit: long ONE_KB
com.jayqqaa12.abase.kit.io.FileKit: long ONE_MB
com.jayqqaa12.abase.kit.io.FileKit: long FILE_COPY_BUFFER_SIZE
com.jayqqaa12.abase.kit.io.FileKit: FileKit()
com.jayqqaa12.abase.kit.io.FileKit: void copyDirectoryToDirectory(java.io.File,java.io.File)
com.jayqqaa12.abase.kit.io.FileKit: void copyDirectory(java.io.File,java.io.File)
com.jayqqaa12.abase.kit.io.FileKit: void copyDirectory(java.io.File,java.io.File,boolean)
com.jayqqaa12.abase.kit.io.FileKit: void doCopyDirectory(java.io.File,java.io.File,boolean,java.util.List)
com.jayqqaa12.abase.kit.io.FileKit: void doCopyFile(java.io.File,java.io.File,boolean)
com.jayqqaa12.abase.kit.io.FileKit: java.io.FileInputStream openInputStream(java.io.File)
com.jayqqaa12.abase.kit.io.FileKit: java.util.List readLines(java.io.File,java.lang.String)
com.jayqqaa12.abase.kit.io.FileKit: java.util.List readLines(java.io.File)
com.jayqqaa12.abase.kit.io.FileKit: java.util.List readLines(java.io.InputStream)
com.jayqqaa12.abase.kit.io.FileKit: java.util.List readLines(java.io.InputStream,java.lang.String)
com.jayqqaa12.abase.kit.io.FileKit: java.util.List readLines(java.io.Reader)
com.jayqqaa12.abase.kit.io.FileKit: java.lang.String[] getAllAssertFileName(android.content.Context)
com.jayqqaa12.abase.kit.io.FileKit: java.util.List getFiles(java.lang.String[],java.lang.String)
com.jayqqaa12.abase.kit.io.FileKit: boolean isFileDecompression(java.lang.String[],java.lang.String)
com.jayqqaa12.abase.kit.io.FileKit: boolean isFileDecompression(java.lang.String[],java.lang.String,java.lang.String)
com.jayqqaa12.abase.kit.io.FileKit: void copyAssetsFile(android.content.Context,java.lang.String,java.lang.String)
com.jayqqaa12.abase.kit.io.FileKit: java.util.LinkedList listLinkedFiles(java.lang.String)
com.jayqqaa12.abase.kit.io.FileKit: java.util.ArrayList listFiles(java.lang.String)
com.jayqqaa12.abase.kit.io.FileKit: java.util.ArrayList refreshFileList(java.lang.String)
com.jayqqaa12.abase.kit.io.FileKit: boolean deleteFile(java.lang.String)
com.jayqqaa12.abase.kit.io.FileKit: boolean deleteDirectory(java.lang.String)
com.jayqqaa12.abase.kit.io.IOKit
com.jayqqaa12.abase.kit.io.IOKit: IOKit()
com.jayqqaa12.abase.kit.io.IOKit: void closeQuietly(java.io.Closeable)
com.jayqqaa12.abase.kit.io.ObjectFileKit
com.jayqqaa12.abase.kit.io.ObjectFileKit: ObjectFileKit()
com.jayqqaa12.abase.kit.io.ObjectFileKit: void writeObject(java.io.Serializable,java.lang.String)
com.jayqqaa12.abase.kit.io.ObjectFileKit: void writeObject(java.io.Serializable,java.io.OutputStream)
com.jayqqaa12.abase.kit.io.ObjectFileKit: java.lang.Object readObject(java.lang.String)
com.jayqqaa12.abase.kit.io.ObjectFileKit: java.lang.Object readObject(java.io.InputStream)
com.jayqqaa12.abase.kit.io.ZipKit
com.jayqqaa12.abase.kit.io.ZipKit: int BUFF_SIZE
com.jayqqaa12.abase.kit.io.ZipKit: ZipKit()
com.jayqqaa12.abase.kit.io.ZipKit: void zipFiles(java.util.Collection,java.io.File)
com.jayqqaa12.abase.kit.io.ZipKit: void zipFiles(java.util.Collection,java.io.File,java.lang.String)
com.jayqqaa12.abase.kit.io.ZipKit: void upZipFile(java.lang.String,java.lang.String)
com.jayqqaa12.abase.kit.io.ZipKit: java.util.ArrayList upZipSelectedFile(java.io.File,java.lang.String,java.lang.String)
com.jayqqaa12.abase.kit.io.ZipKit: java.util.ArrayList getEntriesNames(java.io.File)
com.jayqqaa12.abase.kit.io.ZipKit: java.util.Enumeration getEntriesEnumeration(java.io.File)
com.jayqqaa12.abase.kit.io.ZipKit: java.lang.String getEntryComment(java.util.zip.ZipEntry)
com.jayqqaa12.abase.kit.io.ZipKit: java.lang.String getEntryName(java.util.zip.ZipEntry)
com.jayqqaa12.abase.kit.io.ZipKit: void zipFile(java.io.File,java.util.zip.ZipOutputStream,java.lang.String)
com.jayqqaa12.abase.kit.media.KeybardKit
com.jayqqaa12.abase.kit.media.KeybardKit: KeybardKit()
com.jayqqaa12.abase.kit.media.KeybardKit: boolean isKeyguardRestricted()
com.jayqqaa12.abase.kit.media.KeybardKit: void hideKeybard(android.app.Activity)
com.jayqqaa12.abase.kit.media.MediaTypeKit
com.jayqqaa12.abase.kit.media.MediaTypeKit: java.util.Map FORMAT_TO_CONTENTTYPE
com.jayqqaa12.abase.kit.media.MediaTypeKit: void <clinit>()
com.jayqqaa12.abase.kit.media.MediaTypeKit: MediaTypeKit()
com.jayqqaa12.abase.kit.media.MediaTypeKit: java.lang.String getContentType(java.lang.String)
com.jayqqaa12.abase.kit.media.MediaTypeKit: java.lang.String getMIMEType(java.lang.String)
com.jayqqaa12.abase.kit.media.SoundKit
com.jayqqaa12.abase.kit.media.SoundKit: SoundKit()
com.jayqqaa12.abase.kit.media.SoundKit: void playSound(int,float)
com.jayqqaa12.abase.kit.network.ApnKit
com.jayqqaa12.abase.kit.network.ApnKit: ApnKit()
com.jayqqaa12.abase.kit.network.ApnKit: void changeWAPToNet()
com.jayqqaa12.abase.kit.network.ApnKit: void setCmNetApn()
com.jayqqaa12.abase.kit.network.ApnKit: void setCmWapApn()
com.jayqqaa12.abase.kit.network.ApnKit: void setUniNet()
com.jayqqaa12.abase.kit.network.ApnKit: void setUni3gNet()
com.jayqqaa12.abase.kit.network.ApnKit: boolean isWapApn()
com.jayqqaa12.abase.kit.network.ApnKit: void setDefaultAPN(android.content.ContentValues)
com.jayqqaa12.abase.kit.network.ApnKit: int findAPNId(android.content.ContentValues)
com.jayqqaa12.abase.kit.network.ApnKit: int insertAPN(android.content.ContentValues)
com.jayqqaa12.abase.kit.network.DownLoadKit
com.jayqqaa12.abase.kit.network.DownLoadKit: DownLoadKit()
com.jayqqaa12.abase.kit.network.DownLoadKit: long download(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.jayqqaa12.abase.kit.network.DownLoadKit: int downloadStatus(java.lang.String)
com.jayqqaa12.abase.kit.network.DownLoadKit: long getFileLength(java.lang.String)
com.jayqqaa12.abase.kit.network.DownLoadKit: android.graphics.Bitmap getBitmap(java.lang.String)
com.jayqqaa12.abase.kit.network.DownLoadKit: android.graphics.drawable.Drawable getDrawable(java.lang.String,int)
com.jayqqaa12.abase.kit.network.DownLoadKit: android.graphics.drawable.Drawable getDrawable(java.lang.String)
com.jayqqaa12.abase.kit.network.DownLoadKit: java.lang.String downloadString(java.lang.String)
com.jayqqaa12.abase.kit.network.NetworkKit
com.jayqqaa12.abase.kit.network.NetworkKit: NetworkKit()
com.jayqqaa12.abase.kit.network.NetworkKit: int getNetworkType()
com.jayqqaa12.abase.kit.network.NetworkKit: boolean isEDGE()
com.jayqqaa12.abase.kit.network.NetworkKit: int getNetworkClass()
com.jayqqaa12.abase.kit.network.NetworkKit: boolean isGPRS()
com.jayqqaa12.abase.kit.network.NetworkKit: boolean isWifiConnecting()
com.jayqqaa12.abase.kit.network.NetworkKit: boolean isMobileConnecting()
com.jayqqaa12.abase.kit.network.NetworkKit: boolean isConnectingToInternet()
com.jayqqaa12.abase.kit.network.NetworkKit: java.lang.String getIpAddress()
com.jayqqaa12.abase.kit.network.NetworkKit: long getTotalBytes()
com.jayqqaa12.abase.kit.network.NetworkKit: long getTotalRxBytes()
com.jayqqaa12.abase.kit.network.NetworkKit: long getTotalTxBytes()
com.jayqqaa12.abase.kit.network.NetworkKit: long getTotalMobileBytes()
com.jayqqaa12.abase.kit.network.NetworkKit: long getTotalWifiBytes()
com.jayqqaa12.abase.kit.network.NetworkKit: long getMobileRxBytes()
com.jayqqaa12.abase.kit.network.NetworkKit: long getMobileTxBytes()
com.jayqqaa12.abase.kit.network.NetworkKit: long getUidTotalBytes(int)
com.jayqqaa12.abase.kit.network.NetworkKit: long getUidRxBytes(int)
com.jayqqaa12.abase.kit.network.NetworkKit: long getUidTxBytes(int)
com.jayqqaa12.abase.kit.phone.CallKit
com.jayqqaa12.abase.kit.phone.CallKit: CallKit()
com.jayqqaa12.abase.kit.phone.CallKit: android.telephony.TelephonyManager getTelephonyManager()
com.jayqqaa12.abase.kit.phone.CallKit: java.lang.String getSimSerialNumber()
com.jayqqaa12.abase.kit.phone.CallKit: boolean havaSimCard()
com.jayqqaa12.abase.kit.phone.CallKit: boolean isCanUseSim()
com.jayqqaa12.abase.kit.phone.CallKit: com.android.internal.telephony.ITelephony getITelephony()
com.jayqqaa12.abase.kit.phone.CallKit: void endPhone()
com.jayqqaa12.abase.kit.phone.CallKit: void deleteCallLog(java.lang.String)
com.jayqqaa12.abase.kit.phone.ContactKit
com.jayqqaa12.abase.kit.phone.ContactKit: ContactKit()
com.jayqqaa12.abase.kit.phone.ContactKit: boolean isFindPhoneFromContact(java.lang.String)
com.jayqqaa12.abase.kit.phone.ContactKit: java.util.List getAllContactPhone()
com.jayqqaa12.abase.kit.phone.ContactKit: android.database.Cursor getAllSms()
com.jayqqaa12.abase.kit.phone.ContactKit: java.lang.String getContactName(java.lang.String)
com.jayqqaa12.abase.kit.phone.ContactKit: long getTelTime()
com.jayqqaa12.abase.kit.phone.SmsKit
com.jayqqaa12.abase.kit.phone.SmsKit: SmsKit()
com.jayqqaa12.abase.kit.phone.SmsKit: android.content.Context getContext()
com.jayqqaa12.abase.kit.phone.SmsKit: void sendSms(java.lang.String,java.lang.String)
com.jayqqaa12.abase.kit.phone.SmsKit: java.lang.Object[] getPdus(android.content.Intent)
com.jayqqaa12.abase.kit.phone.SmsKit: android.telephony.SmsMessage getSmsMessage(java.lang.Object)
com.jayqqaa12.abase.kit.phone.TelKit
com.jayqqaa12.abase.kit.phone.TelKit: int NETWORK_NONE
com.jayqqaa12.abase.kit.phone.TelKit: int NETWORK_OTHER
com.jayqqaa12.abase.kit.phone.TelKit: int CHINA_MOBILE
com.jayqqaa12.abase.kit.phone.TelKit: int CHINA_UNICOM
com.jayqqaa12.abase.kit.phone.TelKit: int CHINA_TELECOM
com.jayqqaa12.abase.kit.phone.TelKit: int NETWORK_2G
com.jayqqaa12.abase.kit.phone.TelKit: int NETWORK_3G
com.jayqqaa12.abase.kit.phone.TelKit: int NETWORK_4G
com.jayqqaa12.abase.kit.phone.TelKit: TelKit()
com.jayqqaa12.abase.kit.phone.TelKit: int getCallState()
com.jayqqaa12.abase.kit.phone.TelKit: java.lang.String getMacAddress()
com.jayqqaa12.abase.kit.phone.TelKit: android.telephony.CellLocation getCellLocation()
com.jayqqaa12.abase.kit.phone.TelKit: java.lang.String getDeviceId()
com.jayqqaa12.abase.kit.phone.TelKit: java.lang.String getDeviceSoftwareVersion()
com.jayqqaa12.abase.kit.phone.TelKit: java.lang.String getLine1Number()
com.jayqqaa12.abase.kit.phone.TelKit: java.util.List getNeighboringCellInfo()
com.jayqqaa12.abase.kit.phone.TelKit: java.lang.String getNetworkCountryIso()
com.jayqqaa12.abase.kit.phone.TelKit: java.lang.String getNetworkOperator()
com.jayqqaa12.abase.kit.phone.TelKit: java.lang.String getNetworkOperatorName()
com.jayqqaa12.abase.kit.phone.TelKit: int getNetworkType()
com.jayqqaa12.abase.kit.phone.TelKit: int getPhoneType()
com.jayqqaa12.abase.kit.phone.TelKit: java.lang.String getSimCountryIso()
com.jayqqaa12.abase.kit.phone.TelKit: int getSimOperator()
com.jayqqaa12.abase.kit.phone.TelKit: java.lang.String getSimOperatorName()
com.jayqqaa12.abase.kit.phone.TelKit: java.lang.String getSimSerialNumber()
com.jayqqaa12.abase.kit.phone.TelKit: int getSimState()
com.jayqqaa12.abase.kit.phone.TelKit: java.lang.String getSubscriberId()
com.jayqqaa12.abase.kit.phone.TelKit: java.lang.String getVoiceMailAlphaTag()
com.jayqqaa12.abase.kit.phone.TelKit: java.lang.String getVoiceMailNumber()
com.jayqqaa12.abase.kit.phone.TelKit: boolean hasIccCard()
com.jayqqaa12.abase.kit.phone.TelKit: boolean isNetworkRoaming()
com.jayqqaa12.abase.kit.phone.TelKit: java.lang.String getUUID()
com.jayqqaa12.abase.kit.phone.TelKit: java.lang.String getId()
com.jayqqaa12.abase.kit.phone.TelKit: java.lang.String getModel()
com.jayqqaa12.abase.kit.phone.TelKit: java.lang.String getBrand()
com.jayqqaa12.abase.kit.security.CipherKit
com.jayqqaa12.abase.kit.security.CipherKit: java.lang.String ALGORITHM_DES
com.jayqqaa12.abase.kit.security.CipherKit: CipherKit()
com.jayqqaa12.abase.kit.security.CipherKit: java.security.Key getDESKey(byte[])
com.jayqqaa12.abase.kit.security.CipherKit: java.lang.String decrypt(java.lang.String,java.security.Key,java.lang.String)
com.jayqqaa12.abase.kit.security.CipherKit: java.lang.String encrypt(java.lang.String,java.security.Key,java.lang.String)
com.jayqqaa12.abase.kit.security.DisgestKit
com.jayqqaa12.abase.kit.security.DisgestKit: int count
com.jayqqaa12.abase.kit.security.DisgestKit: void <clinit>()
com.jayqqaa12.abase.kit.security.DisgestKit: DisgestKit()
com.jayqqaa12.abase.kit.security.DisgestKit: java.lang.String encodeMD5(java.lang.String)
com.jayqqaa12.abase.kit.security.DisgestKit: java.lang.String doDigest(java.lang.String,java.lang.String)
com.jayqqaa12.abase.kit.security.DisgestKit: java.lang.String doDigest(java.lang.String,byte[])
com.jayqqaa12.abase.kit.security.DisgestKit: java.lang.String doDigest(java.lang.String,char[])
com.jayqqaa12.abase.kit.security.StringKit
com.jayqqaa12.abase.kit.security.StringKit: StringKit()
com.jayqqaa12.abase.kit.security.StringKit: java.lang.String bytesToHexString(byte[])
com.jayqqaa12.abase.kit.security.StringKit: byte[] hexStringToBytes(java.lang.String)
com.jayqqaa12.abase.kit.sys.AppInfoKit
com.jayqqaa12.abase.kit.sys.AppInfoKit: AppInfoKit()
com.jayqqaa12.abase.kit.sys.AppInfoKit: boolean isRightApk(java.lang.String)
com.jayqqaa12.abase.kit.sys.AppInfoKit: android.content.Intent getIntentFromApk(java.lang.String)
com.jayqqaa12.abase.kit.sys.AppInfoKit: android.content.Intent getIntentFromPackage(java.lang.String)
com.jayqqaa12.abase.kit.sys.AppInfoKit: java.lang.String getVersionNo()
com.jayqqaa12.abase.kit.sys.AppInfoKit: java.lang.String getProgramNameByPackageName(java.lang.String)
com.jayqqaa12.abase.kit.sys.AppInfoKit: java.lang.String getMyApkPackname()
com.jayqqaa12.abase.kit.sys.AppInfoKit: java.util.List getLauncherApp()
com.jayqqaa12.abase.kit.sys.AppInfoKit: com.jayqqaa12.abase.model.AppInfo getMyApkInfo()
com.jayqqaa12.abase.kit.sys.AppInfoKit: java.lang.String getMyApkName()
com.jayqqaa12.abase.kit.sys.AppInfoKit: java.util.List getAllApps()
com.jayqqaa12.abase.kit.sys.AppInfoKit: java.util.List getApkInfoList(java.lang.String)
com.jayqqaa12.abase.kit.sys.AppInfoKit: com.jayqqaa12.abase.model.AppInfo getApkInfo(java.lang.String)
com.jayqqaa12.abase.kit.sys.AppInfoKit: com.jayqqaa12.abase.model.AppInfo getApkinfo(java.lang.String,android.content.pm.PackageManager,android.content.pm.PackageInfo)
com.jayqqaa12.abase.kit.sys.AppInfoKit: boolean isInstall(android.content.pm.PackageManager,java.lang.String,int)
com.jayqqaa12.abase.kit.sys.AppInfoKit: boolean isInstall(java.lang.String)
com.jayqqaa12.abase.kit.sys.AppInfoKit: com.jayqqaa12.abase.model.AppInfo getAppInfo(android.content.pm.PackageManager,android.content.pm.PackageInfo)
com.jayqqaa12.abase.kit.sys.AppInfoKit: java.util.List getMyApps()
com.jayqqaa12.abase.kit.sys.AppInfoKit: java.util.List getNotSysApps()
com.jayqqaa12.abase.kit.sys.AppInfoKit: java.util.List getNotSysApps(java.util.List)
com.jayqqaa12.abase.kit.sys.AppInfoKit: java.util.List getMyApps(java.util.List)
com.jayqqaa12.abase.kit.sys.AppInfoKit: java.util.List getSysApps()
com.jayqqaa12.abase.kit.sys.AppInfoKit: java.util.List getPreloadApps()
com.jayqqaa12.abase.kit.sys.AppInfoKit: java.util.List getSysApps(java.util.List)
com.jayqqaa12.abase.kit.sys.AppInfoKit: java.util.List getPreloadApps(java.util.List)
com.jayqqaa12.abase.kit.sys.AppInfoKit: boolean filterApp(android.content.pm.ApplicationInfo)
com.jayqqaa12.abase.kit.sys.MemoryKit
com.jayqqaa12.abase.kit.sys.MemoryKit: MemoryKit()
com.jayqqaa12.abase.kit.sys.MemoryKit: java.lang.String getAvailablePhoneRom()
com.jayqqaa12.abase.kit.sys.MemoryKit: java.lang.String getAvailableRam()
com.jayqqaa12.abase.kit.sys.MemoryKit: java.lang.String getTotalRam()
com.jayqqaa12.abase.kit.sys.ReceiverKit
com.jayqqaa12.abase.kit.sys.ReceiverKit: ReceiverKit()
com.jayqqaa12.abase.kit.sys.ReceiverKit: void sendSdMounted(android.content.Context)
com.jayqqaa12.abase.kit.sys.ReceiverKit: void sendKillActivityAction(android.content.Context)
com.jayqqaa12.abase.kit.sys.ReceiverKit: android.content.BroadcastReceiver registBatteryChange(android.content.Context,android.content.BroadcastReceiver)
com.jayqqaa12.abase.kit.sys.ReceiverKit: android.content.BroadcastReceiver registSmsReceived(android.content.Context,android.content.BroadcastReceiver)
com.jayqqaa12.abase.kit.sys.ReceiverKit: android.content.BroadcastReceiver registTimeTick(android.content.Context,android.content.BroadcastReceiver)
com.jayqqaa12.abase.kit.sys.ReceiverKit: android.content.BroadcastReceiver registPackageRemoved(android.content.Context,android.content.BroadcastReceiver)
com.jayqqaa12.abase.kit.sys.ReceiverKit: android.content.BroadcastReceiver registPackageAdded(android.content.Context,android.content.BroadcastReceiver)
com.jayqqaa12.abase.kit.sys.ReceiverKit: android.content.BroadcastReceiver registPackageReplaced(android.content.Context,android.content.BroadcastReceiver)
com.jayqqaa12.abase.kit.sys.ReceiverKit: android.content.BroadcastReceiver registReceiver(android.content.Context,android.content.BroadcastReceiver,android.content.IntentFilter)
com.jayqqaa12.abase.kit.sys.ReceiverKit: android.content.BroadcastReceiver registReceiver(android.content.Context,android.content.BroadcastReceiver,java.lang.String)
com.jayqqaa12.abase.kit.sys.RootKit
com.jayqqaa12.abase.kit.sys.RootKit: RootKit()
com.jayqqaa12.abase.kit.sys.RootKit: java.io.DataOutputStream getRootOutputStream()
com.jayqqaa12.abase.kit.sys.RootKit: void startIntent(java.lang.String,java.lang.String)
com.jayqqaa12.abase.kit.sys.RootKit: void install(android.content.Context,java.lang.String,android.os.Handler)
com.jayqqaa12.abase.kit.sys.RootKit: void install(android.content.Context,java.util.List,java.lang.Object,android.os.Handler)
com.jayqqaa12.abase.kit.sys.RootKit: void uninstall(android.content.Context,java.util.List,java.lang.Object,android.os.Handler)
com.jayqqaa12.abase.kit.sys.RootKit$1
com.jayqqaa12.abase.kit.sys.RootKit$1: java.lang.String val$packname
com.jayqqaa12.abase.kit.sys.RootKit$1: java.lang.String val$actvityName
com.jayqqaa12.abase.kit.sys.RootKit$1: RootKit$1(java.lang.String,java.lang.String)
com.jayqqaa12.abase.kit.sys.RootKit$1: void run()
com.jayqqaa12.abase.kit.sys.RootKit$2
com.jayqqaa12.abase.kit.sys.RootKit$2: java.lang.String val$path
com.jayqqaa12.abase.kit.sys.RootKit$2: android.os.Handler val$callback
com.jayqqaa12.abase.kit.sys.RootKit$2: RootKit$2(java.lang.String,android.os.Handler)
com.jayqqaa12.abase.kit.sys.RootKit$2: void run()
com.jayqqaa12.abase.kit.sys.RootKit$3
com.jayqqaa12.abase.kit.sys.RootKit$3: java.util.List val$paths
com.jayqqaa12.abase.kit.sys.RootKit$3: android.os.Handler val$callback
com.jayqqaa12.abase.kit.sys.RootKit$3: java.lang.Object val$msgobj
com.jayqqaa12.abase.kit.sys.RootKit$3: android.content.Context val$context
com.jayqqaa12.abase.kit.sys.RootKit$3: RootKit$3(java.util.List,android.os.Handler,java.lang.Object,android.content.Context)
com.jayqqaa12.abase.kit.sys.RootKit$3: void run()
com.jayqqaa12.abase.kit.sys.RootKit$4
com.jayqqaa12.abase.kit.sys.RootKit$4: java.util.List val$packageNames
com.jayqqaa12.abase.kit.sys.RootKit$4: android.os.Handler val$callback
com.jayqqaa12.abase.kit.sys.RootKit$4: java.lang.Object val$msgobj
com.jayqqaa12.abase.kit.sys.RootKit$4: android.content.Context val$context
com.jayqqaa12.abase.kit.sys.RootKit$4: RootKit$4(java.util.List,android.os.Handler,java.lang.Object,android.content.Context)
com.jayqqaa12.abase.kit.sys.RootKit$4: void run()
com.jayqqaa12.abase.kit.sys.SdCardKit
com.jayqqaa12.abase.kit.sys.SdCardKit: java.lang.String SDCARD_PATH
com.jayqqaa12.abase.kit.sys.SdCardKit: void <clinit>()
com.jayqqaa12.abase.kit.sys.SdCardKit: SdCardKit()
com.jayqqaa12.abase.kit.sys.SdCardKit: boolean isCanUseSdCard()
com.jayqqaa12.abase.kit.sys.SdCardKit: java.lang.String[] getSdCardPath()
com.jayqqaa12.abase.kit.sys.SdCardKit: java.lang.String getAvailableSDRomString()
com.jayqqaa12.abase.kit.sys.SdCardKit: float getAvailableSDRom()
com.jayqqaa12.abase.kit.sys.SysIntentKit
com.jayqqaa12.abase.kit.sys.SysIntentKit: SysIntentKit()
com.jayqqaa12.abase.kit.sys.SysIntentKit: void install(android.content.Context,java.lang.String)
com.jayqqaa12.abase.kit.sys.SysIntentKit: android.content.Intent getInstallIntent(java.lang.String)
com.jayqqaa12.abase.kit.sys.SysIntentKit: void uninstall(android.content.Context,java.lang.String)
com.jayqqaa12.abase.kit.sys.SysIntentKit: android.content.Intent getUnInstallIntent(java.lang.String)
com.jayqqaa12.abase.kit.sys.SysIntentKit: void callPhone(android.content.Context,java.lang.String)
com.jayqqaa12.abase.kit.sys.SysIntentKit: void goPhone(android.content.Context,java.lang.String)
com.jayqqaa12.abase.kit.sys.SysIntentKit: void sendSms(android.content.Context,java.lang.String,java.lang.String)
com.jayqqaa12.abase.kit.sys.SysIntentKit: void intoSms(android.content.Context,java.lang.String)
com.jayqqaa12.abase.kit.sys.SysIntentKit: void goHome(android.content.Context)
com.jayqqaa12.abase.kit.sys.SysIntentKit: void reboot(android.content.Context)
com.jayqqaa12.abase.kit.sys.SysIntentKit: void goSettingsManageApp(android.content.Context)
com.jayqqaa12.abase.kit.sys.SysIntentKit: void goSettings(android.content.Context)
com.jayqqaa12.abase.kit.sys.SysIntentKit: void intoNetworkSetting(android.content.Context)
com.jayqqaa12.abase.kit.sys.SysIntentKit: void goImageView(android.content.Context)
com.jayqqaa12.abase.kit.sys.SysIntentKit: void goWeb(android.content.Context,java.lang.String)
com.jayqqaa12.abase.kit.sys.SysKit
com.jayqqaa12.abase.kit.sys.SysKit: SysKit()
com.jayqqaa12.abase.kit.sys.SysKit: java.lang.String getSysInfo()
com.jayqqaa12.abase.kit.sys.SysKit: void recovery()
com.jayqqaa12.abase.kit.sys.SysKit: void killMyself()
com.jayqqaa12.abase.kit.sys.SysKit: void wipeData()
com.jayqqaa12.abase.kit.sys.SysKit: void reboot()
com.jayqqaa12.abase.kit.sys.SysPropKit
com.jayqqaa12.abase.kit.sys.SysPropKit: SysPropKit()
com.jayqqaa12.abase.kit.sys.SysPropKit: java.lang.String getAndroidId()
com.jayqqaa12.abase.kit.sys.SysPropKit: java.lang.String getLocalFirmVersion()
com.jayqqaa12.abase.kit.sys.SysPropKit: java.lang.String getPhoneModel()
com.jayqqaa12.abase.kit.sys.TaskKit
com.jayqqaa12.abase.kit.sys.TaskKit: TaskKit()
com.jayqqaa12.abase.kit.sys.TaskKit: java.lang.String getTaskTopActivityPackName(android.app.ActivityManager)
com.jayqqaa12.abase.kit.sys.TaskKit: void killProcess(android.app.ActivityManager,java.lang.String)
com.jayqqaa12.abase.kit.sys.TaskKit: void killProcess(java.lang.String)
com.jayqqaa12.abase.kit.sys.TaskKit: java.util.List getRunningAppProcesses()
com.jayqqaa12.abase.kit.sys.TaskKit: boolean isRunningService(java.lang.String)
com.jayqqaa12.abase.kit.sys.TaskKit: java.util.List getRunningServices()
com.jayqqaa12.abase.kit.sys.TaskKit: void killProcessBySysApp(java.lang.String)
com.jayqqaa12.abase.kit.ui.AnimKit
com.jayqqaa12.abase.kit.ui.AnimKit: AnimKit()
com.jayqqaa12.abase.kit.ui.AnimKit: void alphaIn(android.view.View)
com.jayqqaa12.abase.kit.ui.AnimKit: void alphaOut(android.view.View)
com.jayqqaa12.abase.kit.ui.AnimKit: void swing(android.view.View,android.view.animation.Animation$AnimationListener)
com.jayqqaa12.abase.kit.ui.AnimKit: void swing(android.view.View)
com.jayqqaa12.abase.kit.ui.AnimKit: android.view.animation.TranslateAnimation translate()
com.jayqqaa12.abase.kit.ui.AnimKit: void apphaAndScaleIn(android.view.View)
com.jayqqaa12.abase.kit.ui.AnimKit: void apphaAndScaleOut(android.view.View)
com.jayqqaa12.abase.kit.ui.DensityKit
com.jayqqaa12.abase.kit.ui.DensityKit: DensityKit()
com.jayqqaa12.abase.kit.ui.DensityKit: int dipTopx(android.content.Context,float)
com.jayqqaa12.abase.kit.ui.DensityKit: int pxTodip(android.content.Context,float)
com.jayqqaa12.abase.kit.ui.DialogKit
com.jayqqaa12.abase.kit.ui.DialogKit: DialogKit()
com.jayqqaa12.abase.kit.ui.DialogKit: void showNotNetworkDialog(android.app.Activity)
com.jayqqaa12.abase.kit.ui.DialogKit: void showChangeApnDialog(android.app.Activity)
com.jayqqaa12.abase.kit.ui.DialogKit: void showExitDialog(android.app.Activity,java.lang.String)
com.jayqqaa12.abase.kit.ui.DialogKit: void showSingleChoiceDiaog(android.content.Context,java.lang.String,java.lang.String[],int,android.content.DialogInterface$OnClickListener,android.content.DialogInterface$OnClickListener)
com.jayqqaa12.abase.kit.ui.DialogKit: android.app.ProgressDialog showProgressDialog(android.content.Context,java.lang.String,boolean,int)
com.jayqqaa12.abase.kit.ui.DialogKit: android.app.ProgressDialog createProgressDialog(android.content.Context,java.lang.String,boolean,int)
com.jayqqaa12.abase.kit.ui.DialogKit: android.app.Dialog createDialog(android.content.Context,int,boolean,android.view.View)
com.jayqqaa12.abase.kit.ui.DialogKit: android.app.Dialog createDialog(android.content.Context,int,boolean,int)
com.jayqqaa12.abase.kit.ui.DialogKit: android.app.Dialog showDialog(android.content.Context,int,boolean,android.view.View)
com.jayqqaa12.abase.kit.ui.DialogKit: android.app.Dialog showDialog(android.content.Context,int,boolean,int)
com.jayqqaa12.abase.kit.ui.DialogKit$1
com.jayqqaa12.abase.kit.ui.DialogKit$1: android.app.Activity val$activity
com.jayqqaa12.abase.kit.ui.DialogKit$1: DialogKit$1(android.app.Activity)
com.jayqqaa12.abase.kit.ui.DialogKit$1: void onClick(android.content.DialogInterface,int)
com.jayqqaa12.abase.kit.ui.DialogKit$2
com.jayqqaa12.abase.kit.ui.DialogKit$2: android.app.Activity val$activity
com.jayqqaa12.abase.kit.ui.DialogKit$2: DialogKit$2(android.app.Activity)
com.jayqqaa12.abase.kit.ui.DialogKit$2: void onClick(android.content.DialogInterface,int)
com.jayqqaa12.abase.kit.ui.DialogKit$3
com.jayqqaa12.abase.kit.ui.DialogKit$3: android.app.Activity val$activity
com.jayqqaa12.abase.kit.ui.DialogKit$3: DialogKit$3(android.app.Activity)
com.jayqqaa12.abase.kit.ui.DialogKit$3: void onClick(android.content.DialogInterface,int)
com.jayqqaa12.abase.kit.ui.DialogKit$4
com.jayqqaa12.abase.kit.ui.DialogKit$4: android.app.Activity val$activity
com.jayqqaa12.abase.kit.ui.DialogKit$4: DialogKit$4(android.app.Activity)
com.jayqqaa12.abase.kit.ui.DialogKit$4: void onClick(android.content.DialogInterface,int)
com.jayqqaa12.abase.kit.ui.DialogKit$5
com.jayqqaa12.abase.kit.ui.DialogKit$5: android.app.Activity val$activity
com.jayqqaa12.abase.kit.ui.DialogKit$5: DialogKit$5(android.app.Activity)
com.jayqqaa12.abase.kit.ui.DialogKit$5: void onClick(android.content.DialogInterface,int)
com.jayqqaa12.abase.kit.ui.DialogKit$6
com.jayqqaa12.abase.kit.ui.DialogKit$6: DialogKit$6()
com.jayqqaa12.abase.kit.ui.DialogKit$6: boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent)
com.jayqqaa12.abase.kit.ui.DialogKit$7
com.jayqqaa12.abase.kit.ui.DialogKit$7: DialogKit$7()
com.jayqqaa12.abase.kit.ui.DialogKit$7: boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent)
com.jayqqaa12.abase.kit.ui.ImageKit
com.jayqqaa12.abase.kit.ui.ImageKit: float[] carray
com.jayqqaa12.abase.kit.ui.ImageKit: void <clinit>()
com.jayqqaa12.abase.kit.ui.ImageKit: ImageKit()
com.jayqqaa12.abase.kit.ui.ImageKit: android.graphics.Bitmap getResizedBitmap(android.graphics.drawable.BitmapDrawable,android.content.Context)
com.jayqqaa12.abase.kit.ui.ImageKit: android.graphics.Bitmap toGrayscale(android.graphics.Bitmap)
com.jayqqaa12.abase.kit.ui.ImageKit: void getValueSaturation()
com.jayqqaa12.abase.kit.ui.ImageKit: void getValueBlackAndWhite()
com.jayqqaa12.abase.kit.ui.ImageKit: android.graphics.Bitmap toGrayscale(android.graphics.Bitmap,int)
com.jayqqaa12.abase.kit.ui.ImageKit: android.graphics.Bitmap toRoundCorner(android.graphics.Bitmap,int)
com.jayqqaa12.abase.kit.ui.ImageKit: android.graphics.drawable.BitmapDrawable toRoundCorner(android.graphics.drawable.BitmapDrawable,int)
com.jayqqaa12.abase.kit.ui.ImageKit: android.graphics.Bitmap createReflectedImage(android.graphics.Bitmap)
com.jayqqaa12.abase.kit.ui.NotifiyKit
com.jayqqaa12.abase.kit.ui.NotifiyKit: NotifiyKit()
com.jayqqaa12.abase.kit.ui.NotifiyKit: void deleteNotification(int)
com.jayqqaa12.abase.kit.ui.NotifiyKit: void showNotification(android.content.Context,int,int,java.lang.String,java.lang.String,android.app.PendingIntent,boolean)
com.jayqqaa12.abase.kit.ui.NotifiyKit: void deleteMissedCallsNotification()
com.jayqqaa12.abase.kit.ui.ScreenKit
com.jayqqaa12.abase.kit.ui.ScreenKit: ScreenKit()
com.jayqqaa12.abase.kit.ui.ScreenKit: boolean isScreenOriatationPortrait(android.content.Context)
com.jayqqaa12.abase.kit.ui.ScreenKit: void setLockScreen(java.lang.String)
com.jayqqaa12.abase.kit.ui.ShortcutKit
com.jayqqaa12.abase.kit.ui.ShortcutKit: ShortcutKit()
com.jayqqaa12.abase.kit.ui.ShortcutKit: void createShortCut(android.content.Context,int,int)
com.jayqqaa12.abase.kit.ui.ShortcutKit: void createShortCutToMain(android.app.Activity,int,int)
com.jayqqaa12.abase.kit.ui.ViewKit
com.jayqqaa12.abase.kit.ui.ViewKit: ViewKit()
com.jayqqaa12.abase.kit.ui.ViewKit: byte[] printScreen(android.view.View,int)
com.jayqqaa12.abase.kit.ui.ViewKit: android.graphics.Bitmap printScreen(android.view.View)
com.jayqqaa12.abase.kit.ui.ViewParmKit
com.jayqqaa12.abase.kit.ui.ViewParmKit: ViewParmKit()
com.jayqqaa12.abase.kit.ui.ViewParmKit: int getWidth(android.view.View)
com.jayqqaa12.abase.kit.ui.ViewParmKit: int getHeight(android.view.View)
com.jayqqaa12.abase.kit.ui.ViewParmKit: void setLayoutX(android.view.View,int)
com.jayqqaa12.abase.kit.ui.ViewParmKit: void setLayoutY(android.view.View,int)
com.jayqqaa12.abase.kit.ui.ViewParmKit: void setLayout(android.view.View,int,int)
com.jayqqaa12.abase.model.AppInfo
com.jayqqaa12.abase.model.AppInfo: java.lang.String packageName
com.jayqqaa12.abase.model.AppInfo: int iconId
com.jayqqaa12.abase.model.AppInfo: int uid
com.jayqqaa12.abase.model.AppInfo: android.graphics.drawable.Drawable iconDrawable
com.jayqqaa12.abase.model.AppInfo: java.lang.String appName
com.jayqqaa12.abase.model.AppInfo: int versionCode
com.jayqqaa12.abase.model.AppInfo: long appSize
com.jayqqaa12.abase.model.AppInfo: java.lang.String versionName
com.jayqqaa12.abase.model.AppInfo: boolean isSysApp
com.jayqqaa12.abase.model.AppInfo: boolean isInstall
com.jayqqaa12.abase.model.AppInfo: java.lang.String path
com.jayqqaa12.abase.model.AppInfo: boolean isPreloadApp
com.jayqqaa12.abase.model.AppInfo: java.util.Date date
com.jayqqaa12.abase.model.AppInfo: java.lang.String size
com.jayqqaa12.abase.model.AppInfo: boolean check
com.jayqqaa12.abase.model.AppInfo: java.lang.Object obj
com.jayqqaa12.abase.model.AppInfo: AppInfo()
com.jayqqaa12.abase.model.AppInfo: int hashCode()
com.jayqqaa12.abase.model.AppInfo: boolean equals(java.lang.Object)
com.jayqqaa12.abase.model.AppInfo: java.lang.String toString()
com.jayqqaa12.abase.model.Bean
com.jayqqaa12.abase.model.Bean: Bean()
com.jayqqaa12.abase.model.ConnBean
com.jayqqaa12.abase.model.ConnBean: java.lang.String url
com.jayqqaa12.abase.model.ConnBean: int cacheTime
com.jayqqaa12.abase.model.ConnBean: int status
com.jayqqaa12.abase.model.ConnBean: ConnBean()
com.jayqqaa12.abase.model.ConnBean: ConnBean(java.lang.String,int,int)
com.jayqqaa12.abase.model.Group
com.jayqqaa12.abase.model.Group: int id
com.jayqqaa12.abase.model.Group: java.lang.String tag
com.jayqqaa12.abase.model.Group: int count
com.jayqqaa12.abase.model.Group: java.util.List chilren
com.jayqqaa12.abase.model.Group: Group()
com.jayqqaa12.abase.model.TaskInfo
com.jayqqaa12.abase.model.TaskInfo: java.lang.String appName
com.jayqqaa12.abase.model.TaskInfo: android.graphics.drawable.Drawable icon
com.jayqqaa12.abase.model.TaskInfo: int pid
com.jayqqaa12.abase.model.TaskInfo: java.lang.String memory
com.jayqqaa12.abase.model.TaskInfo: long memorySize
com.jayqqaa12.abase.model.TaskInfo: java.lang.String packname
com.jayqqaa12.abase.model.TaskInfo: boolean system
com.jayqqaa12.abase.model.TaskInfo: boolean check
com.jayqqaa12.abase.model.TaskInfo: java.lang.Object obj
com.jayqqaa12.abase.model.TaskInfo: TaskInfo()
com.jayqqaa12.abase.model.TaskInfo: int hashCode()
com.jayqqaa12.abase.model.TaskInfo: boolean equals(java.lang.Object)
com.jayqqaa12.abase.observer.PhoneNumberObserver
com.jayqqaa12.abase.observer.PhoneNumberObserver: java.lang.String incomingnumber
com.jayqqaa12.abase.observer.PhoneNumberObserver: android.content.Context context
com.jayqqaa12.abase.observer.PhoneNumberObserver: PhoneNumberObserver(android.os.Handler,java.lang.String,android.content.Context)
com.jayqqaa12.abase.observer.PhoneNumberObserver: void onChange(boolean)
com.lidroid.xutils.bitmap.BitmapCacheListener
com.lidroid.xutils.bitmap.BitmapCacheListener: void onInitMemoryCacheFinished()
com.lidroid.xutils.bitmap.BitmapCacheListener: void onInitDiskFinished()
com.lidroid.xutils.bitmap.BitmapCacheListener: void onClearCacheFinished()
com.lidroid.xutils.bitmap.BitmapCacheListener: void onClearMemoryCacheFinished()
com.lidroid.xutils.bitmap.BitmapCacheListener: void onClearDiskCacheFinished()
com.lidroid.xutils.bitmap.BitmapCacheListener: void onClearCacheFinished(java.lang.String)
com.lidroid.xutils.bitmap.BitmapCacheListener: void onClearMemoryCacheFinished(java.lang.String)
com.lidroid.xutils.bitmap.BitmapCacheListener: void onClearDiskCacheFinished(java.lang.String)
com.lidroid.xutils.bitmap.BitmapCacheListener: void onFlushCacheFinished()
com.lidroid.xutils.bitmap.BitmapCacheListener: void onCloseCacheFinished()
com.lidroid.xutils.bitmap.BitmapCommonUtils
com.lidroid.xutils.bitmap.BitmapCommonUtils: com.lidroid.xutils.bitmap.core.BitmapSize screenSize
com.lidroid.xutils.bitmap.BitmapCommonUtils: void <clinit>()
com.lidroid.xutils.bitmap.BitmapCommonUtils: BitmapCommonUtils()
com.lidroid.xutils.bitmap.BitmapCommonUtils: java.lang.String getDiskCacheDir(android.content.Context,java.lang.String)
com.lidroid.xutils.bitmap.BitmapCommonUtils: long getAvailableSpace(java.io.File)
com.lidroid.xutils.bitmap.BitmapCommonUtils: com.lidroid.xutils.bitmap.core.BitmapSize getScreenSize(android.content.Context)
com.lidroid.xutils.bitmap.BitmapCommonUtils: com.lidroid.xutils.bitmap.core.BitmapSize optimizeMaxSizeByView(android.view.View,int,int)
com.lidroid.xutils.bitmap.BitmapCommonUtils: int getImageViewFieldValue(java.lang.Object,java.lang.String)
com.lidroid.xutils.bitmap.BitmapDisplayConfig
com.lidroid.xutils.bitmap.BitmapDisplayConfig: com.lidroid.xutils.bitmap.core.BitmapSize bitmapMaxSize
com.lidroid.xutils.bitmap.BitmapDisplayConfig: android.view.animation.Animation animation
com.lidroid.xutils.bitmap.BitmapDisplayConfig: android.graphics.drawable.Drawable loadingDrawable
com.lidroid.xutils.bitmap.BitmapDisplayConfig: android.graphics.drawable.Drawable loadFailedDrawable
com.lidroid.xutils.bitmap.BitmapDisplayConfig: boolean autoRotation
com.lidroid.xutils.bitmap.BitmapDisplayConfig: boolean showOriginal
com.lidroid.xutils.bitmap.BitmapDisplayConfig: android.graphics.Bitmap$Config bitmapConfig
com.lidroid.xutils.bitmap.BitmapDisplayConfig: android.graphics.drawable.Drawable TRANSPARENT_DRAWABLE
com.lidroid.xutils.bitmap.BitmapDisplayConfig: void <clinit>()
com.lidroid.xutils.bitmap.BitmapDisplayConfig: BitmapDisplayConfig()
com.lidroid.xutils.bitmap.BitmapDisplayConfig: com.lidroid.xutils.bitmap.core.BitmapSize getBitmapMaxSize()
com.lidroid.xutils.bitmap.BitmapDisplayConfig: void setBitmapMaxSize(com.lidroid.xutils.bitmap.core.BitmapSize)
com.lidroid.xutils.bitmap.BitmapDisplayConfig: android.view.animation.Animation getAnimation()
com.lidroid.xutils.bitmap.BitmapDisplayConfig: void setAnimation(android.view.animation.Animation)
com.lidroid.xutils.bitmap.BitmapDisplayConfig: android.graphics.drawable.Drawable getLoadingDrawable()
com.lidroid.xutils.bitmap.BitmapDisplayConfig: void setLoadingDrawable(android.graphics.drawable.Drawable)
com.lidroid.xutils.bitmap.BitmapDisplayConfig: android.graphics.drawable.Drawable getLoadFailedDrawable()
com.lidroid.xutils.bitmap.BitmapDisplayConfig: void setLoadFailedDrawable(android.graphics.drawable.Drawable)
com.lidroid.xutils.bitmap.BitmapDisplayConfig: boolean isAutoRotation()
com.lidroid.xutils.bitmap.BitmapDisplayConfig: void setAutoRotation(boolean)
com.lidroid.xutils.bitmap.BitmapDisplayConfig: boolean isShowOriginal()
com.lidroid.xutils.bitmap.BitmapDisplayConfig: void setShowOriginal(boolean)
com.lidroid.xutils.bitmap.BitmapDisplayConfig: android.graphics.Bitmap$Config getBitmapConfig()
com.lidroid.xutils.bitmap.BitmapDisplayConfig: void setBitmapConfig(android.graphics.Bitmap$Config)
com.lidroid.xutils.bitmap.BitmapDisplayConfig: java.lang.String toString()
com.lidroid.xutils.bitmap.BitmapDisplayConfig: com.lidroid.xutils.bitmap.BitmapDisplayConfig cloneNew()
com.lidroid.xutils.bitmap.BitmapGlobalConfig
com.lidroid.xutils.bitmap.BitmapGlobalConfig: java.lang.String diskCachePath
com.lidroid.xutils.bitmap.BitmapGlobalConfig: int MIN_MEMORY_CACHE_SIZE
com.lidroid.xutils.bitmap.BitmapGlobalConfig: int memoryCacheSize
com.lidroid.xutils.bitmap.BitmapGlobalConfig: int MIN_DISK_CACHE_SIZE
com.lidroid.xutils.bitmap.BitmapGlobalConfig: int diskCacheSize
com.lidroid.xutils.bitmap.BitmapGlobalConfig: boolean memoryCacheEnabled
com.lidroid.xutils.bitmap.BitmapGlobalConfig: boolean diskCacheEnabled
com.lidroid.xutils.bitmap.BitmapGlobalConfig: com.lidroid.xutils.bitmap.download.Downloader downloader
com.lidroid.xutils.bitmap.BitmapGlobalConfig: com.lidroid.xutils.bitmap.core.BitmapCache bitmapCache
com.lidroid.xutils.bitmap.BitmapGlobalConfig: int threadPoolSize
com.lidroid.xutils.bitmap.BitmapGlobalConfig: boolean _dirty_params_bitmapLoadExecutor
com.lidroid.xutils.bitmap.BitmapGlobalConfig: java.util.concurrent.ExecutorService bitmapLoadExecutor
com.lidroid.xutils.bitmap.BitmapGlobalConfig: long defaultCacheExpiry
com.lidroid.xutils.bitmap.BitmapGlobalConfig: int defaultConnectTimeout
com.lidroid.xutils.bitmap.BitmapGlobalConfig: int defaultReadTimeout
com.lidroid.xutils.bitmap.BitmapGlobalConfig: com.lidroid.xutils.util.core.LruDiskCache$DiskCacheFileNameGenerator diskCacheFileNameGenerator
com.lidroid.xutils.bitmap.BitmapGlobalConfig: com.lidroid.xutils.bitmap.BitmapCacheListener bitmapCacheListener
com.lidroid.xutils.bitmap.BitmapGlobalConfig: java.util.concurrent.ThreadFactory sThreadFactory
com.lidroid.xutils.bitmap.BitmapGlobalConfig: android.content.Context mContext
com.lidroid.xutils.bitmap.BitmapGlobalConfig: void <clinit>()
com.lidroid.xutils.bitmap.BitmapGlobalConfig: BitmapGlobalConfig(android.content.Context,java.lang.String)
com.lidroid.xutils.bitmap.BitmapGlobalConfig: void initBitmapCache()
com.lidroid.xutils.bitmap.BitmapGlobalConfig: java.lang.String getDiskCachePath()
com.lidroid.xutils.bitmap.BitmapGlobalConfig: com.lidroid.xutils.bitmap.download.Downloader getDownloader()
com.lidroid.xutils.bitmap.BitmapGlobalConfig: void setDownloader(com.lidroid.xutils.bitmap.download.Downloader)
com.lidroid.xutils.bitmap.BitmapGlobalConfig: long getDefaultCacheExpiry()
com.lidroid.xutils.bitmap.BitmapGlobalConfig: void setDefaultCacheExpiry(long)
com.lidroid.xutils.bitmap.BitmapGlobalConfig: int getDefaultConnectTimeout()
com.lidroid.xutils.bitmap.BitmapGlobalConfig: void setDefaultConnectTimeout(int)
com.lidroid.xutils.bitmap.BitmapGlobalConfig: int getDefaultReadTimeout()
com.lidroid.xutils.bitmap.BitmapGlobalConfig: void setDefaultReadTimeout(int)
com.lidroid.xutils.bitmap.BitmapGlobalConfig: com.lidroid.xutils.bitmap.core.BitmapCache getBitmapCache()
com.lidroid.xutils.bitmap.BitmapGlobalConfig: int getMemoryCacheSize()
com.lidroid.xutils.bitmap.BitmapGlobalConfig: void setMemoryCacheSize(int)
com.lidroid.xutils.bitmap.BitmapGlobalConfig: void setMemCacheSizePercent(float)
com.lidroid.xutils.bitmap.BitmapGlobalConfig: int getDiskCacheSize()
com.lidroid.xutils.bitmap.BitmapGlobalConfig: void setDiskCacheSize(int)
com.lidroid.xutils.bitmap.BitmapGlobalConfig: int getThreadPoolSize()
com.lidroid.xutils.bitmap.BitmapGlobalConfig: void setThreadPoolSize(int)
com.lidroid.xutils.bitmap.BitmapGlobalConfig: java.util.concurrent.ExecutorService getBitmapLoadExecutor()
com.lidroid.xutils.bitmap.BitmapGlobalConfig: boolean isMemoryCacheEnabled()
com.lidroid.xutils.bitmap.BitmapGlobalConfig: void setMemoryCacheEnabled(boolean)
com.lidroid.xutils.bitmap.BitmapGlobalConfig: boolean isDiskCacheEnabled()
com.lidroid.xutils.bitmap.BitmapGlobalConfig: void setDiskCacheEnabled(boolean)
com.lidroid.xutils.bitmap.BitmapGlobalConfig: com.lidroid.xutils.util.core.LruDiskCache$DiskCacheFileNameGenerator getDiskCacheFileNameGenerator()
com.lidroid.xutils.bitmap.BitmapGlobalConfig: void setDiskCacheFileNameGenerator(com.lidroid.xutils.util.core.LruDiskCache$DiskCacheFileNameGenerator)
com.lidroid.xutils.bitmap.BitmapGlobalConfig: com.lidroid.xutils.bitmap.BitmapCacheListener getBitmapCacheListener()
com.lidroid.xutils.bitmap.BitmapGlobalConfig: void setBitmapCacheListener(com.lidroid.xutils.bitmap.BitmapCacheListener)
com.lidroid.xutils.bitmap.BitmapGlobalConfig: int getMemoryClass()
com.lidroid.xutils.bitmap.BitmapGlobalConfig: void clearCache()
com.lidroid.xutils.bitmap.BitmapGlobalConfig: void clearMemoryCache()
com.lidroid.xutils.bitmap.BitmapGlobalConfig: void clearDiskCache()
com.lidroid.xutils.bitmap.BitmapGlobalConfig: void clearCache(java.lang.String)
com.lidroid.xutils.bitmap.BitmapGlobalConfig: void clearMemoryCache(java.lang.String)
com.lidroid.xutils.bitmap.BitmapGlobalConfig: void clearDiskCache(java.lang.String)
com.lidroid.xutils.bitmap.BitmapGlobalConfig: void flushCache()
com.lidroid.xutils.bitmap.BitmapGlobalConfig: void closeCache()
com.lidroid.xutils.bitmap.BitmapGlobalConfig: com.lidroid.xutils.bitmap.BitmapCacheListener access$0(com.lidroid.xutils.bitmap.BitmapGlobalConfig)
com.lidroid.xutils.bitmap.BitmapGlobalConfig$1
com.lidroid.xutils.bitmap.BitmapGlobalConfig$1: java.util.concurrent.atomic.AtomicInteger mCount
com.lidroid.xutils.bitmap.BitmapGlobalConfig$1: BitmapGlobalConfig$1()
com.lidroid.xutils.bitmap.BitmapGlobalConfig$1: java.lang.Thread newThread(java.lang.Runnable)
com.lidroid.xutils.bitmap.BitmapGlobalConfig$BitmapCacheManagementTask
com.lidroid.xutils.bitmap.BitmapGlobalConfig$BitmapCacheManagementTask: int MESSAGE_INIT_MEMORY_CACHE
com.lidroid.xutils.bitmap.BitmapGlobalConfig$BitmapCacheManagementTask: int MESSAGE_INIT_DISK_CACHE
com.lidroid.xutils.bitmap.BitmapGlobalConfig$BitmapCacheManagementTask: int MESSAGE_FLUSH
com.lidroid.xutils.bitmap.BitmapGlobalConfig$BitmapCacheManagementTask: int MESSAGE_CLOSE
com.lidroid.xutils.bitmap.BitmapGlobalConfig$BitmapCacheManagementTask: int MESSAGE_CLEAR
com.lidroid.xutils.bitmap.BitmapGlobalConfig$BitmapCacheManagementTask: int MESSAGE_CLEAR_MEMORY
com.lidroid.xutils.bitmap.BitmapGlobalConfig$BitmapCacheManagementTask: int MESSAGE_CLEAR_DISK
com.lidroid.xutils.bitmap.BitmapGlobalConfig$BitmapCacheManagementTask: int MESSAGE_CLEAR_BY_KEY
com.lidroid.xutils.bitmap.BitmapGlobalConfig$BitmapCacheManagementTask: int MESSAGE_CLEAR_MEMORY_BY_KEY
com.lidroid.xutils.bitmap.BitmapGlobalConfig$BitmapCacheManagementTask: int MESSAGE_CLEAR_DISK_BY_KEY
com.lidroid.xutils.bitmap.BitmapGlobalConfig$BitmapCacheManagementTask: com.lidroid.xutils.bitmap.BitmapGlobalConfig this$0
com.lidroid.xutils.bitmap.BitmapGlobalConfig$BitmapCacheManagementTask: BitmapGlobalConfig$BitmapCacheManagementTask(com.lidroid.xutils.bitmap.BitmapGlobalConfig)
com.lidroid.xutils.bitmap.BitmapGlobalConfig$BitmapCacheManagementTask: java.lang.Object[] doInBackground(java.lang.Object[])
com.lidroid.xutils.bitmap.BitmapGlobalConfig$BitmapCacheManagementTask: void onPostExecute(java.lang.Object[])
com.lidroid.xutils.bitmap.BitmapGlobalConfig$BitmapCacheManagementTask: void onPostExecute(java.lang.Object)
com.lidroid.xutils.bitmap.BitmapGlobalConfig$BitmapCacheManagementTask: java.lang.Object doInBackground(java.lang.Object[])
com.lidroid.xutils.bitmap.BitmapGlobalConfig$BitmapCacheManagementTask: BitmapGlobalConfig$BitmapCacheManagementTask(com.lidroid.xutils.bitmap.BitmapGlobalConfig,com.lidroid.xutils.bitmap.BitmapGlobalConfig$BitmapCacheManagementTask)
com.lidroid.xutils.bitmap.PauseOnScrollListener
com.lidroid.xutils.bitmap.PauseOnScrollListener: com.jayqqaa12.abase.core.ABitmap bitmapUtils
com.lidroid.xutils.bitmap.PauseOnScrollListener: boolean pauseOnScroll
com.lidroid.xutils.bitmap.PauseOnScrollListener: boolean pauseOnFling
com.lidroid.xutils.bitmap.PauseOnScrollListener: android.widget.AbsListView$OnScrollListener externalListener
com.lidroid.xutils.bitmap.PauseOnScrollListener: PauseOnScrollListener(com.jayqqaa12.abase.core.ABitmap,boolean,boolean)
com.lidroid.xutils.bitmap.PauseOnScrollListener: PauseOnScrollListener(com.jayqqaa12.abase.core.ABitmap,boolean,boolean,android.widget.AbsListView$OnScrollListener)
com.lidroid.xutils.bitmap.PauseOnScrollListener: void onScrollStateChanged(android.widget.AbsListView,int)
com.lidroid.xutils.bitmap.PauseOnScrollListener: void onScroll(android.widget.AbsListView,int,int,int)
com.lidroid.xutils.bitmap.callback.BitmapLoadCallBack
com.lidroid.xutils.bitmap.callback.BitmapLoadCallBack: com.lidroid.xutils.bitmap.callback.BitmapSetter bitmapSetter
com.lidroid.xutils.bitmap.callback.BitmapLoadCallBack: BitmapLoadCallBack()
com.lidroid.xutils.bitmap.callback.BitmapLoadCallBack: void onPreLoad(android.view.View,java.lang.String,com.lidroid.xutils.bitmap.BitmapDisplayConfig)
com.lidroid.xutils.bitmap.callback.BitmapLoadCallBack: void onLoadStarted(android.view.View,java.lang.String,com.lidroid.xutils.bitmap.BitmapDisplayConfig)
com.lidroid.xutils.bitmap.callback.BitmapLoadCallBack: void onLoading(android.view.View,java.lang.String,com.lidroid.xutils.bitmap.BitmapDisplayConfig,long,long)
com.lidroid.xutils.bitmap.callback.BitmapLoadCallBack: void onLoadCompleted(android.view.View,java.lang.String,android.graphics.Bitmap,com.lidroid.xutils.bitmap.BitmapDisplayConfig,com.lidroid.xutils.bitmap.callback.BitmapLoadFrom)
com.lidroid.xutils.bitmap.callback.BitmapLoadCallBack: void onLoadFailed(android.view.View,java.lang.String,android.graphics.drawable.Drawable)
com.lidroid.xutils.bitmap.callback.BitmapLoadCallBack: void setBitmapSetter(com.lidroid.xutils.bitmap.callback.BitmapSetter)
com.lidroid.xutils.bitmap.callback.BitmapLoadCallBack: void setBitmap(android.view.View,android.graphics.Bitmap)
com.lidroid.xutils.bitmap.callback.BitmapLoadCallBack: void setDrawable(android.view.View,android.graphics.drawable.Drawable)
com.lidroid.xutils.bitmap.callback.BitmapLoadCallBack: android.graphics.drawable.Drawable getDrawable(android.view.View)
com.lidroid.xutils.bitmap.callback.BitmapLoadFrom
com.lidroid.xutils.bitmap.callback.BitmapLoadFrom: com.lidroid.xutils.bitmap.callback.BitmapLoadFrom MEMORY_CACHE
com.lidroid.xutils.bitmap.callback.BitmapLoadFrom: com.lidroid.xutils.bitmap.callback.BitmapLoadFrom DISK_CACHE
com.lidroid.xutils.bitmap.callback.BitmapLoadFrom: com.lidroid.xutils.bitmap.callback.BitmapLoadFrom URI
com.lidroid.xutils.bitmap.callback.BitmapLoadFrom: com.lidroid.xutils.bitmap.callback.BitmapLoadFrom[] ENUM$VALUES
com.lidroid.xutils.bitmap.callback.BitmapLoadFrom: void <clinit>()
com.lidroid.xutils.bitmap.callback.BitmapLoadFrom: BitmapLoadFrom(java.lang.String,int)
com.lidroid.xutils.bitmap.callback.BitmapLoadFrom: com.lidroid.xutils.bitmap.callback.BitmapLoadFrom[] values()
com.lidroid.xutils.bitmap.callback.BitmapLoadFrom: com.lidroid.xutils.bitmap.callback.BitmapLoadFrom valueOf(java.lang.String)
com.lidroid.xutils.bitmap.callback.BitmapSetter
com.lidroid.xutils.bitmap.callback.BitmapSetter: void setBitmap(android.view.View,android.graphics.Bitmap)
com.lidroid.xutils.bitmap.callback.BitmapSetter: void setDrawable(android.view.View,android.graphics.drawable.Drawable)
com.lidroid.xutils.bitmap.callback.BitmapSetter: android.graphics.drawable.Drawable getDrawable(android.view.View)
com.lidroid.xutils.bitmap.callback.DefaultBitmapLoadCallBack
com.lidroid.xutils.bitmap.callback.DefaultBitmapLoadCallBack: DefaultBitmapLoadCallBack()
com.lidroid.xutils.bitmap.callback.DefaultBitmapLoadCallBack: void onLoadCompleted(android.view.View,java.lang.String,android.graphics.Bitmap,com.lidroid.xutils.bitmap.BitmapDisplayConfig,com.lidroid.xutils.bitmap.callback.BitmapLoadFrom)
com.lidroid.xutils.bitmap.callback.DefaultBitmapLoadCallBack: void onLoadFailed(android.view.View,java.lang.String,android.graphics.drawable.Drawable)
com.lidroid.xutils.bitmap.callback.DefaultBitmapLoadCallBack: void animationDisplay(android.view.View,android.view.animation.Animation)
com.lidroid.xutils.bitmap.core.AsyncDrawable
com.lidroid.xutils.bitmap.core.AsyncDrawable: java.lang.ref.WeakReference bitmapLoadTaskReference
com.lidroid.xutils.bitmap.core.AsyncDrawable: android.graphics.drawable.Drawable baseDrawable
com.lidroid.xutils.bitmap.core.AsyncDrawable: AsyncDrawable(android.graphics.drawable.Drawable,com.jayqqaa12.abase.core.ABitmap$BitmapLoadTask)
com.lidroid.xutils.bitmap.core.AsyncDrawable: com.jayqqaa12.abase.core.ABitmap$BitmapLoadTask getBitmapWorkerTask()
com.lidroid.xutils.bitmap.core.AsyncDrawable: void draw(android.graphics.Canvas)
com.lidroid.xutils.bitmap.core.AsyncDrawable: void setAlpha(int)
com.lidroid.xutils.bitmap.core.AsyncDrawable: void setColorFilter(android.graphics.ColorFilter)
com.lidroid.xutils.bitmap.core.AsyncDrawable: int getOpacity()
com.lidroid.xutils.bitmap.core.AsyncDrawable: void setBounds(int,int,int,int)
com.lidroid.xutils.bitmap.core.AsyncDrawable: void setBounds(android.graphics.Rect)
com.lidroid.xutils.bitmap.core.AsyncDrawable: void setChangingConfigurations(int)
com.lidroid.xutils.bitmap.core.AsyncDrawable: int getChangingConfigurations()
com.lidroid.xutils.bitmap.core.AsyncDrawable: void setDither(boolean)
com.lidroid.xutils.bitmap.core.AsyncDrawable: void setFilterBitmap(boolean)
com.lidroid.xutils.bitmap.core.AsyncDrawable: void invalidateSelf()
com.lidroid.xutils.bitmap.core.AsyncDrawable: void scheduleSelf(java.lang.Runnable,long)
com.lidroid.xutils.bitmap.core.AsyncDrawable: void unscheduleSelf(java.lang.Runnable)
com.lidroid.xutils.bitmap.core.AsyncDrawable: void setColorFilter(int,android.graphics.PorterDuff$Mode)
com.lidroid.xutils.bitmap.core.AsyncDrawable: void clearColorFilter()
com.lidroid.xutils.bitmap.core.AsyncDrawable: boolean isStateful()
com.lidroid.xutils.bitmap.core.AsyncDrawable: boolean setState(int[])
com.lidroid.xutils.bitmap.core.AsyncDrawable: int[] getState()
com.lidroid.xutils.bitmap.core.AsyncDrawable: android.graphics.drawable.Drawable getCurrent()
com.lidroid.xutils.bitmap.core.AsyncDrawable: boolean setVisible(boolean,boolean)
com.lidroid.xutils.bitmap.core.AsyncDrawable: android.graphics.Region getTransparentRegion()
com.lidroid.xutils.bitmap.core.AsyncDrawable: int getIntrinsicWidth()
com.lidroid.xutils.bitmap.core.AsyncDrawable: int getIntrinsicHeight()
com.lidroid.xutils.bitmap.core.AsyncDrawable: int getMinimumWidth()
com.lidroid.xutils.bitmap.core.AsyncDrawable: int getMinimumHeight()
com.lidroid.xutils.bitmap.core.AsyncDrawable: boolean getPadding(android.graphics.Rect)
com.lidroid.xutils.bitmap.core.AsyncDrawable: android.graphics.drawable.Drawable mutate()
com.lidroid.xutils.bitmap.core.AsyncDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()
com.lidroid.xutils.bitmap.core.BitmapCache
com.lidroid.xutils.bitmap.core.BitmapCache: int DISK_CACHE_INDEX
com.lidroid.xutils.bitmap.core.BitmapCache: com.lidroid.xutils.util.core.LruDiskCache mDiskLruCache
com.lidroid.xutils.bitmap.core.BitmapCache: com.lidroid.xutils.util.core.LruMemoryCache mMemoryCache
com.lidroid.xutils.bitmap.core.BitmapCache: java.lang.Object mDiskCacheLock
com.lidroid.xutils.bitmap.core.BitmapCache: boolean isDiskCacheReadied
com.lidroid.xutils.bitmap.core.BitmapCache: com.lidroid.xutils.bitmap.BitmapGlobalConfig globalConfig
com.lidroid.xutils.bitmap.core.BitmapCache: BitmapCache(com.lidroid.xutils.bitmap.BitmapGlobalConfig)
com.lidroid.xutils.bitmap.core.BitmapCache: void initMemoryCache()
com.lidroid.xutils.bitmap.core.BitmapCache: void initDiskCache()
com.lidroid.xutils.bitmap.core.BitmapCache: void setMemoryCacheSize(int)
com.lidroid.xutils.bitmap.core.BitmapCache: void setDiskCacheSize(int)
com.lidroid.xutils.bitmap.core.BitmapCache: void setDiskCacheFileNameGenerator(com.lidroid.xutils.util.core.LruDiskCache$DiskCacheFileNameGenerator)
com.lidroid.xutils.bitmap.core.BitmapCache: android.graphics.Bitmap downloadBitmap(java.lang.String,com.lidroid.xutils.bitmap.BitmapDisplayConfig,com.jayqqaa12.abase.core.ABitmap$BitmapLoadTask)
com.lidroid.xutils.bitmap.core.BitmapCache: void addBitmapToMemoryCache(java.lang.String,com.lidroid.xutils.bitmap.BitmapDisplayConfig,android.graphics.Bitmap,long)
com.lidroid.xutils.bitmap.core.BitmapCache: android.graphics.Bitmap getBitmapFromMemCache(java.lang.String,com.lidroid.xutils.bitmap.BitmapDisplayConfig)
com.lidroid.xutils.bitmap.core.BitmapCache: java.io.File getBitmapFileFromDiskCache(java.lang.String)
com.lidroid.xutils.bitmap.core.BitmapCache: android.graphics.Bitmap getBitmapFromDiskCache(java.lang.String,com.lidroid.xutils.bitmap.BitmapDisplayConfig)
com.lidroid.xutils.bitmap.core.BitmapCache: void clearCache()
com.lidroid.xutils.bitmap.core.BitmapCache: void clearMemoryCache()
com.lidroid.xutils.bitmap.core.BitmapCache: void clearDiskCache()
com.lidroid.xutils.bitmap.core.BitmapCache: void clearCache(java.lang.String)
com.lidroid.xutils.bitmap.core.BitmapCache: void clearMemoryCache(java.lang.String)
com.lidroid.xutils.bitmap.core.BitmapCache: void clearDiskCache(java.lang.String)
com.lidroid.xutils.bitmap.core.BitmapCache: void flush()
com.lidroid.xutils.bitmap.core.BitmapCache: void close()
com.lidroid.xutils.bitmap.core.BitmapCache: android.graphics.Bitmap decodeBitmapMeta(com.lidroid.xutils.bitmap.core.BitmapCache$BitmapMeta,com.lidroid.xutils.bitmap.BitmapDisplayConfig)
com.lidroid.xutils.bitmap.core.BitmapCache: android.graphics.Bitmap rotateBitmapIfNeeded(java.lang.String,com.lidroid.xutils.bitmap.BitmapDisplayConfig,android.graphics.Bitmap)
com.lidroid.xutils.bitmap.core.BitmapCache$1
com.lidroid.xutils.bitmap.core.BitmapCache$1: com.lidroid.xutils.bitmap.core.BitmapCache this$0
com.lidroid.xutils.bitmap.core.BitmapCache$1: BitmapCache$1(com.lidroid.xutils.bitmap.core.BitmapCache,int)
com.lidroid.xutils.bitmap.core.BitmapCache$1: int sizeOf(com.lidroid.xutils.bitmap.core.BitmapCache$MemoryCacheKey,android.graphics.Bitmap)
com.lidroid.xutils.bitmap.core.BitmapCache$1: int sizeOf(java.lang.Object,java.lang.Object)
com.lidroid.xutils.bitmap.core.BitmapCache$BitmapMeta
com.lidroid.xutils.bitmap.core.BitmapCache$BitmapMeta: java.io.FileInputStream inputStream
com.lidroid.xutils.bitmap.core.BitmapCache$BitmapMeta: byte[] data
com.lidroid.xutils.bitmap.core.BitmapCache$BitmapMeta: long expiryTimestamp
com.lidroid.xutils.bitmap.core.BitmapCache$BitmapMeta: com.lidroid.xutils.bitmap.core.BitmapCache this$0
com.lidroid.xutils.bitmap.core.BitmapCache$BitmapMeta: BitmapCache$BitmapMeta(com.lidroid.xutils.bitmap.core.BitmapCache)
com.lidroid.xutils.bitmap.core.BitmapCache$BitmapMeta: BitmapCache$BitmapMeta(com.lidroid.xutils.bitmap.core.BitmapCache,com.lidroid.xutils.bitmap.core.BitmapCache$BitmapMeta)
com.lidroid.xutils.bitmap.core.BitmapCache$MemoryCacheKey
com.lidroid.xutils.bitmap.core.BitmapCache$MemoryCacheKey: java.lang.String uri
com.lidroid.xutils.bitmap.core.BitmapCache$MemoryCacheKey: java.lang.String subKey
com.lidroid.xutils.bitmap.core.BitmapCache$MemoryCacheKey: com.lidroid.xutils.bitmap.core.BitmapCache this$0
com.lidroid.xutils.bitmap.core.BitmapCache$MemoryCacheKey: BitmapCache$MemoryCacheKey(com.lidroid.xutils.bitmap.core.BitmapCache,java.lang.String,java.lang.String)
com.lidroid.xutils.bitmap.core.BitmapCache$MemoryCacheKey: boolean equals(java.lang.Object)
com.lidroid.xutils.bitmap.core.BitmapCache$MemoryCacheKey: int hashCode()
com.lidroid.xutils.bitmap.core.BitmapCache$MemoryCacheKey: BitmapCache$MemoryCacheKey(com.lidroid.xutils.bitmap.core.BitmapCache,java.lang.String,java.lang.String,com.lidroid.xutils.bitmap.core.BitmapCache$MemoryCacheKey)
com.lidroid.xutils.bitmap.core.BitmapDecoder
com.lidroid.xutils.bitmap.core.BitmapDecoder: BitmapDecoder()
com.lidroid.xutils.bitmap.core.BitmapDecoder: android.graphics.Bitmap decodeSampledBitmapFromResource(android.content.res.Resources,int,com.lidroid.xutils.bitmap.core.BitmapSize,android.graphics.Bitmap$Config)
com.lidroid.xutils.bitmap.core.BitmapDecoder: android.graphics.Bitmap decodeSampledBitmapFromFile(java.lang.String,com.lidroid.xutils.bitmap.core.BitmapSize,android.graphics.Bitmap$Config)
com.lidroid.xutils.bitmap.core.BitmapDecoder: android.graphics.Bitmap decodeSampledBitmapFromDescriptor(java.io.FileDescriptor,com.lidroid.xutils.bitmap.core.BitmapSize,android.graphics.Bitmap$Config)
com.lidroid.xutils.bitmap.core.BitmapDecoder: android.graphics.Bitmap decodeSampledBitmapFromByteArray(byte[],com.lidroid.xutils.bitmap.core.BitmapSize,android.graphics.Bitmap$Config)
com.lidroid.xutils.bitmap.core.BitmapDecoder: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)
com.lidroid.xutils.bitmap.core.BitmapDecoder: android.graphics.Bitmap decodeFile(java.lang.String)
com.lidroid.xutils.bitmap.core.BitmapDecoder: android.graphics.Bitmap decodeFileDescriptor(java.io.FileDescriptor)
com.lidroid.xutils.bitmap.core.BitmapDecoder: android.graphics.Bitmap decodeByteArray(byte[])
com.lidroid.xutils.bitmap.core.BitmapDecoder: int calculateInSampleSize(android.graphics.BitmapFactory$Options,int,int)
com.lidroid.xutils.bitmap.core.BitmapSize
com.lidroid.xutils.bitmap.core.BitmapSize: com.lidroid.xutils.bitmap.core.BitmapSize ZERO
com.lidroid.xutils.bitmap.core.BitmapSize: int width
com.lidroid.xutils.bitmap.core.BitmapSize: int height
com.lidroid.xutils.bitmap.core.BitmapSize: void <clinit>()
com.lidroid.xutils.bitmap.core.BitmapSize: BitmapSize()
com.lidroid.xutils.bitmap.core.BitmapSize: BitmapSize(int,int)
com.lidroid.xutils.bitmap.core.BitmapSize: com.lidroid.xutils.bitmap.core.BitmapSize scaleDown(int)
com.lidroid.xutils.bitmap.core.BitmapSize: com.lidroid.xutils.bitmap.core.BitmapSize scale(float)
com.lidroid.xutils.bitmap.core.BitmapSize: int getWidth()
com.lidroid.xutils.bitmap.core.BitmapSize: void setWidth(int)
com.lidroid.xutils.bitmap.core.BitmapSize: int getHeight()
com.lidroid.xutils.bitmap.core.BitmapSize: void setHeight(int)
com.lidroid.xutils.bitmap.core.BitmapSize: java.lang.String toString()
com.lidroid.xutils.bitmap.download.DefaultDownloader
com.lidroid.xutils.bitmap.download.DefaultDownloader: DefaultDownloader()
com.lidroid.xutils.bitmap.download.DefaultDownloader: long downloadToStream(java.lang.String,java.io.OutputStream,com.jayqqaa12.abase.core.ABitmap$BitmapLoadTask)
com.lidroid.xutils.bitmap.download.Downloader
com.lidroid.xutils.bitmap.download.Downloader: android.content.Context context
com.lidroid.xutils.bitmap.download.Downloader: long defaultExpiry
com.lidroid.xutils.bitmap.download.Downloader: int defaultConnectTimeout
com.lidroid.xutils.bitmap.download.Downloader: int defaultReadTimeout
com.lidroid.xutils.bitmap.download.Downloader: Downloader()
com.lidroid.xutils.bitmap.download.Downloader: long downloadToStream(java.lang.String,java.io.OutputStream,com.jayqqaa12.abase.core.ABitmap$BitmapLoadTask)
com.lidroid.xutils.bitmap.download.Downloader: android.content.Context getContext()
com.lidroid.xutils.bitmap.download.Downloader: void setContext(android.content.Context)
com.lidroid.xutils.bitmap.download.Downloader: void setDefaultExpiry(long)
com.lidroid.xutils.bitmap.download.Downloader: long getDefaultExpiry()
com.lidroid.xutils.bitmap.download.Downloader: int getDefaultConnectTimeout()
com.lidroid.xutils.bitmap.download.Downloader: void setDefaultConnectTimeout(int)
com.lidroid.xutils.bitmap.download.Downloader: int getDefaultReadTimeout()
com.lidroid.xutils.bitmap.download.Downloader: void setDefaultReadTimeout(int)
com.lidroid.xutils.db.annotation.Check
com.lidroid.xutils.db.annotation.Check: java.lang.String value()
com.lidroid.xutils.db.annotation.Column
com.lidroid.xutils.db.annotation.Column: java.lang.String column()
com.lidroid.xutils.db.annotation.Column: java.lang.String defaultValue()
com.lidroid.xutils.db.annotation.Finder
com.lidroid.xutils.db.annotation.Finder: java.lang.String valueColumn()
com.lidroid.xutils.db.annotation.Finder: java.lang.String targetColumn()
com.lidroid.xutils.db.annotation.Foreign
com.lidroid.xutils.db.annotation.Foreign: java.lang.String column()
com.lidroid.xutils.db.annotation.Foreign: java.lang.String foreign()
com.lidroid.xutils.db.annotation.Id
com.lidroid.xutils.db.annotation.Id: java.lang.String column()
com.lidroid.xutils.db.annotation.NoAutoIncrement
com.lidroid.xutils.db.annotation.NotNull
com.lidroid.xutils.db.annotation.Table
com.lidroid.xutils.db.annotation.Table: java.lang.String name()
com.lidroid.xutils.db.annotation.Table: java.lang.String execAfterTableCreated()
com.lidroid.xutils.db.annotation.Transient
com.lidroid.xutils.db.annotation.Unique
com.lidroid.xutils.db.converter.BooleanColumnConverter
com.lidroid.xutils.db.converter.BooleanColumnConverter: BooleanColumnConverter()
com.lidroid.xutils.db.converter.BooleanColumnConverter: java.lang.Boolean getFieldValue(android.database.Cursor,int)
com.lidroid.xutils.db.converter.BooleanColumnConverter: java.lang.Boolean getFieldValue(java.lang.String)
com.lidroid.xutils.db.converter.BooleanColumnConverter: java.lang.Object fieldValue2ColumnValue(java.lang.Boolean)
com.lidroid.xutils.db.converter.BooleanColumnConverter: com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType()
com.lidroid.xutils.db.converter.BooleanColumnConverter: java.lang.Object fieldValue2ColumnValue(java.lang.Object)
com.lidroid.xutils.db.converter.BooleanColumnConverter: java.lang.Object getFieldValue(android.database.Cursor,int)
com.lidroid.xutils.db.converter.BooleanColumnConverter: java.lang.Object getFieldValue(java.lang.String)
com.lidroid.xutils.db.converter.ByteArrayColumnConverter
com.lidroid.xutils.db.converter.ByteArrayColumnConverter: ByteArrayColumnConverter()
com.lidroid.xutils.db.converter.ByteArrayColumnConverter: byte[] getFieldValue(android.database.Cursor,int)
com.lidroid.xutils.db.converter.ByteArrayColumnConverter: byte[] getFieldValue(java.lang.String)
com.lidroid.xutils.db.converter.ByteArrayColumnConverter: java.lang.Object fieldValue2ColumnValue(byte[])
com.lidroid.xutils.db.converter.ByteArrayColumnConverter: com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType()
com.lidroid.xutils.db.converter.ByteArrayColumnConverter: java.lang.Object fieldValue2ColumnValue(java.lang.Object)
com.lidroid.xutils.db.converter.ByteArrayColumnConverter: java.lang.Object getFieldValue(android.database.Cursor,int)
com.lidroid.xutils.db.converter.ByteArrayColumnConverter: java.lang.Object getFieldValue(java.lang.String)
com.lidroid.xutils.db.converter.ByteColumnConverter
com.lidroid.xutils.db.converter.ByteColumnConverter: ByteColumnConverter()
com.lidroid.xutils.db.converter.ByteColumnConverter: java.lang.Byte getFieldValue(android.database.Cursor,int)
com.lidroid.xutils.db.converter.ByteColumnConverter: java.lang.Byte getFieldValue(java.lang.String)
com.lidroid.xutils.db.converter.ByteColumnConverter: java.lang.Object fieldValue2ColumnValue(java.lang.Byte)
com.lidroid.xutils.db.converter.ByteColumnConverter: com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType()
com.lidroid.xutils.db.converter.ByteColumnConverter: java.lang.Object fieldValue2ColumnValue(java.lang.Object)
com.lidroid.xutils.db.converter.ByteColumnConverter: java.lang.Object getFieldValue(android.database.Cursor,int)
com.lidroid.xutils.db.converter.ByteColumnConverter: java.lang.Object getFieldValue(java.lang.String)
com.lidroid.xutils.db.converter.CharColumnConverter
com.lidroid.xutils.db.converter.CharColumnConverter: CharColumnConverter()
com.lidroid.xutils.db.converter.CharColumnConverter: java.lang.Character getFieldValue(android.database.Cursor,int)
com.lidroid.xutils.db.converter.CharColumnConverter: java.lang.Character getFieldValue(java.lang.String)
com.lidroid.xutils.db.converter.CharColumnConverter: java.lang.Object fieldValue2ColumnValue(java.lang.Character)
com.lidroid.xutils.db.converter.CharColumnConverter: com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType()
com.lidroid.xutils.db.converter.CharColumnConverter: java.lang.Object fieldValue2ColumnValue(java.lang.Object)
com.lidroid.xutils.db.converter.CharColumnConverter: java.lang.Object getFieldValue(android.database.Cursor,int)
com.lidroid.xutils.db.converter.CharColumnConverter: java.lang.Object getFieldValue(java.lang.String)
com.lidroid.xutils.db.converter.ColumnConverter
com.lidroid.xutils.db.converter.ColumnConverter: java.lang.Object getFieldValue(android.database.Cursor,int)
com.lidroid.xutils.db.converter.ColumnConverter: java.lang.Object getFieldValue(java.lang.String)
com.lidroid.xutils.db.converter.ColumnConverter: java.lang.Object fieldValue2ColumnValue(java.lang.Object)
com.lidroid.xutils.db.converter.ColumnConverter: com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType()
com.lidroid.xutils.db.converter.ColumnConverterFactory
com.lidroid.xutils.db.converter.ColumnConverterFactory: java.util.concurrent.ConcurrentHashMap columnType_columnConverter_map
com.lidroid.xutils.db.converter.ColumnConverterFactory: void <clinit>()
com.lidroid.xutils.db.converter.ColumnConverterFactory: ColumnConverterFactory()
com.lidroid.xutils.db.converter.ColumnConverterFactory: com.lidroid.xutils.db.converter.ColumnConverter getColumnConverter(java.lang.Class)
com.lidroid.xutils.db.converter.ColumnConverterFactory: com.lidroid.xutils.db.sqlite.ColumnDbType getDbColumnType(java.lang.Class)
com.lidroid.xutils.db.converter.ColumnConverterFactory: void registerColumnConverter(java.lang.Class,com.lidroid.xutils.db.converter.ColumnConverter)
com.lidroid.xutils.db.converter.ColumnConverterFactory: boolean isSupportColumnConverter(java.lang.Class)
com.lidroid.xutils.db.converter.DateColumnConverter
com.lidroid.xutils.db.converter.DateColumnConverter: DateColumnConverter()
com.lidroid.xutils.db.converter.DateColumnConverter: java.util.Date getFieldValue(android.database.Cursor,int)
com.lidroid.xutils.db.converter.DateColumnConverter: java.util.Date getFieldValue(java.lang.String)
com.lidroid.xutils.db.converter.DateColumnConverter: java.lang.Object fieldValue2ColumnValue(java.util.Date)
com.lidroid.xutils.db.converter.DateColumnConverter: com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType()
com.lidroid.xutils.db.converter.DateColumnConverter: java.lang.Object fieldValue2ColumnValue(java.lang.Object)
com.lidroid.xutils.db.converter.DateColumnConverter: java.lang.Object getFieldValue(android.database.Cursor,int)
com.lidroid.xutils.db.converter.DateColumnConverter: java.lang.Object getFieldValue(java.lang.String)
com.lidroid.xutils.db.converter.DoubleColumnConverter
com.lidroid.xutils.db.converter.DoubleColumnConverter: DoubleColumnConverter()
com.lidroid.xutils.db.converter.DoubleColumnConverter: java.lang.Double getFieldValue(android.database.Cursor,int)
com.lidroid.xutils.db.converter.DoubleColumnConverter: java.lang.Double getFieldValue(java.lang.String)
com.lidroid.xutils.db.converter.DoubleColumnConverter: java.lang.Object fieldValue2ColumnValue(java.lang.Double)
com.lidroid.xutils.db.converter.DoubleColumnConverter: com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType()
com.lidroid.xutils.db.converter.DoubleColumnConverter: java.lang.Object fieldValue2ColumnValue(java.lang.Object)
com.lidroid.xutils.db.converter.DoubleColumnConverter: java.lang.Object getFieldValue(android.database.Cursor,int)
com.lidroid.xutils.db.converter.DoubleColumnConverter: java.lang.Object getFieldValue(java.lang.String)
com.lidroid.xutils.db.converter.FloatColumnConverter
com.lidroid.xutils.db.converter.FloatColumnConverter: FloatColumnConverter()
com.lidroid.xutils.db.converter.FloatColumnConverter: java.lang.Float getFieldValue(android.database.Cursor,int)
com.lidroid.xutils.db.converter.FloatColumnConverter: java.lang.Float getFieldValue(java.lang.String)
com.lidroid.xutils.db.converter.FloatColumnConverter: java.lang.Object fieldValue2ColumnValue(java.lang.Float)
com.lidroid.xutils.db.converter.FloatColumnConverter: com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType()
com.lidroid.xutils.db.converter.FloatColumnConverter: java.lang.Object fieldValue2ColumnValue(java.lang.Object)
com.lidroid.xutils.db.converter.FloatColumnConverter: java.lang.Object getFieldValue(android.database.Cursor,int)
com.lidroid.xutils.db.converter.FloatColumnConverter: java.lang.Object getFieldValue(java.lang.String)
com.lidroid.xutils.db.converter.IntegerColumnConverter
com.lidroid.xutils.db.converter.IntegerColumnConverter: IntegerColumnConverter()
com.lidroid.xutils.db.converter.IntegerColumnConverter: java.lang.Integer getFieldValue(android.database.Cursor,int)
com.lidroid.xutils.db.converter.IntegerColumnConverter: java.lang.Integer getFieldValue(java.lang.String)
com.lidroid.xutils.db.converter.IntegerColumnConverter: java.lang.Object fieldValue2ColumnValue(java.lang.Integer)
com.lidroid.xutils.db.converter.IntegerColumnConverter: com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType()
com.lidroid.xutils.db.converter.IntegerColumnConverter: java.lang.Object fieldValue2ColumnValue(java.lang.Object)
com.lidroid.xutils.db.converter.IntegerColumnConverter: java.lang.Object getFieldValue(android.database.Cursor,int)
com.lidroid.xutils.db.converter.IntegerColumnConverter: java.lang.Object getFieldValue(java.lang.String)
com.lidroid.xutils.db.converter.LongColumnConverter
com.lidroid.xutils.db.converter.LongColumnConverter: LongColumnConverter()
com.lidroid.xutils.db.converter.LongColumnConverter: java.lang.Long getFieldValue(android.database.Cursor,int)
com.lidroid.xutils.db.converter.LongColumnConverter: java.lang.Long getFieldValue(java.lang.String)
com.lidroid.xutils.db.converter.LongColumnConverter: java.lang.Object fieldValue2ColumnValue(java.lang.Long)
com.lidroid.xutils.db.converter.LongColumnConverter: com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType()
com.lidroid.xutils.db.converter.LongColumnConverter: java.lang.Object fieldValue2ColumnValue(java.lang.Object)
com.lidroid.xutils.db.converter.LongColumnConverter: java.lang.Object getFieldValue(android.database.Cursor,int)
com.lidroid.xutils.db.converter.LongColumnConverter: java.lang.Object getFieldValue(java.lang.String)
com.lidroid.xutils.db.converter.ShortColumnConverter
com.lidroid.xutils.db.converter.ShortColumnConverter: ShortColumnConverter()
com.lidroid.xutils.db.converter.ShortColumnConverter: java.lang.Short getFieldValue(android.database.Cursor,int)
com.lidroid.xutils.db.converter.ShortColumnConverter: java.lang.Short getFieldValue(java.lang.String)
com.lidroid.xutils.db.converter.ShortColumnConverter: java.lang.Object fieldValue2ColumnValue(java.lang.Short)
com.lidroid.xutils.db.converter.ShortColumnConverter: com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType()
com.lidroid.xutils.db.converter.ShortColumnConverter: java.lang.Object fieldValue2ColumnValue(java.lang.Object)
com.lidroid.xutils.db.converter.ShortColumnConverter: java.lang.Object getFieldValue(android.database.Cursor,int)
com.lidroid.xutils.db.converter.ShortColumnConverter: java.lang.Object getFieldValue(java.lang.String)
com.lidroid.xutils.db.converter.SqlDateColumnConverter
com.lidroid.xutils.db.converter.SqlDateColumnConverter: SqlDateColumnConverter()
com.lidroid.xutils.db.converter.SqlDateColumnConverter: java.sql.Date getFieldValue(android.database.Cursor,int)
com.lidroid.xutils.db.converter.SqlDateColumnConverter: java.sql.Date getFieldValue(java.lang.String)
com.lidroid.xutils.db.converter.SqlDateColumnConverter: java.lang.Object fieldValue2ColumnValue(java.sql.Date)
com.lidroid.xutils.db.converter.SqlDateColumnConverter: com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType()
com.lidroid.xutils.db.converter.SqlDateColumnConverter: java.lang.Object fieldValue2ColumnValue(java.lang.Object)
com.lidroid.xutils.db.converter.SqlDateColumnConverter: java.lang.Object getFieldValue(android.database.Cursor,int)
com.lidroid.xutils.db.converter.SqlDateColumnConverter: java.lang.Object getFieldValue(java.lang.String)
com.lidroid.xutils.db.converter.StringColumnConverter
com.lidroid.xutils.db.converter.StringColumnConverter: StringColumnConverter()
com.lidroid.xutils.db.converter.StringColumnConverter: java.lang.String getFieldValue(android.database.Cursor,int)
com.lidroid.xutils.db.converter.StringColumnConverter: java.lang.String getFieldValue(java.lang.String)
com.lidroid.xutils.db.converter.StringColumnConverter: java.lang.Object fieldValue2ColumnValue(java.lang.String)
com.lidroid.xutils.db.converter.StringColumnConverter: com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType()
com.lidroid.xutils.db.converter.StringColumnConverter: java.lang.Object fieldValue2ColumnValue(java.lang.Object)
com.lidroid.xutils.db.converter.StringColumnConverter: java.lang.Object getFieldValue(android.database.Cursor,int)
com.lidroid.xutils.db.converter.StringColumnConverter: java.lang.Object getFieldValue(java.lang.String)
com.lidroid.xutils.db.sqlite.ColumnDbType
com.lidroid.xutils.db.sqlite.ColumnDbType: com.lidroid.xutils.db.sqlite.ColumnDbType INTEGER
com.lidroid.xutils.db.sqlite.ColumnDbType: com.lidroid.xutils.db.sqlite.ColumnDbType REAL
com.lidroid.xutils.db.sqlite.ColumnDbType: com.lidroid.xutils.db.sqlite.ColumnDbType TEXT
com.lidroid.xutils.db.sqlite.ColumnDbType: com.lidroid.xutils.db.sqlite.ColumnDbType BLOB
com.lidroid.xutils.db.sqlite.ColumnDbType: java.lang.String value
com.lidroid.xutils.db.sqlite.ColumnDbType: com.lidroid.xutils.db.sqlite.ColumnDbType[] ENUM$VALUES
com.lidroid.xutils.db.sqlite.ColumnDbType: void <clinit>()
com.lidroid.xutils.db.sqlite.ColumnDbType: ColumnDbType(java.lang.String,int,java.lang.String)
com.lidroid.xutils.db.sqlite.ColumnDbType: java.lang.String toString()
com.lidroid.xutils.db.sqlite.ColumnDbType: com.lidroid.xutils.db.sqlite.ColumnDbType[] values()
com.lidroid.xutils.db.sqlite.ColumnDbType: com.lidroid.xutils.db.sqlite.ColumnDbType valueOf(java.lang.String)
com.lidroid.xutils.db.sqlite.CursorUtils
com.lidroid.xutils.db.sqlite.CursorUtils: CursorUtils()
com.lidroid.xutils.db.sqlite.CursorUtils: java.lang.Object getEntity(com.jayqqaa12.abase.core.DbKit,android.database.Cursor,java.lang.Class,long)
com.lidroid.xutils.db.sqlite.CursorUtils: com.lidroid.xutils.db.table.DbModel getDbModel(android.database.Cursor)
com.lidroid.xutils.db.sqlite.CursorUtils$EntityTempCache
com.lidroid.xutils.db.sqlite.CursorUtils$EntityTempCache: com.lidroid.xutils.util.core.DoubleKeyValueMap cache
com.lidroid.xutils.db.sqlite.CursorUtils$EntityTempCache: long seq
com.lidroid.xutils.db.sqlite.CursorUtils$EntityTempCache: void <clinit>()
com.lidroid.xutils.db.sqlite.CursorUtils$EntityTempCache: CursorUtils$EntityTempCache()
com.lidroid.xutils.db.sqlite.CursorUtils$EntityTempCache: void put(java.lang.Object,java.lang.String)
com.lidroid.xutils.db.sqlite.CursorUtils$EntityTempCache: java.lang.Object get(java.lang.Class,java.lang.String)
com.lidroid.xutils.db.sqlite.CursorUtils$EntityTempCache: void setSeq(long)
com.lidroid.xutils.db.sqlite.CursorUtils$FindCacheSequence
com.lidroid.xutils.db.sqlite.CursorUtils$FindCacheSequence: long seq
com.lidroid.xutils.db.sqlite.CursorUtils$FindCacheSequence: java.lang.String FOREIGN_LAZY_LOADER_CLASS_NAME
com.lidroid.xutils.db.sqlite.CursorUtils$FindCacheSequence: java.lang.String FINDER_LAZY_LOADER_CLASS_NAME
com.lidroid.xutils.db.sqlite.CursorUtils$FindCacheSequence: void <clinit>()
com.lidroid.xutils.db.sqlite.CursorUtils$FindCacheSequence: CursorUtils$FindCacheSequence()
com.lidroid.xutils.db.sqlite.CursorUtils$FindCacheSequence: long getSeq()
com.lidroid.xutils.db.sqlite.DbModelSelector
com.lidroid.xutils.db.sqlite.DbModelSelector: java.lang.String[] columnExpressions
com.lidroid.xutils.db.sqlite.DbModelSelector: java.lang.String groupByColumnName
com.lidroid.xutils.db.sqlite.DbModelSelector: com.lidroid.xutils.db.sqlite.WhereBuilder having
com.lidroid.xutils.db.sqlite.DbModelSelector: com.lidroid.xutils.db.sqlite.Selector selector
com.lidroid.xutils.db.sqlite.DbModelSelector: DbModelSelector(java.lang.Class)
com.lidroid.xutils.db.sqlite.DbModelSelector: DbModelSelector(com.lidroid.xutils.db.sqlite.Selector,java.lang.String)
com.lidroid.xutils.db.sqlite.DbModelSelector: DbModelSelector(com.lidroid.xutils.db.sqlite.Selector,java.lang.String[])
com.lidroid.xutils.db.sqlite.DbModelSelector: com.lidroid.xutils.db.sqlite.DbModelSelector from(java.lang.Class)
com.lidroid.xutils.db.sqlite.DbModelSelector: com.lidroid.xutils.db.sqlite.DbModelSelector where(com.lidroid.xutils.db.sqlite.WhereBuilder)
com.lidroid.xutils.db.sqlite.DbModelSelector: com.lidroid.xutils.db.sqlite.DbModelSelector where(java.lang.String,java.lang.String,java.lang.Object)
com.lidroid.xutils.db.sqlite.DbModelSelector: com.lidroid.xutils.db.sqlite.DbModelSelector and(java.lang.String,java.lang.String,java.lang.Object)
com.lidroid.xutils.db.sqlite.DbModelSelector: com.lidroid.xutils.db.sqlite.DbModelSelector and(com.lidroid.xutils.db.sqlite.WhereBuilder)
com.lidroid.xutils.db.sqlite.DbModelSelector: com.lidroid.xutils.db.sqlite.DbModelSelector or(java.lang.String,java.lang.String,java.lang.Object)
com.lidroid.xutils.db.sqlite.DbModelSelector: com.lidroid.xutils.db.sqlite.DbModelSelector or(com.lidroid.xutils.db.sqlite.WhereBuilder)
com.lidroid.xutils.db.sqlite.DbModelSelector: com.lidroid.xutils.db.sqlite.DbModelSelector expr(java.lang.String)
com.lidroid.xutils.db.sqlite.DbModelSelector: com.lidroid.xutils.db.sqlite.DbModelSelector expr(java.lang.String,java.lang.String,java.lang.Object)
com.lidroid.xutils.db.sqlite.DbModelSelector: com.lidroid.xutils.db.sqlite.DbModelSelector groupBy(java.lang.String)
com.lidroid.xutils.db.sqlite.DbModelSelector: com.lidroid.xutils.db.sqlite.DbModelSelector having(com.lidroid.xutils.db.sqlite.WhereBuilder)
com.lidroid.xutils.db.sqlite.DbModelSelector: com.lidroid.xutils.db.sqlite.DbModelSelector select(java.lang.String[])
com.lidroid.xutils.db.sqlite.DbModelSelector: com.lidroid.xutils.db.sqlite.DbModelSelector orderBy(java.lang.String)
com.lidroid.xutils.db.sqlite.DbModelSelector: com.lidroid.xutils.db.sqlite.DbModelSelector orderBy(java.lang.String,boolean)
com.lidroid.xutils.db.sqlite.DbModelSelector: com.lidroid.xutils.db.sqlite.DbModelSelector limit(int)
com.lidroid.xutils.db.sqlite.DbModelSelector: com.lidroid.xutils.db.sqlite.DbModelSelector offset(int)
com.lidroid.xutils.db.sqlite.DbModelSelector: java.lang.Class getEntityType()
com.lidroid.xutils.db.sqlite.DbModelSelector: java.lang.String toString()
com.lidroid.xutils.db.sqlite.FinderLazyLoader
com.lidroid.xutils.db.sqlite.FinderLazyLoader: com.lidroid.xutils.db.table.Finder finderColumn
com.lidroid.xutils.db.sqlite.FinderLazyLoader: java.lang.Object finderValue
com.lidroid.xutils.db.sqlite.FinderLazyLoader: java.util.List load()
com.lidroid.xutils.db.sqlite.FinderLazyLoader: FinderLazyLoader(java.lang.Class,java.lang.String,java.lang.Object)
com.lidroid.xutils.db.sqlite.FinderLazyLoader: FinderLazyLoader(com.lidroid.xutils.db.table.Finder,java.lang.Object)
com.lidroid.xutils.db.sqlite.FinderLazyLoader: java.util.List getAllFromDb()
com.lidroid.xutils.db.sqlite.FinderLazyLoader: java.lang.Object getFirstFromDb()
com.lidroid.xutils.db.sqlite.ForeignLazyLoader
com.lidroid.xutils.db.sqlite.ForeignLazyLoader: com.lidroid.xutils.db.table.Foreign foreignColumn
com.lidroid.xutils.db.sqlite.ForeignLazyLoader: java.lang.Object columnValue
com.lidroid.xutils.db.sqlite.ForeignLazyLoader: ForeignLazyLoader(java.lang.Class,java.lang.String,java.lang.Object)
com.lidroid.xutils.db.sqlite.ForeignLazyLoader: ForeignLazyLoader(com.lidroid.xutils.db.table.Foreign,java.lang.Object)
com.lidroid.xutils.db.sqlite.ForeignLazyLoader: java.util.List getAllFromDb()
com.lidroid.xutils.db.sqlite.ForeignLazyLoader: java.lang.Object getFirstFromDb()
com.lidroid.xutils.db.sqlite.ForeignLazyLoader: void setColumnValue(java.lang.Object)
com.lidroid.xutils.db.sqlite.ForeignLazyLoader: java.lang.Object getColumnValue()
com.lidroid.xutils.db.sqlite.Selector
com.lidroid.xutils.db.sqlite.Selector: java.lang.Class entityType
com.lidroid.xutils.db.sqlite.Selector: java.lang.String tableName
com.lidroid.xutils.db.sqlite.Selector: com.lidroid.xutils.db.sqlite.WhereBuilder whereBuilder
com.lidroid.xutils.db.sqlite.Selector: java.util.List orderByList
com.lidroid.xutils.db.sqlite.Selector: int limit
com.lidroid.xutils.db.sqlite.Selector: int offset
com.lidroid.xutils.db.sqlite.Selector: Selector(java.lang.Class)
com.lidroid.xutils.db.sqlite.Selector: com.lidroid.xutils.db.sqlite.Selector from(java.lang.Class)
com.lidroid.xutils.db.sqlite.Selector: com.lidroid.xutils.db.sqlite.Selector where(com.lidroid.xutils.db.sqlite.WhereBuilder)
com.lidroid.xutils.db.sqlite.Selector: com.lidroid.xutils.db.sqlite.Selector where(java.lang.String,java.lang.String,java.lang.Object)
com.lidroid.xutils.db.sqlite.Selector: com.lidroid.xutils.db.sqlite.Selector and(java.lang.String,java.lang.String,java.lang.Object)
com.lidroid.xutils.db.sqlite.Selector: com.lidroid.xutils.db.sqlite.Selector and(com.lidroid.xutils.db.sqlite.WhereBuilder)
com.lidroid.xutils.db.sqlite.Selector: com.lidroid.xutils.db.sqlite.Selector or(java.lang.String,java.lang.String,java.lang.Object)
com.lidroid.xutils.db.sqlite.Selector: com.lidroid.xutils.db.sqlite.Selector or(com.lidroid.xutils.db.sqlite.WhereBuilder)
com.lidroid.xutils.db.sqlite.Selector: com.lidroid.xutils.db.sqlite.Selector expr(java.lang.String)
com.lidroid.xutils.db.sqlite.Selector: com.lidroid.xutils.db.sqlite.Selector expr(java.lang.String,java.lang.String,java.lang.Object)
com.lidroid.xutils.db.sqlite.Selector: com.lidroid.xutils.db.sqlite.DbModelSelector groupBy(java.lang.String)
com.lidroid.xutils.db.sqlite.Selector: com.lidroid.xutils.db.sqlite.DbModelSelector select(java.lang.String[])
com.lidroid.xutils.db.sqlite.Selector: com.lidroid.xutils.db.sqlite.Selector orderBy(java.lang.String)
com.lidroid.xutils.db.sqlite.Selector: com.lidroid.xutils.db.sqlite.Selector orderBy(java.lang.String,boolean)
com.lidroid.xutils.db.sqlite.Selector: com.lidroid.xutils.db.sqlite.Selector limit(int)
com.lidroid.xutils.db.sqlite.Selector: com.lidroid.xutils.db.sqlite.Selector offset(int)
com.lidroid.xutils.db.sqlite.Selector: java.lang.String toString()
com.lidroid.xutils.db.sqlite.Selector: java.lang.Class getEntityType()
com.lidroid.xutils.db.sqlite.Selector$OrderBy
com.lidroid.xutils.db.sqlite.Selector$OrderBy: java.lang.String columnName
com.lidroid.xutils.db.sqlite.Selector$OrderBy: boolean desc
com.lidroid.xutils.db.sqlite.Selector$OrderBy: com.lidroid.xutils.db.sqlite.Selector this$0
com.lidroid.xutils.db.sqlite.Selector$OrderBy: Selector$OrderBy(com.lidroid.xutils.db.sqlite.Selector,java.lang.String)
com.lidroid.xutils.db.sqlite.Selector$OrderBy: Selector$OrderBy(com.lidroid.xutils.db.sqlite.Selector,java.lang.String,boolean)
com.lidroid.xutils.db.sqlite.Selector$OrderBy: java.lang.String toString()
com.lidroid.xutils.db.sqlite.SqlInfo
com.lidroid.xutils.db.sqlite.SqlInfo: java.lang.String sql
com.lidroid.xutils.db.sqlite.SqlInfo: java.util.LinkedList bindArgs
com.lidroid.xutils.db.sqlite.SqlInfo: SqlInfo()
com.lidroid.xutils.db.sqlite.SqlInfo: SqlInfo(java.lang.String)
com.lidroid.xutils.db.sqlite.SqlInfo: SqlInfo(java.lang.String,java.lang.Object[])
com.lidroid.xutils.db.sqlite.SqlInfo: java.lang.String getSql()
com.lidroid.xutils.db.sqlite.SqlInfo: void setSql(java.lang.String)
com.lidroid.xutils.db.sqlite.SqlInfo: java.util.LinkedList getBindArgs()
com.lidroid.xutils.db.sqlite.SqlInfo: java.lang.Object[] getBindArgsAsArray()
com.lidroid.xutils.db.sqlite.SqlInfo: java.lang.String[] getBindArgsAsStrArray()
com.lidroid.xutils.db.sqlite.SqlInfo: void addBindArg(java.lang.Object)
com.lidroid.xutils.db.sqlite.SqlInfo: void addBindArgWithoutConverter(java.lang.Object)
com.lidroid.xutils.db.sqlite.SqlInfo: void addBindArgs(java.lang.Object[])
com.lidroid.xutils.db.sqlite.SqlInfoBuilder
com.lidroid.xutils.db.sqlite.SqlInfoBuilder: SqlInfoBuilder()
com.lidroid.xutils.db.sqlite.SqlInfoBuilder: com.lidroid.xutils.db.sqlite.SqlInfo buildInsertSqlInfo(com.jayqqaa12.abase.core.DbKit,java.lang.Object)
com.lidroid.xutils.db.sqlite.SqlInfoBuilder: com.lidroid.xutils.db.sqlite.SqlInfo buildReplaceSqlInfo(com.jayqqaa12.abase.core.DbKit,java.lang.Object)
com.lidroid.xutils.db.sqlite.SqlInfoBuilder: java.lang.String buildDeleteSqlByTableName(java.lang.String)
com.lidroid.xutils.db.sqlite.SqlInfoBuilder: com.lidroid.xutils.db.sqlite.SqlInfo buildDeleteSqlInfo(java.lang.Object)
com.lidroid.xutils.db.sqlite.SqlInfoBuilder: com.lidroid.xutils.db.sqlite.SqlInfo buildDeleteSqlInfo(java.lang.Class,java.lang.Object)
com.lidroid.xutils.db.sqlite.SqlInfoBuilder: com.lidroid.xutils.db.sqlite.SqlInfo buildDeleteSqlInfo(java.lang.Class,com.lidroid.xutils.db.sqlite.WhereBuilder)
com.lidroid.xutils.db.sqlite.SqlInfoBuilder: com.lidroid.xutils.db.sqlite.SqlInfo buildUpdateSqlInfo(com.jayqqaa12.abase.core.DbKit,java.lang.Object,java.lang.String[])
com.lidroid.xutils.db.sqlite.SqlInfoBuilder: com.lidroid.xutils.db.sqlite.SqlInfo buildUpdateSqlInfo(com.jayqqaa12.abase.core.DbKit,java.lang.Object,com.lidroid.xutils.db.sqlite.WhereBuilder,java.lang.String[])
com.lidroid.xutils.db.sqlite.SqlInfoBuilder: com.lidroid.xutils.db.sqlite.SqlInfo buildCreateTableSqlInfo(java.lang.Class)
com.lidroid.xutils.db.sqlite.SqlInfoBuilder: com.lidroid.xutils.db.table.KeyValue column2KeyValue(java.lang.Object,com.lidroid.xutils.db.table.Column)
com.lidroid.xutils.db.sqlite.SqlInfoBuilder: java.util.List entity2KeyValueList(com.jayqqaa12.abase.core.DbKit,java.lang.Object)
com.lidroid.xutils.db.sqlite.WhereBuilder
com.lidroid.xutils.db.sqlite.WhereBuilder: java.util.List whereItems
com.lidroid.xutils.db.sqlite.WhereBuilder: WhereBuilder()
com.lidroid.xutils.db.sqlite.WhereBuilder: com.lidroid.xutils.db.sqlite.WhereBuilder b()
com.lidroid.xutils.db.sqlite.WhereBuilder: com.lidroid.xutils.db.sqlite.WhereBuilder b(java.lang.String,java.lang.String,java.lang.Object)
com.lidroid.xutils.db.sqlite.WhereBuilder: com.lidroid.xutils.db.sqlite.WhereBuilder and(java.lang.String,java.lang.String,java.lang.Object)
com.lidroid.xutils.db.sqlite.WhereBuilder: com.lidroid.xutils.db.sqlite.WhereBuilder or(java.lang.String,java.lang.String,java.lang.Object)
com.lidroid.xutils.db.sqlite.WhereBuilder: com.lidroid.xutils.db.sqlite.WhereBuilder expr(java.lang.String)
com.lidroid.xutils.db.sqlite.WhereBuilder: com.lidroid.xutils.db.sqlite.WhereBuilder expr(java.lang.String,java.lang.String,java.lang.Object)
com.lidroid.xutils.db.sqlite.WhereBuilder: int getWhereItemSize()
com.lidroid.xutils.db.sqlite.WhereBuilder: java.lang.String toString()
com.lidroid.xutils.db.sqlite.WhereBuilder: void appendCondition(java.lang.String,java.lang.String,java.lang.String,java.lang.Object)
com.lidroid.xutils.db.table.Column
com.lidroid.xutils.db.table.Column: java.lang.String columnName
com.lidroid.xutils.db.table.Column: java.lang.Object defaultValue
com.lidroid.xutils.db.table.Column: java.lang.reflect.Method getMethod
com.lidroid.xutils.db.table.Column: java.lang.reflect.Method setMethod
com.lidroid.xutils.db.table.Column: java.lang.reflect.Field columnField
com.lidroid.xutils.db.table.Column: com.lidroid.xutils.db.converter.ColumnConverter columnConverter
com.lidroid.xutils.db.table.Column: Column(java.lang.Class,java.lang.reflect.Field)
com.lidroid.xutils.db.table.Column: void setValue2Entity(java.lang.Object,android.database.Cursor,int)
com.lidroid.xutils.db.table.Column: java.lang.Object getColumnValue(java.lang.Object)
com.lidroid.xutils.db.table.Column: java.lang.Object getFieldValue(java.lang.Object)
com.lidroid.xutils.db.table.Column: java.lang.String getColumnName()
com.lidroid.xutils.db.table.Column: java.lang.Object getDefaultValue()
com.lidroid.xutils.db.table.Column: java.lang.reflect.Field getColumnField()
com.lidroid.xutils.db.table.Column: com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType()
com.lidroid.xutils.db.table.ColumnUtils
com.lidroid.xutils.db.table.ColumnUtils: java.util.HashSet DB_PRIMITIVE_TYPES
com.lidroid.xutils.db.table.ColumnUtils: void <clinit>()
com.lidroid.xutils.db.table.ColumnUtils: ColumnUtils()
com.lidroid.xutils.db.table.ColumnUtils: boolean isDbPrimitiveType(java.lang.Class)
com.lidroid.xutils.db.table.ColumnUtils: java.lang.reflect.Method getColumnGetMethod(java.lang.Class,java.lang.reflect.Field)
com.lidroid.xutils.db.table.ColumnUtils: java.lang.reflect.Method getColumnSetMethod(java.lang.Class,java.lang.reflect.Field)
com.lidroid.xutils.db.table.ColumnUtils: java.lang.String getColumnNameByField(java.lang.reflect.Field)
com.lidroid.xutils.db.table.ColumnUtils: java.lang.String getForeignColumnNameByField(java.lang.reflect.Field)
com.lidroid.xutils.db.table.ColumnUtils: java.lang.String getColumnDefaultValue(java.lang.reflect.Field)
com.lidroid.xutils.db.table.ColumnUtils: boolean isTransient(java.lang.reflect.Field)
com.lidroid.xutils.db.table.ColumnUtils: boolean isForeign(java.lang.reflect.Field)
com.lidroid.xutils.db.table.ColumnUtils: boolean isFinder(java.lang.reflect.Field)
com.lidroid.xutils.db.table.ColumnUtils: boolean isUnique(java.lang.reflect.Field)
com.lidroid.xutils.db.table.ColumnUtils: boolean isNotNull(java.lang.reflect.Field)
com.lidroid.xutils.db.table.ColumnUtils: java.lang.String getCheck(java.lang.reflect.Field)
com.lidroid.xutils.db.table.ColumnUtils: java.lang.Class getForeignEntityType(com.lidroid.xutils.db.table.Foreign)
com.lidroid.xutils.db.table.ColumnUtils: java.lang.Class getFinderTargetEntityType(com.lidroid.xutils.db.table.Finder)
com.lidroid.xutils.db.table.ColumnUtils: java.lang.Object convert2DbColumnValueIfNeeded(java.lang.Object)
com.lidroid.xutils.db.table.ColumnUtils: boolean isStartWithIs(java.lang.String)
com.lidroid.xutils.db.table.ColumnUtils: java.lang.reflect.Method getBooleanColumnGetMethod(java.lang.Class,java.lang.String)
com.lidroid.xutils.db.table.ColumnUtils: java.lang.reflect.Method getBooleanColumnSetMethod(java.lang.Class,java.lang.reflect.Field)
com.lidroid.xutils.db.table.DbModel
com.lidroid.xutils.db.table.DbModel: java.util.HashMap dataMap
com.lidroid.xutils.db.table.DbModel: DbModel()
com.lidroid.xutils.db.table.DbModel: java.lang.String getString(java.lang.String)
com.lidroid.xutils.db.table.DbModel: int getInt(java.lang.String)
com.lidroid.xutils.db.table.DbModel: boolean getBoolean(java.lang.String)
com.lidroid.xutils.db.table.DbModel: double getDouble(java.lang.String)
com.lidroid.xutils.db.table.DbModel: float getFloat(java.lang.String)
com.lidroid.xutils.db.table.DbModel: long getLong(java.lang.String)
com.lidroid.xutils.db.table.DbModel: java.util.Date getDate(java.lang.String)
com.lidroid.xutils.db.table.DbModel: java.sql.Date getSqlDate(java.lang.String)
com.lidroid.xutils.db.table.DbModel: void add(java.lang.String,java.lang.String)
com.lidroid.xutils.db.table.DbModel: java.util.HashMap getDataMap()
com.lidroid.xutils.db.table.Finder
com.lidroid.xutils.db.table.Finder: com.jayqqaa12.abase.core.DbKit db
com.lidroid.xutils.db.table.Finder: java.lang.String valueColumnName
com.lidroid.xutils.db.table.Finder: java.lang.String targetColumnName
com.lidroid.xutils.db.table.Finder: Finder(java.lang.Class,java.lang.reflect.Field)
com.lidroid.xutils.db.table.Finder: java.lang.Class getTargetEntityType()
com.lidroid.xutils.db.table.Finder: java.lang.String getTargetColumnName()
com.lidroid.xutils.db.table.Finder: void setValue2Entity(java.lang.Object,android.database.Cursor,int)
com.lidroid.xutils.db.table.Finder: java.lang.Object getColumnValue(java.lang.Object)
com.lidroid.xutils.db.table.Finder: java.lang.Object getDefaultValue()
com.lidroid.xutils.db.table.Finder: com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType()
com.lidroid.xutils.db.table.Foreign
com.lidroid.xutils.db.table.Foreign: com.jayqqaa12.abase.core.DbKit db
com.lidroid.xutils.db.table.Foreign: java.lang.String foreignColumnName
com.lidroid.xutils.db.table.Foreign: com.lidroid.xutils.db.converter.ColumnConverter foreignColumnConverter
com.lidroid.xutils.db.table.Foreign: Foreign(java.lang.Class,java.lang.reflect.Field)
com.lidroid.xutils.db.table.Foreign: java.lang.String getForeignColumnName()
com.lidroid.xutils.db.table.Foreign: java.lang.Class getForeignEntityType()
com.lidroid.xutils.db.table.Foreign: void setValue2Entity(java.lang.Object,android.database.Cursor,int)
com.lidroid.xutils.db.table.Foreign: java.lang.Object getColumnValue(java.lang.Object)
com.lidroid.xutils.db.table.Foreign: com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType()
com.lidroid.xutils.db.table.Foreign: java.lang.Object getDefaultValue()
com.lidroid.xutils.db.table.Id
com.lidroid.xutils.db.table.Id: java.lang.String columnFieldClassName
com.lidroid.xutils.db.table.Id: boolean isAutoIncrementChecked
com.lidroid.xutils.db.table.Id: boolean isAutoIncrement
com.lidroid.xutils.db.table.Id: java.util.HashSet INTEGER_TYPES
com.lidroid.xutils.db.table.Id: java.util.HashSet AUTO_INCREMENT_TYPES
com.lidroid.xutils.db.table.Id: void <clinit>()
com.lidroid.xutils.db.table.Id: Id(java.lang.Class,java.lang.reflect.Field)
com.lidroid.xutils.db.table.Id: boolean isAutoIncrement()
com.lidroid.xutils.db.table.Id: void setAutoIncrementId(java.lang.Object,long)
com.lidroid.xutils.db.table.Id: java.lang.Object getColumnValue(java.lang.Object)
com.lidroid.xutils.db.table.KeyValue
com.lidroid.xutils.db.table.KeyValue: java.lang.String key
com.lidroid.xutils.db.table.KeyValue: java.lang.Object value
com.lidroid.xutils.db.table.KeyValue: KeyValue(java.lang.String,java.lang.Object)
com.lidroid.xutils.db.table.KeyValue: java.lang.String getKey()
com.lidroid.xutils.db.table.KeyValue: java.lang.Object getValue()
com.lidroid.xutils.db.table.Table
com.lidroid.xutils.db.table.Table: java.lang.String tableName
com.lidroid.xutils.db.table.Table: com.lidroid.xutils.db.table.Id id
com.lidroid.xutils.db.table.Table: java.util.HashMap columnMap
com.lidroid.xutils.db.table.Table: java.util.HashMap tableMap
com.lidroid.xutils.db.table.Table: boolean checkedDatabase
com.lidroid.xutils.db.table.Table: void <clinit>()
com.lidroid.xutils.db.table.Table: Table(java.lang.Class)
com.lidroid.xutils.db.table.Table: com.lidroid.xutils.db.table.Table get(com.jayqqaa12.abase.core.DbKit,java.lang.Class)
com.lidroid.xutils.db.table.Table: void remove(com.jayqqaa12.abase.core.DbKit,java.lang.Class)
com.lidroid.xutils.db.table.Table: void remove(com.jayqqaa12.abase.core.DbKit,java.lang.String)
com.lidroid.xutils.db.table.Table: java.lang.String getTableName()
com.lidroid.xutils.db.table.Table: com.lidroid.xutils.db.table.Id getId()
com.lidroid.xutils.db.table.Table: boolean isCheckedDatabase()
com.lidroid.xutils.db.table.Table: void setCheckedDatabase(boolean)
com.lidroid.xutils.db.table.TableUtils
com.lidroid.xutils.db.table.TableUtils: java.util.concurrent.ConcurrentHashMap entityColumnsMap
com.lidroid.xutils.db.table.TableUtils: java.util.concurrent.ConcurrentHashMap entityIdMap
com.lidroid.xutils.db.table.TableUtils: void <clinit>()
com.lidroid.xutils.db.table.TableUtils: TableUtils()
com.lidroid.xutils.db.table.TableUtils: java.lang.String getTableName(java.lang.Class)
com.lidroid.xutils.db.table.TableUtils: java.lang.String getExecAfterTableCreated(java.lang.Class)
com.lidroid.xutils.db.table.TableUtils: java.util.HashMap getColumnMap(java.lang.Class)
com.lidroid.xutils.db.table.TableUtils: void addColumns2Map(java.lang.Class,java.lang.String,java.util.HashMap)
com.lidroid.xutils.db.table.TableUtils: com.lidroid.xutils.db.table.Column getColumnOrId(java.lang.Class,java.lang.String)
com.lidroid.xutils.db.table.TableUtils: com.lidroid.xutils.db.table.Column getColumnOrId(java.lang.Class,java.lang.reflect.Field)
com.lidroid.xutils.db.table.TableUtils: com.lidroid.xutils.db.table.Id getId(java.lang.Class)
com.lidroid.xutils.db.table.TableUtils: java.lang.String getPrimaryKeyFieldName(java.lang.Class)
com.lidroid.xutils.db.table.TableUtils: java.lang.String getPrimaryKeyColumnName(java.lang.Class)
com.lidroid.xutils.exception.BaseException
com.lidroid.xutils.exception.BaseException: long serialVersionUID
com.lidroid.xutils.exception.BaseException: BaseException()
com.lidroid.xutils.exception.BaseException: BaseException(java.lang.String)
com.lidroid.xutils.exception.BaseException: BaseException(java.lang.String,java.lang.Throwable)
com.lidroid.xutils.exception.BaseException: BaseException(java.lang.Throwable)
com.lidroid.xutils.exception.DbException
com.lidroid.xutils.exception.DbException: long serialVersionUID
com.lidroid.xutils.exception.DbException: DbException()
com.lidroid.xutils.exception.DbException: DbException(java.lang.String)
com.lidroid.xutils.exception.DbException: DbException(java.lang.String,java.lang.Throwable)
com.lidroid.xutils.exception.DbException: DbException(java.lang.Throwable)
com.lidroid.xutils.exception.HttpException
com.lidroid.xutils.exception.HttpException: long serialVersionUID
com.lidroid.xutils.exception.HttpException: int exceptionCode
com.lidroid.xutils.exception.HttpException: HttpException()
com.lidroid.xutils.exception.HttpException: HttpException(java.lang.String)
com.lidroid.xutils.exception.HttpException: HttpException(java.lang.String,java.lang.Throwable)
com.lidroid.xutils.exception.HttpException: HttpException(java.lang.Throwable)
com.lidroid.xutils.exception.HttpException: HttpException(int)
com.lidroid.xutils.exception.HttpException: HttpException(int,java.lang.String)
com.lidroid.xutils.exception.HttpException: HttpException(int,java.lang.String,java.lang.Throwable)
com.lidroid.xutils.exception.HttpException: HttpException(int,java.lang.Throwable)
com.lidroid.xutils.exception.HttpException: int getExceptionCode()
com.lidroid.xutils.http.HttpCache
com.lidroid.xutils.http.HttpCache: com.lidroid.xutils.util.core.LruMemoryCache mMemoryCache
com.lidroid.xutils.http.HttpCache: int DEFAULT_CACHE_SIZE
com.lidroid.xutils.http.HttpCache: long DEFAULT_EXPIRY_TIME
com.lidroid.xutils.http.HttpCache: int cacheSize
com.lidroid.xutils.http.HttpCache: long defaultExpiryTime
com.lidroid.xutils.http.HttpCache: java.util.concurrent.ConcurrentHashMap httpMethod_enabled_map
com.lidroid.xutils.http.HttpCache: void <clinit>()
com.lidroid.xutils.http.HttpCache: HttpCache()
com.lidroid.xutils.http.HttpCache: HttpCache(int,long)
com.lidroid.xutils.http.HttpCache: void setCacheSize(int)
com.lidroid.xutils.http.HttpCache: void setDefaultExpiryTime(long)
com.lidroid.xutils.http.HttpCache: long getDefaultExpiryTime()
com.lidroid.xutils.http.HttpCache: void put(java.lang.String,java.lang.String)
com.lidroid.xutils.http.HttpCache: void put(java.lang.String,java.lang.String,long)
com.lidroid.xutils.http.HttpCache: java.lang.String get(java.lang.String)
com.lidroid.xutils.http.HttpCache: void clear()
com.lidroid.xutils.http.HttpCache: boolean isEnabled(com.lidroid.xutils.http.client.HttpRequest$HttpMethod)
com.lidroid.xutils.http.HttpCache: boolean isEnabled(java.lang.String)
com.lidroid.xutils.http.HttpCache: void setEnabled(com.lidroid.xutils.http.client.HttpRequest$HttpMethod,boolean)
com.lidroid.xutils.http.HttpCache$1
com.lidroid.xutils.http.HttpCache$1: com.lidroid.xutils.http.HttpCache this$0
com.lidroid.xutils.http.HttpCache$1: HttpCache$1(com.lidroid.xutils.http.HttpCache,int)
com.lidroid.xutils.http.HttpCache$1: int sizeOf(java.lang.String,java.lang.String)
com.lidroid.xutils.http.HttpCache$1: int sizeOf(java.lang.Object,java.lang.Object)
com.lidroid.xutils.http.HttpHandler
com.lidroid.xutils.http.HttpHandler: org.apache.http.impl.client.AbstractHttpClient client
com.lidroid.xutils.http.HttpHandler: org.apache.http.protocol.HttpContext context
com.lidroid.xutils.http.HttpHandler: com.lidroid.xutils.http.callback.StringDownloadHandler mStringDownloadHandler
com.lidroid.xutils.http.HttpHandler: com.lidroid.xutils.http.callback.FileDownloadHandler mFileDownloadHandler
com.lidroid.xutils.http.HttpHandler: com.lidroid.xutils.http.callback.HttpRedirectHandler httpRedirectHandler
com.lidroid.xutils.http.HttpHandler: java.lang.String requestUrl
com.lidroid.xutils.http.HttpHandler: java.lang.String requestMethod
com.lidroid.xutils.http.HttpHandler: org.apache.http.client.methods.HttpRequestBase request
com.lidroid.xutils.http.HttpHandler: boolean isUploading
com.lidroid.xutils.http.HttpHandler: com.lidroid.xutils.http.callback.RequestCallBack callback
com.lidroid.xutils.http.HttpHandler: int retriedCount
com.lidroid.xutils.http.HttpHandler: java.lang.String fileSavePath
com.lidroid.xutils.http.HttpHandler: boolean isDownloadingFile
com.lidroid.xutils.http.HttpHandler: boolean autoResume
com.lidroid.xutils.http.HttpHandler: boolean autoRename
com.lidroid.xutils.http.HttpHandler: java.lang.String charset
com.lidroid.xutils.http.HttpHandler: int expiry
com.lidroid.xutils.http.HttpHandler: long totalLenth
com.lidroid.xutils.http.HttpHandler: com.lidroid.xutils.http.HttpHandler$State state
com.lidroid.xutils.http.HttpHandler: int UPDATE_START
com.lidroid.xutils.http.HttpHandler: int UPDATE_LOADING
com.lidroid.xutils.http.HttpHandler: int UPDATE_FAILURE
com.lidroid.xutils.http.HttpHandler: int UPDATE_SUCCESS
com.lidroid.xutils.http.HttpHandler: long lastUpdateTime
com.lidroid.xutils.http.HttpHandler: com.lidroid.xutils.http.HttpHandler$NotUseApacheRedirectHandler notUseApacheRedirectHandler
com.lidroid.xutils.http.HttpHandler: void <clinit>()
com.lidroid.xutils.http.HttpHandler: void setHttpRedirectHandler(com.lidroid.xutils.http.callback.HttpRedirectHandler)
com.lidroid.xutils.http.HttpHandler: HttpHandler(org.apache.http.impl.client.AbstractHttpClient,org.apache.http.protocol.HttpContext,java.lang.String,com.lidroid.xutils.http.callback.RequestCallBack)
com.lidroid.xutils.http.HttpHandler: HttpHandler(org.apache.http.impl.client.AbstractHttpClient,org.apache.http.protocol.HttpContext,java.lang.String,long,com.lidroid.xutils.http.callback.RequestCallBack)
com.lidroid.xutils.http.HttpHandler: com.lidroid.xutils.http.HttpHandler$State getState()
com.lidroid.xutils.http.HttpHandler: void setTotalLength(long)
com.lidroid.xutils.http.HttpHandler: void setExpiry(int)
com.lidroid.xutils.http.HttpHandler: void setRequestCallBack(com.lidroid.xutils.http.callback.RequestCallBack)
com.lidroid.xutils.http.HttpHandler: com.lidroid.xutils.http.callback.RequestCallBack getRequestCallBack()
com.lidroid.xutils.http.HttpHandler: com.lidroid.xutils.http.ResponseInfo sendRequest(org.apache.http.client.methods.HttpRequestBase)
com.lidroid.xutils.http.HttpHandler: java.lang.Void doInBackground(java.lang.Object[])
com.lidroid.xutils.http.HttpHandler: void onProgressUpdate(java.lang.Object[])
com.lidroid.xutils.http.HttpHandler: com.lidroid.xutils.http.ResponseInfo handleResponse(org.apache.http.HttpResponse)
com.lidroid.xutils.http.HttpHandler: void stop()
com.lidroid.xutils.http.HttpHandler: boolean isStopped()
com.lidroid.xutils.http.HttpHandler: boolean updateProgress(long,long,boolean)
com.lidroid.xutils.http.HttpHandler: java.lang.Object doInBackground(java.lang.Object[])
com.lidroid.xutils.http.HttpHandler$NotUseApacheRedirectHandler
com.lidroid.xutils.http.HttpHandler$NotUseApacheRedirectHandler: HttpHandler$NotUseApacheRedirectHandler()
com.lidroid.xutils.http.HttpHandler$NotUseApacheRedirectHandler: boolean isRedirectRequested(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)
com.lidroid.xutils.http.HttpHandler$NotUseApacheRedirectHandler: java.net.URI getLocationURI(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)
com.lidroid.xutils.http.HttpHandler$NotUseApacheRedirectHandler: HttpHandler$NotUseApacheRedirectHandler(com.lidroid.xutils.http.HttpHandler$NotUseApacheRedirectHandler)
com.lidroid.xutils.http.HttpHandler$State
com.lidroid.xutils.http.HttpHandler$State: com.lidroid.xutils.http.HttpHandler$State WAITING
com.lidroid.xutils.http.HttpHandler$State: com.lidroid.xutils.http.HttpHandler$State STARTED
com.lidroid.xutils.http.HttpHandler$State: com.lidroid.xutils.http.HttpHandler$State LOADING
com.lidroid.xutils.http.HttpHandler$State: com.lidroid.xutils.http.HttpHandler$State FAILURE
com.lidroid.xutils.http.HttpHandler$State: com.lidroid.xutils.http.HttpHandler$State STOPPED
com.lidroid.xutils.http.HttpHandler$State: com.lidroid.xutils.http.HttpHandler$State SUCCESS
com.lidroid.xutils.http.HttpHandler$State: int value
com.lidroid.xutils.http.HttpHandler$State: com.lidroid.xutils.http.HttpHandler$State[] ENUM$VALUES
com.lidroid.xutils.http.HttpHandler$State: void <clinit>()
com.lidroid.xutils.http.HttpHandler$State: HttpHandler$State(java.lang.String,int,int)
com.lidroid.xutils.http.HttpHandler$State: com.lidroid.xutils.http.HttpHandler$State valueOf(int)
com.lidroid.xutils.http.HttpHandler$State: int value()
com.lidroid.xutils.http.HttpHandler$State: com.lidroid.xutils.http.HttpHandler$State[] values()
com.lidroid.xutils.http.HttpHandler$State: com.lidroid.xutils.http.HttpHandler$State valueOf(java.lang.String)
com.lidroid.xutils.http.RequestParams
com.lidroid.xutils.http.RequestParams: java.lang.String charset
com.lidroid.xutils.http.RequestParams: java.util.List headers
com.lidroid.xutils.http.RequestParams: java.util.List queryStringParams
com.lidroid.xutils.http.RequestParams: org.apache.http.HttpEntity bodyEntity
com.lidroid.xutils.http.RequestParams: java.util.List bodyParams
com.lidroid.xutils.http.RequestParams: java.util.HashMap fileParams
com.lidroid.xutils.http.RequestParams: RequestParams()
com.lidroid.xutils.http.RequestParams: RequestParams(java.lang.String)
com.lidroid.xutils.http.RequestParams: java.lang.String getCharset()
com.lidroid.xutils.http.RequestParams: void setContentType(java.lang.String)
com.lidroid.xutils.http.RequestParams: void addHeader(org.apache.http.Header)
com.lidroid.xutils.http.RequestParams: void addHeader(java.lang.String,java.lang.String)
com.lidroid.xutils.http.RequestParams: void addHeaders(java.util.List)
com.lidroid.xutils.http.RequestParams: void setHeader(org.apache.http.Header)
com.lidroid.xutils.http.RequestParams: void setHeader(java.lang.String,java.lang.String)
com.lidroid.xutils.http.RequestParams: void setHeaders(java.util.List)
com.lidroid.xutils.http.RequestParams: void addQueryStringParameter(java.lang.String,java.lang.String)
com.lidroid.xutils.http.RequestParams: void addQueryStringParameter(org.apache.http.NameValuePair)
com.lidroid.xutils.http.RequestParams: void addQueryStringParameter(java.util.List)
com.lidroid.xutils.http.RequestParams: void addBodyParameter(java.lang.String,java.lang.String)
com.lidroid.xutils.http.RequestParams: void addBodyParameter(org.apache.http.NameValuePair)
com.lidroid.xutils.http.RequestParams: void addBodyParameter(java.util.List)
com.lidroid.xutils.http.RequestParams: void addBodyParameter(java.lang.String,java.io.File)
com.lidroid.xutils.http.RequestParams: void addBodyParameter(java.lang.String,java.io.File,java.lang.String)
com.lidroid.xutils.http.RequestParams: void addBodyParameter(java.lang.String,java.io.File,java.lang.String,java.lang.String)
com.lidroid.xutils.http.RequestParams: void addBodyParameter(java.lang.String,java.io.File,java.lang.String,java.lang.String,java.lang.String)
com.lidroid.xutils.http.RequestParams: void addBodyParameter(java.lang.String,java.io.InputStream,long)
com.lidroid.xutils.http.RequestParams: void addBodyParameter(java.lang.String,java.io.InputStream,long,java.lang.String)
com.lidroid.xutils.http.RequestParams: void addBodyParameter(java.lang.String,java.io.InputStream,long,java.lang.String,java.lang.String)
com.lidroid.xutils.http.RequestParams: void setBodyEntity(org.apache.http.HttpEntity)
com.lidroid.xutils.http.RequestParams: org.apache.http.HttpEntity getEntity()
com.lidroid.xutils.http.RequestParams: java.util.List getQueryStringParams()
com.lidroid.xutils.http.RequestParams: java.util.List getHeaders()
com.lidroid.xutils.http.RequestParams$HeaderItem
com.lidroid.xutils.http.RequestParams$HeaderItem: boolean overwrite
com.lidroid.xutils.http.RequestParams$HeaderItem: org.apache.http.Header header
com.lidroid.xutils.http.RequestParams$HeaderItem: com.lidroid.xutils.http.RequestParams this$0
com.lidroid.xutils.http.RequestParams$HeaderItem: RequestParams$HeaderItem(com.lidroid.xutils.http.RequestParams,org.apache.http.Header)
com.lidroid.xutils.http.RequestParams$HeaderItem: RequestParams$HeaderItem(com.lidroid.xutils.http.RequestParams,org.apache.http.Header,boolean)
com.lidroid.xutils.http.RequestParams$HeaderItem: RequestParams$HeaderItem(com.lidroid.xutils.http.RequestParams,java.lang.String,java.lang.String)
com.lidroid.xutils.http.RequestParams$HeaderItem: RequestParams$HeaderItem(com.lidroid.xutils.http.RequestParams,java.lang.String,java.lang.String,boolean)
com.lidroid.xutils.http.ResponseInfo
com.lidroid.xutils.http.ResponseInfo: org.apache.http.HttpResponse response
com.lidroid.xutils.http.ResponseInfo: java.lang.Object result
com.lidroid.xutils.http.ResponseInfo: boolean resultFormCache
com.lidroid.xutils.http.ResponseInfo: java.util.Locale locale
com.lidroid.xutils.http.ResponseInfo: int statusCode
com.lidroid.xutils.http.ResponseInfo: org.apache.http.ProtocolVersion protocolVersion
com.lidroid.xutils.http.ResponseInfo: java.lang.String reasonPhrase
com.lidroid.xutils.http.ResponseInfo: long contentLength
com.lidroid.xutils.http.ResponseInfo: org.apache.http.Header contentType
com.lidroid.xutils.http.ResponseInfo: org.apache.http.Header contentEncoding
com.lidroid.xutils.http.ResponseInfo: org.apache.http.Header[] getAllHeaders()
com.lidroid.xutils.http.ResponseInfo: org.apache.http.Header[] getHeaders(java.lang.String)
com.lidroid.xutils.http.ResponseInfo: org.apache.http.Header getFirstHeader(java.lang.String)
com.lidroid.xutils.http.ResponseInfo: org.apache.http.Header getLastHeader(java.lang.String)
com.lidroid.xutils.http.ResponseInfo: ResponseInfo(org.apache.http.HttpResponse,java.lang.Object,boolean)
com.lidroid.xutils.http.ResponseStream
com.lidroid.xutils.http.ResponseStream: org.apache.http.HttpResponse baseResponse
com.lidroid.xutils.http.ResponseStream: java.io.InputStream baseStream
com.lidroid.xutils.http.ResponseStream: java.lang.String charset
com.lidroid.xutils.http.ResponseStream: java.lang.String requestUrl
com.lidroid.xutils.http.ResponseStream: java.lang.String requestMethod
com.lidroid.xutils.http.ResponseStream: int expiry
com.lidroid.xutils.http.ResponseStream: java.lang.String _directResult
com.lidroid.xutils.http.ResponseStream: ResponseStream(org.apache.http.HttpResponse,java.lang.String,int)
com.lidroid.xutils.http.ResponseStream: ResponseStream(org.apache.http.HttpResponse,java.lang.String,java.lang.String,int)
com.lidroid.xutils.http.ResponseStream: ResponseStream(java.lang.String)
com.lidroid.xutils.http.ResponseStream: java.lang.String getRequestUrl()
com.lidroid.xutils.http.ResponseStream: java.lang.String getRequestMethod()
com.lidroid.xutils.http.ResponseStream: void setRequestMethod(java.lang.String)
com.lidroid.xutils.http.ResponseStream: java.io.InputStream getBaseStream()
com.lidroid.xutils.http.ResponseStream: org.apache.http.HttpResponse getBaseResponse()
com.lidroid.xutils.http.ResponseStream: int getStatusCode()
com.lidroid.xutils.http.ResponseStream: java.util.Locale getLocale()
com.lidroid.xutils.http.ResponseStream: java.lang.String getReasonPhrase()
com.lidroid.xutils.http.ResponseStream: java.lang.String readString()
com.lidroid.xutils.http.ResponseStream: void readFile(java.lang.String)
com.lidroid.xutils.http.ResponseStream: int read()
com.lidroid.xutils.http.ResponseStream: int available()
com.lidroid.xutils.http.ResponseStream: void close()
com.lidroid.xutils.http.ResponseStream: void mark(int)
com.lidroid.xutils.http.ResponseStream: boolean markSupported()
com.lidroid.xutils.http.ResponseStream: int read(byte[])
com.lidroid.xutils.http.ResponseStream: int read(byte[],int,int)
com.lidroid.xutils.http.ResponseStream: void reset()
com.lidroid.xutils.http.ResponseStream: long skip(long)
com.lidroid.xutils.http.SyncHttpHandler
com.lidroid.xutils.http.SyncHttpHandler: org.apache.http.impl.client.AbstractHttpClient client
com.lidroid.xutils.http.SyncHttpHandler: org.apache.http.protocol.HttpContext context
com.lidroid.xutils.http.SyncHttpHandler: com.lidroid.xutils.http.callback.HttpRedirectHandler httpRedirectHandler
com.lidroid.xutils.http.SyncHttpHandler: java.lang.String requestUrl
com.lidroid.xutils.http.SyncHttpHandler: java.lang.String requestMethod
com.lidroid.xutils.http.SyncHttpHandler: java.lang.String charset
com.lidroid.xutils.http.SyncHttpHandler: int retriedTimes
com.lidroid.xutils.http.SyncHttpHandler: int expiry
com.lidroid.xutils.http.SyncHttpHandler: void setHttpRedirectHandler(com.lidroid.xutils.http.callback.HttpRedirectHandler)
com.lidroid.xutils.http.SyncHttpHandler: SyncHttpHandler(org.apache.http.impl.client.AbstractHttpClient,org.apache.http.protocol.HttpContext,java.lang.String)
com.lidroid.xutils.http.SyncHttpHandler: void setExpiry(int)
com.lidroid.xutils.http.SyncHttpHandler: com.lidroid.xutils.http.ResponseStream sendRequest(org.apache.http.client.methods.HttpRequestBase)
com.lidroid.xutils.http.SyncHttpHandler: com.lidroid.xutils.http.ResponseStream handleResponse(org.apache.http.HttpResponse)
com.lidroid.xutils.http.callback.DefaultHttpRedirectHandler
com.lidroid.xutils.http.callback.DefaultHttpRedirectHandler: DefaultHttpRedirectHandler()
com.lidroid.xutils.http.callback.DefaultHttpRedirectHandler: org.apache.http.client.methods.HttpRequestBase getDirectRequest(org.apache.http.HttpResponse)
com.lidroid.xutils.http.callback.FileDownloadHandler
com.lidroid.xutils.http.callback.FileDownloadHandler: FileDownloadHandler()
com.lidroid.xutils.http.callback.FileDownloadHandler: java.io.File handleEntity(org.apache.http.HttpEntity,com.lidroid.xutils.http.callback.RequestCallBackHandler,java.lang.String,boolean,java.lang.String)
com.lidroid.xutils.http.callback.HttpRedirectHandler
com.lidroid.xutils.http.callback.HttpRedirectHandler: org.apache.http.client.methods.HttpRequestBase getDirectRequest(org.apache.http.HttpResponse)
com.lidroid.xutils.http.callback.RequestCallBack
com.lidroid.xutils.http.callback.RequestCallBack: int DEFAULT_RATE
com.lidroid.xutils.http.callback.RequestCallBack: int MIN_RATE
com.lidroid.xutils.http.callback.RequestCallBack: java.lang.String requestUrl
com.lidroid.xutils.http.callback.RequestCallBack: java.lang.Object userTag
com.lidroid.xutils.http.callback.RequestCallBack: int rate
com.lidroid.xutils.http.callback.RequestCallBack: RequestCallBack()
com.lidroid.xutils.http.callback.RequestCallBack: RequestCallBack(int)
com.lidroid.xutils.http.callback.RequestCallBack: RequestCallBack(java.lang.Object)
com.lidroid.xutils.http.callback.RequestCallBack: RequestCallBack(int,java.lang.Object)
com.lidroid.xutils.http.callback.RequestCallBack: int getRate()
com.lidroid.xutils.http.callback.RequestCallBack: void setRate(int)
com.lidroid.xutils.http.callback.RequestCallBack: java.lang.Object getUserTag()
com.lidroid.xutils.http.callback.RequestCallBack: void setUserTag(java.lang.Object)
com.lidroid.xutils.http.callback.RequestCallBack: java.lang.String getRequestUrl()
com.lidroid.xutils.http.callback.RequestCallBack: void setRequestUrl(java.lang.String)
com.lidroid.xutils.http.callback.RequestCallBack: void onStart()
com.lidroid.xutils.http.callback.RequestCallBack: void onStopped()
com.lidroid.xutils.http.callback.RequestCallBack: void onLoading(long,long,boolean)
com.lidroid.xutils.http.callback.RequestCallBack: void onSuccess(com.lidroid.xutils.http.ResponseInfo)
com.lidroid.xutils.http.callback.RequestCallBack: void onFailure(com.lidroid.xutils.exception.HttpException,java.lang.String)
com.lidroid.xutils.http.callback.RequestCallBackHandler
com.lidroid.xutils.http.callback.RequestCallBackHandler: boolean updateProgress(long,long,boolean)
com.lidroid.xutils.http.callback.StringDownloadHandler
com.lidroid.xutils.http.callback.StringDownloadHandler: StringDownloadHandler()
com.lidroid.xutils.http.callback.StringDownloadHandler: java.lang.String handleEntity(org.apache.http.HttpEntity,com.lidroid.xutils.http.callback.RequestCallBackHandler,java.lang.String)
com.lidroid.xutils.http.client.DefaultSSLSocketFactory
com.lidroid.xutils.http.client.DefaultSSLSocketFactory: javax.net.ssl.SSLContext sslContext
com.lidroid.xutils.http.client.DefaultSSLSocketFactory: java.security.KeyStore trustStore
com.lidroid.xutils.http.client.DefaultSSLSocketFactory: com.lidroid.xutils.http.client.DefaultSSLSocketFactory instance
com.lidroid.xutils.http.client.DefaultSSLSocketFactory: void <clinit>()
com.lidroid.xutils.http.client.DefaultSSLSocketFactory: com.lidroid.xutils.http.client.DefaultSSLSocketFactory getSocketFactory()
com.lidroid.xutils.http.client.DefaultSSLSocketFactory: DefaultSSLSocketFactory()
com.lidroid.xutils.http.client.DefaultSSLSocketFactory: java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean)
com.lidroid.xutils.http.client.DefaultSSLSocketFactory: java.net.Socket createSocket()
com.lidroid.xutils.http.client.DefaultSSLSocketFactory: org.apache.http.conn.ssl.SSLSocketFactory getSocketFactory()
com.lidroid.xutils.http.client.DefaultSSLSocketFactory$1
com.lidroid.xutils.http.client.DefaultSSLSocketFactory$1: com.lidroid.xutils.http.client.DefaultSSLSocketFactory this$0
com.lidroid.xutils.http.client.DefaultSSLSocketFactory$1: DefaultSSLSocketFactory$1(com.lidroid.xutils.http.client.DefaultSSLSocketFactory)
com.lidroid.xutils.http.client.DefaultSSLSocketFactory$1: java.security.cert.X509Certificate[] getAcceptedIssuers()
com.lidroid.xutils.http.client.DefaultSSLSocketFactory$1: void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String)
com.lidroid.xutils.http.client.DefaultSSLSocketFactory$1: void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String)
com.lidroid.xutils.http.client.HttpRequest
com.lidroid.xutils.http.client.HttpRequest: org.apache.http.HttpEntity entity
com.lidroid.xutils.http.client.HttpRequest: com.lidroid.xutils.http.client.HttpRequest$HttpMethod method
com.lidroid.xutils.http.client.HttpRequest: com.lidroid.xutils.http.client.util.URIBuilder uriBuilder
com.lidroid.xutils.http.client.HttpRequest: java.nio.charset.Charset uriCharset
com.lidroid.xutils.http.client.HttpRequest: HttpRequest(com.lidroid.xutils.http.client.HttpRequest$HttpMethod)
com.lidroid.xutils.http.client.HttpRequest: HttpRequest(com.lidroid.xutils.http.client.HttpRequest$HttpMethod,java.lang.String)
com.lidroid.xutils.http.client.HttpRequest: HttpRequest(com.lidroid.xutils.http.client.HttpRequest$HttpMethod,java.net.URI)
com.lidroid.xutils.http.client.HttpRequest: com.lidroid.xutils.http.client.HttpRequest addQueryStringParameter(java.lang.String,java.lang.String)
com.lidroid.xutils.http.client.HttpRequest: com.lidroid.xutils.http.client.HttpRequest addQueryStringParameter(org.apache.http.NameValuePair)
com.lidroid.xutils.http.client.HttpRequest: com.lidroid.xutils.http.client.HttpRequest addQueryStringParams(java.util.List)
com.lidroid.xutils.http.client.HttpRequest: void setRequestParams(com.lidroid.xutils.http.RequestParams)
com.lidroid.xutils.http.client.HttpRequest: void setRequestParams(com.lidroid.xutils.http.RequestParams,com.lidroid.xutils.http.callback.RequestCallBackHandler)
com.lidroid.xutils.http.client.HttpRequest: java.net.URI getURI()
com.lidroid.xutils.http.client.HttpRequest: void setURI(java.net.URI)
com.lidroid.xutils.http.client.HttpRequest: void setURI(java.lang.String)
com.lidroid.xutils.http.client.HttpRequest: java.lang.String getMethod()
com.lidroid.xutils.http.client.HttpRequest: org.apache.http.HttpEntity getEntity()
com.lidroid.xutils.http.client.HttpRequest: void setEntity(org.apache.http.HttpEntity)
com.lidroid.xutils.http.client.HttpRequest: boolean expectContinue()
com.lidroid.xutils.http.client.HttpRequest: java.lang.Object clone()
com.lidroid.xutils.http.client.HttpRequest$HttpMethod
com.lidroid.xutils.http.client.HttpRequest$HttpMethod: com.lidroid.xutils.http.client.HttpRequest$HttpMethod GET
com.lidroid.xutils.http.client.HttpRequest$HttpMethod: com.lidroid.xutils.http.client.HttpRequest$HttpMethod POST
com.lidroid.xutils.http.client.HttpRequest$HttpMethod: com.lidroid.xutils.http.client.HttpRequest$HttpMethod PUT
com.lidroid.xutils.http.client.HttpRequest$HttpMethod: com.lidroid.xutils.http.client.HttpRequest$HttpMethod HEAD
com.lidroid.xutils.http.client.HttpRequest$HttpMethod: com.lidroid.xutils.http.client.HttpRequest$HttpMethod MOVE
com.lidroid.xutils.http.client.HttpRequest$HttpMethod: com.lidroid.xutils.http.client.HttpRequest$HttpMethod COPY
com.lidroid.xutils.http.client.HttpRequest$HttpMethod: com.lidroid.xutils.http.client.HttpRequest$HttpMethod DELETE
com.lidroid.xutils.http.client.HttpRequest$HttpMethod: com.lidroid.xutils.http.client.HttpRequest$HttpMethod OPTIONS
com.lidroid.xutils.http.client.HttpRequest$HttpMethod: com.lidroid.xutils.http.client.HttpRequest$HttpMethod TRACE
com.lidroid.xutils.http.client.HttpRequest$HttpMethod: com.lidroid.xutils.http.client.HttpRequest$HttpMethod CONNECT
com.lidroid.xutils.http.client.HttpRequest$HttpMethod: java.lang.String value
com.lidroid.xutils.http.client.HttpRequest$HttpMethod: com.lidroid.xutils.http.client.HttpRequest$HttpMethod[] ENUM$VALUES
com.lidroid.xutils.http.client.HttpRequest$HttpMethod: void <clinit>()
com.lidroid.xutils.http.client.HttpRequest$HttpMethod: HttpRequest$HttpMethod(java.lang.String,int,java.lang.String)
com.lidroid.xutils.http.client.HttpRequest$HttpMethod: java.lang.String toString()
com.lidroid.xutils.http.client.HttpRequest$HttpMethod: com.lidroid.xutils.http.client.HttpRequest$HttpMethod[] values()
com.lidroid.xutils.http.client.HttpRequest$HttpMethod: com.lidroid.xutils.http.client.HttpRequest$HttpMethod valueOf(java.lang.String)
com.lidroid.xutils.http.client.RetryHandler
com.lidroid.xutils.http.client.RetryHandler: int RETRY_SLEEP_INTERVAL
com.lidroid.xutils.http.client.RetryHandler: java.util.HashSet exceptionWhiteList
com.lidroid.xutils.http.client.RetryHandler: java.util.HashSet exceptionBlackList
com.lidroid.xutils.http.client.RetryHandler: int maxRetries
com.lidroid.xutils.http.client.RetryHandler: void <clinit>()
com.lidroid.xutils.http.client.RetryHandler: RetryHandler(int)
com.lidroid.xutils.http.client.RetryHandler: boolean retryRequest(java.io.IOException,int,org.apache.http.protocol.HttpContext)
com.lidroid.xutils.http.client.entity.BodyParamsEntity
com.lidroid.xutils.http.client.entity.BodyParamsEntity: byte[] content
com.lidroid.xutils.http.client.entity.BodyParamsEntity: boolean dirty
com.lidroid.xutils.http.client.entity.BodyParamsEntity: java.lang.String charset
com.lidroid.xutils.http.client.entity.BodyParamsEntity: java.util.List params
com.lidroid.xutils.http.client.entity.BodyParamsEntity: BodyParamsEntity()
com.lidroid.xutils.http.client.entity.BodyParamsEntity: BodyParamsEntity(java.lang.String)
com.lidroid.xutils.http.client.entity.BodyParamsEntity: BodyParamsEntity(java.util.List)
com.lidroid.xutils.http.client.entity.BodyParamsEntity: BodyParamsEntity(java.util.List,java.lang.String)
com.lidroid.xutils.http.client.entity.BodyParamsEntity: com.lidroid.xutils.http.client.entity.BodyParamsEntity addParameter(java.lang.String,java.lang.String)
com.lidroid.xutils.http.client.entity.BodyParamsEntity: com.lidroid.xutils.http.client.entity.BodyParamsEntity addParams(java.util.List)
com.lidroid.xutils.http.client.entity.BodyParamsEntity: void refreshContent()
com.lidroid.xutils.http.client.entity.BodyParamsEntity: boolean isRepeatable()
com.lidroid.xutils.http.client.entity.BodyParamsEntity: long getContentLength()
com.lidroid.xutils.http.client.entity.BodyParamsEntity: java.io.InputStream getContent()
com.lidroid.xutils.http.client.entity.BodyParamsEntity: void writeTo(java.io.OutputStream)
com.lidroid.xutils.http.client.entity.BodyParamsEntity: boolean isStreaming()
com.lidroid.xutils.http.client.entity.BodyParamsEntity: java.lang.Object clone()
com.lidroid.xutils.http.client.entity.DecompressingEntity
com.lidroid.xutils.http.client.entity.DecompressingEntity: java.io.InputStream content
com.lidroid.xutils.http.client.entity.DecompressingEntity: long uncompressedLength
com.lidroid.xutils.http.client.entity.DecompressingEntity: long uploadedSize
com.lidroid.xutils.http.client.entity.DecompressingEntity: com.lidroid.xutils.http.callback.RequestCallBackHandler callBackHandler
com.lidroid.xutils.http.client.entity.DecompressingEntity: DecompressingEntity(org.apache.http.HttpEntity)
com.lidroid.xutils.http.client.entity.DecompressingEntity: java.io.InputStream decorate(java.io.InputStream)
com.lidroid.xutils.http.client.entity.DecompressingEntity: java.io.InputStream getDecompressingStream()
com.lidroid.xutils.http.client.entity.DecompressingEntity: java.io.InputStream getContent()
com.lidroid.xutils.http.client.entity.DecompressingEntity: long getContentLength()
com.lidroid.xutils.http.client.entity.DecompressingEntity: void writeTo(java.io.OutputStream)
com.lidroid.xutils.http.client.entity.DecompressingEntity: void setCallBackHandler(com.lidroid.xutils.http.callback.RequestCallBackHandler)
com.lidroid.xutils.http.client.entity.FileUploadEntity
com.lidroid.xutils.http.client.entity.FileUploadEntity: long fileSize
com.lidroid.xutils.http.client.entity.FileUploadEntity: long uploadedSize
com.lidroid.xutils.http.client.entity.FileUploadEntity: com.lidroid.xutils.http.callback.RequestCallBackHandler callBackHandler
com.lidroid.xutils.http.client.entity.FileUploadEntity: FileUploadEntity(java.io.File,java.lang.String)
com.lidroid.xutils.http.client.entity.FileUploadEntity: void writeTo(java.io.OutputStream)
com.lidroid.xutils.http.client.entity.FileUploadEntity: void setCallBackHandler(com.lidroid.xutils.http.callback.RequestCallBackHandler)
com.lidroid.xutils.http.client.entity.GZipDecompressingEntity
com.lidroid.xutils.http.client.entity.GZipDecompressingEntity: GZipDecompressingEntity(org.apache.http.HttpEntity)
com.lidroid.xutils.http.client.entity.GZipDecompressingEntity: java.io.InputStream decorate(java.io.InputStream)
com.lidroid.xutils.http.client.entity.GZipDecompressingEntity: org.apache.http.Header getContentEncoding()
com.lidroid.xutils.http.client.entity.GZipDecompressingEntity: long getContentLength()
com.lidroid.xutils.http.client.entity.GZipDecompressingEntity: java.io.InputStream getContent()
com.lidroid.xutils.http.client.entity.GZipDecompressingEntity: void setCallBackHandler(com.lidroid.xutils.http.callback.RequestCallBackHandler)
com.lidroid.xutils.http.client.entity.GZipDecompressingEntity: void writeTo(java.io.OutputStream)
com.lidroid.xutils.http.client.entity.InputStreamUploadEntity
com.lidroid.xutils.http.client.entity.InputStreamUploadEntity: int BUFFER_SIZE
com.lidroid.xutils.http.client.entity.InputStreamUploadEntity: java.io.InputStream content
com.lidroid.xutils.http.client.entity.InputStreamUploadEntity: long length
com.lidroid.xutils.http.client.entity.InputStreamUploadEntity: long uploadedSize
com.lidroid.xutils.http.client.entity.InputStreamUploadEntity: com.lidroid.xutils.http.callback.RequestCallBackHandler callBackHandler
com.lidroid.xutils.http.client.entity.InputStreamUploadEntity: InputStreamUploadEntity(java.io.InputStream,long)
com.lidroid.xutils.http.client.entity.InputStreamUploadEntity: boolean isRepeatable()
com.lidroid.xutils.http.client.entity.InputStreamUploadEntity: long getContentLength()
com.lidroid.xutils.http.client.entity.InputStreamUploadEntity: java.io.InputStream getContent()
com.lidroid.xutils.http.client.entity.InputStreamUploadEntity: void writeTo(java.io.OutputStream)
com.lidroid.xutils.http.client.entity.InputStreamUploadEntity: boolean isStreaming()
com.lidroid.xutils.http.client.entity.InputStreamUploadEntity: void consumeContent()
com.lidroid.xutils.http.client.entity.InputStreamUploadEntity: void setCallBackHandler(com.lidroid.xutils.http.callback.RequestCallBackHandler)
com.lidroid.xutils.http.client.entity.UploadEntity
com.lidroid.xutils.http.client.entity.UploadEntity: void setCallBackHandler(com.lidroid.xutils.http.callback.RequestCallBackHandler)
com.lidroid.xutils.http.client.multipart.FormBodyPart
com.lidroid.xutils.http.client.multipart.FormBodyPart: java.lang.String name
com.lidroid.xutils.http.client.multipart.FormBodyPart: com.lidroid.xutils.http.client.multipart.MinimalFieldHeader header
com.lidroid.xutils.http.client.multipart.FormBodyPart: com.lidroid.xutils.http.client.multipart.content.ContentBody body
com.lidroid.xutils.http.client.multipart.FormBodyPart: FormBodyPart(java.lang.String,com.lidroid.xutils.http.client.multipart.content.ContentBody)
com.lidroid.xutils.http.client.multipart.FormBodyPart: FormBodyPart(java.lang.String,com.lidroid.xutils.http.client.multipart.content.ContentBody,java.lang.String)
com.lidroid.xutils.http.client.multipart.FormBodyPart: java.lang.String getName()
com.lidroid.xutils.http.client.multipart.FormBodyPart: com.lidroid.xutils.http.client.multipart.content.ContentBody getBody()
com.lidroid.xutils.http.client.multipart.FormBodyPart: com.lidroid.xutils.http.client.multipart.MinimalFieldHeader getHeader()
com.lidroid.xutils.http.client.multipart.FormBodyPart: void addField(java.lang.String,java.lang.String)
com.lidroid.xutils.http.client.multipart.FormBodyPart: void generateContentDisposition(com.lidroid.xutils.http.client.multipart.content.ContentBody)
com.lidroid.xutils.http.client.multipart.FormBodyPart: void generateContentType(com.lidroid.xutils.http.client.multipart.content.ContentBody)
com.lidroid.xutils.http.client.multipart.FormBodyPart: void generateTransferEncoding(com.lidroid.xutils.http.client.multipart.content.ContentBody)
com.lidroid.xutils.http.client.multipart.HttpMultipart
com.lidroid.xutils.http.client.multipart.HttpMultipart: org.apache.http.util.ByteArrayBuffer FIELD_SEP
com.lidroid.xutils.http.client.multipart.HttpMultipart: org.apache.http.util.ByteArrayBuffer CR_LF
com.lidroid.xutils.http.client.multipart.HttpMultipart: org.apache.http.util.ByteArrayBuffer TWO_DASHES
com.lidroid.xutils.http.client.multipart.HttpMultipart: java.lang.String subType
com.lidroid.xutils.http.client.multipart.HttpMultipart: java.nio.charset.Charset charset
com.lidroid.xutils.http.client.multipart.HttpMultipart: java.lang.String boundary
com.lidroid.xutils.http.client.multipart.HttpMultipart: java.util.List parts
com.lidroid.xutils.http.client.multipart.HttpMultipart: com.lidroid.xutils.http.client.multipart.HttpMultipartMode mode
com.lidroid.xutils.http.client.multipart.HttpMultipart: int[] $SWITCH_TABLE$com$lidroid$xutils$http$client$multipart$HttpMultipartMode
com.lidroid.xutils.http.client.multipart.HttpMultipart: void <clinit>()
com.lidroid.xutils.http.client.multipart.HttpMultipart: org.apache.http.util.ByteArrayBuffer encode(java.nio.charset.Charset,java.lang.String)
com.lidroid.xutils.http.client.multipart.HttpMultipart: void writeBytes(org.apache.http.util.ByteArrayBuffer,java.io.OutputStream)
com.lidroid.xutils.http.client.multipart.HttpMultipart: void writeBytes(java.lang.String,java.nio.charset.Charset,java.io.OutputStream)
com.lidroid.xutils.http.client.multipart.HttpMultipart: void writeBytes(java.lang.String,java.io.OutputStream)
com.lidroid.xutils.http.client.multipart.HttpMultipart: void writeField(com.lidroid.xutils.http.client.multipart.MinimalField,java.io.OutputStream)
com.lidroid.xutils.http.client.multipart.HttpMultipart: void writeField(com.lidroid.xutils.http.client.multipart.MinimalField,java.nio.charset.Charset,java.io.OutputStream)
com.lidroid.xutils.http.client.multipart.HttpMultipart: HttpMultipart(java.lang.String,java.nio.charset.Charset,java.lang.String,com.lidroid.xutils.http.client.multipart.HttpMultipartMode)
com.lidroid.xutils.http.client.multipart.HttpMultipart: HttpMultipart(java.lang.String,java.nio.charset.Charset,java.lang.String)
com.lidroid.xutils.http.client.multipart.HttpMultipart: HttpMultipart(java.lang.String,java.lang.String)
com.lidroid.xutils.http.client.multipart.HttpMultipart: void setSubType(java.lang.String)
com.lidroid.xutils.http.client.multipart.HttpMultipart: java.lang.String getSubType()
com.lidroid.xutils.http.client.multipart.HttpMultipart: java.nio.charset.Charset getCharset()
com.lidroid.xutils.http.client.multipart.HttpMultipart: com.lidroid.xutils.http.client.multipart.HttpMultipartMode getMode()
com.lidroid.xutils.http.client.multipart.HttpMultipart: java.util.List getBodyParts()
com.lidroid.xutils.http.client.multipart.HttpMultipart: void addBodyPart(com.lidroid.xutils.http.client.multipart.FormBodyPart)
com.lidroid.xutils.http.client.multipart.HttpMultipart: java.lang.String getBoundary()
com.lidroid.xutils.http.client.multipart.HttpMultipart: void doWriteTo(com.lidroid.xutils.http.client.multipart.HttpMultipartMode,java.io.OutputStream,boolean)
com.lidroid.xutils.http.client.multipart.HttpMultipart: void doWriteTo(com.lidroid.xutils.http.client.multipart.HttpMultipartMode,java.io.OutputStream,com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo,boolean)
com.lidroid.xutils.http.client.multipart.HttpMultipart: void writeTo(java.io.OutputStream,com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo)
com.lidroid.xutils.http.client.multipart.HttpMultipart: long getTotalLength()
com.lidroid.xutils.http.client.multipart.HttpMultipart: int[] $SWITCH_TABLE$com$lidroid$xutils$http$client$multipart$HttpMultipartMode()
com.lidroid.xutils.http.client.multipart.HttpMultipartMode
com.lidroid.xutils.http.client.multipart.HttpMultipartMode: com.lidroid.xutils.http.client.multipart.HttpMultipartMode STRICT
com.lidroid.xutils.http.client.multipart.HttpMultipartMode: com.lidroid.xutils.http.client.multipart.HttpMultipartMode BROWSER_COMPATIBLE
com.lidroid.xutils.http.client.multipart.HttpMultipartMode: com.lidroid.xutils.http.client.multipart.HttpMultipartMode[] ENUM$VALUES
com.lidroid.xutils.http.client.multipart.HttpMultipartMode: void <clinit>()
com.lidroid.xutils.http.client.multipart.HttpMultipartMode: HttpMultipartMode(java.lang.String,int)
com.lidroid.xutils.http.client.multipart.HttpMultipartMode: com.lidroid.xutils.http.client.multipart.HttpMultipartMode[] values()
com.lidroid.xutils.http.client.multipart.HttpMultipartMode: com.lidroid.xutils.http.client.multipart.HttpMultipartMode valueOf(java.lang.String)
com.lidroid.xutils.http.client.multipart.MIME
com.lidroid.xutils.http.client.multipart.MIME: java.lang.String CONTENT_TYPE
com.lidroid.xutils.http.client.multipart.MIME: java.lang.String CONTENT_TRANSFER_ENC
com.lidroid.xutils.http.client.multipart.MIME: java.lang.String CONTENT_DISPOSITION
com.lidroid.xutils.http.client.multipart.MIME: java.lang.String ENC_8BIT
com.lidroid.xutils.http.client.multipart.MIME: java.lang.String ENC_BINARY
com.lidroid.xutils.http.client.multipart.MIME: java.nio.charset.Charset DEFAULT_CHARSET
com.lidroid.xutils.http.client.multipart.MIME: void <clinit>()
com.lidroid.xutils.http.client.multipart.MIME: MIME()
com.lidroid.xutils.http.client.multipart.MinimalField
com.lidroid.xutils.http.client.multipart.MinimalField: java.lang.String name
com.lidroid.xutils.http.client.multipart.MinimalField: java.lang.String value
com.lidroid.xutils.http.client.multipart.MinimalField: MinimalField(java.lang.String,java.lang.String)
com.lidroid.xutils.http.client.multipart.MinimalField: java.lang.String getName()
com.lidroid.xutils.http.client.multipart.MinimalField: java.lang.String getBody()
com.lidroid.xutils.http.client.multipart.MinimalField: java.lang.String toString()
com.lidroid.xutils.http.client.multipart.MinimalFieldHeader
com.lidroid.xutils.http.client.multipart.MinimalFieldHeader: java.util.List fields
com.lidroid.xutils.http.client.multipart.MinimalFieldHeader: java.util.Map fieldMap
com.lidroid.xutils.http.client.multipart.MinimalFieldHeader: MinimalFieldHeader()
com.lidroid.xutils.http.client.multipart.MinimalFieldHeader: void addField(com.lidroid.xutils.http.client.multipart.MinimalField)
com.lidroid.xutils.http.client.multipart.MinimalFieldHeader: java.util.List getFields()
com.lidroid.xutils.http.client.multipart.MinimalFieldHeader: com.lidroid.xutils.http.client.multipart.MinimalField getField(java.lang.String)
com.lidroid.xutils.http.client.multipart.MinimalFieldHeader: java.util.List getFields(java.lang.String)
com.lidroid.xutils.http.client.multipart.MinimalFieldHeader: int removeFields(java.lang.String)
com.lidroid.xutils.http.client.multipart.MinimalFieldHeader: void setField(com.lidroid.xutils.http.client.multipart.MinimalField)
com.lidroid.xutils.http.client.multipart.MinimalFieldHeader: java.util.Iterator iterator()
com.lidroid.xutils.http.client.multipart.MinimalFieldHeader: java.lang.String toString()
com.lidroid.xutils.http.client.multipart.MultipartEntity
com.lidroid.xutils.http.client.multipart.MultipartEntity: com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo callBackInfo
com.lidroid.xutils.http.client.multipart.MultipartEntity: char[] MULTIPART_CHARS
com.lidroid.xutils.http.client.multipart.MultipartEntity: com.lidroid.xutils.http.client.multipart.HttpMultipart multipart
com.lidroid.xutils.http.client.multipart.MultipartEntity: org.apache.http.Header contentType
com.lidroid.xutils.http.client.multipart.MultipartEntity: long length
com.lidroid.xutils.http.client.multipart.MultipartEntity: boolean dirty
com.lidroid.xutils.http.client.multipart.MultipartEntity: java.lang.String boundary
com.lidroid.xutils.http.client.multipart.MultipartEntity: java.nio.charset.Charset charset
com.lidroid.xutils.http.client.multipart.MultipartEntity: java.lang.String multipartSubtype
com.lidroid.xutils.http.client.multipart.MultipartEntity: void <clinit>()
com.lidroid.xutils.http.client.multipart.MultipartEntity: void setCallBackHandler(com.lidroid.xutils.http.callback.RequestCallBackHandler)
com.lidroid.xutils.http.client.multipart.MultipartEntity: MultipartEntity(com.lidroid.xutils.http.client.multipart.HttpMultipartMode,java.lang.String,java.nio.charset.Charset)
com.lidroid.xutils.http.client.multipart.MultipartEntity: MultipartEntity(com.lidroid.xutils.http.client.multipart.HttpMultipartMode)
com.lidroid.xutils.http.client.multipart.MultipartEntity: MultipartEntity()
com.lidroid.xutils.http.client.multipart.MultipartEntity: void setMultipartSubtype(java.lang.String)
com.lidroid.xutils.http.client.multipart.MultipartEntity: java.lang.String generateContentType(java.lang.String,java.nio.charset.Charset)
com.lidroid.xutils.http.client.multipart.MultipartEntity: java.lang.String generateBoundary()
com.lidroid.xutils.http.client.multipart.MultipartEntity: void addPart(com.lidroid.xutils.http.client.multipart.FormBodyPart)
com.lidroid.xutils.http.client.multipart.MultipartEntity: void addPart(java.lang.String,com.lidroid.xutils.http.client.multipart.content.ContentBody)
com.lidroid.xutils.http.client.multipart.MultipartEntity: void addPart(java.lang.String,com.lidroid.xutils.http.client.multipart.content.ContentBody,java.lang.String)
com.lidroid.xutils.http.client.multipart.MultipartEntity: boolean isRepeatable()
com.lidroid.xutils.http.client.multipart.MultipartEntity: boolean isChunked()
com.lidroid.xutils.http.client.multipart.MultipartEntity: boolean isStreaming()
com.lidroid.xutils.http.client.multipart.MultipartEntity: long getContentLength()
com.lidroid.xutils.http.client.multipart.MultipartEntity: org.apache.http.Header getContentType()
com.lidroid.xutils.http.client.multipart.MultipartEntity: org.apache.http.Header getContentEncoding()
com.lidroid.xutils.http.client.multipart.MultipartEntity: void consumeContent()
com.lidroid.xutils.http.client.multipart.MultipartEntity: java.io.InputStream getContent()
com.lidroid.xutils.http.client.multipart.MultipartEntity: void writeTo(java.io.OutputStream)
com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo
com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo: com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo DEFAULT
com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo: com.lidroid.xutils.http.callback.RequestCallBackHandler callBackHandler
com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo: long totalLength
com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo: long pos
com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo: void <clinit>()
com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo: MultipartEntity$CallBackInfo()
com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo: boolean doCallBack(boolean)
com.lidroid.xutils.http.client.multipart.content.AbstractContentBody
com.lidroid.xutils.http.client.multipart.content.AbstractContentBody: java.lang.String mimeType
com.lidroid.xutils.http.client.multipart.content.AbstractContentBody: java.lang.String mediaType
com.lidroid.xutils.http.client.multipart.content.AbstractContentBody: java.lang.String subType
com.lidroid.xutils.http.client.multipart.content.AbstractContentBody: com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo callBackInfo
com.lidroid.xutils.http.client.multipart.content.AbstractContentBody: AbstractContentBody(java.lang.String)
com.lidroid.xutils.http.client.multipart.content.AbstractContentBody: java.lang.String getMimeType()
com.lidroid.xutils.http.client.multipart.content.AbstractContentBody: java.lang.String getMediaType()
com.lidroid.xutils.http.client.multipart.content.AbstractContentBody: java.lang.String getSubType()
com.lidroid.xutils.http.client.multipart.content.AbstractContentBody: void setCallBackInfo(com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo)
com.lidroid.xutils.http.client.multipart.content.ByteArrayBody
com.lidroid.xutils.http.client.multipart.content.ByteArrayBody: byte[] data
com.lidroid.xutils.http.client.multipart.content.ByteArrayBody: java.lang.String filename
com.lidroid.xutils.http.client.multipart.content.ByteArrayBody: ByteArrayBody(byte[],java.lang.String,java.lang.String)
com.lidroid.xutils.http.client.multipart.content.ByteArrayBody: ByteArrayBody(byte[],java.lang.String)
com.lidroid.xutils.http.client.multipart.content.ByteArrayBody: java.lang.String getFilename()
com.lidroid.xutils.http.client.multipart.content.ByteArrayBody: void writeTo(java.io.OutputStream)
com.lidroid.xutils.http.client.multipart.content.ByteArrayBody: java.lang.String getCharset()
com.lidroid.xutils.http.client.multipart.content.ByteArrayBody: java.lang.String getTransferEncoding()
com.lidroid.xutils.http.client.multipart.content.ByteArrayBody: long getContentLength()
com.lidroid.xutils.http.client.multipart.content.ContentBody
com.lidroid.xutils.http.client.multipart.content.ContentBody: java.lang.String getFilename()
com.lidroid.xutils.http.client.multipart.content.ContentBody: void writeTo(java.io.OutputStream)
com.lidroid.xutils.http.client.multipart.content.ContentBody: void setCallBackInfo(com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo)
com.lidroid.xutils.http.client.multipart.content.ContentDescriptor
com.lidroid.xutils.http.client.multipart.content.ContentDescriptor: java.lang.String getMimeType()
com.lidroid.xutils.http.client.multipart.content.ContentDescriptor: java.lang.String getMediaType()
com.lidroid.xutils.http.client.multipart.content.ContentDescriptor: java.lang.String getSubType()
com.lidroid.xutils.http.client.multipart.content.ContentDescriptor: java.lang.String getCharset()
com.lidroid.xutils.http.client.multipart.content.ContentDescriptor: java.lang.String getTransferEncoding()
com.lidroid.xutils.http.client.multipart.content.ContentDescriptor: long getContentLength()
com.lidroid.xutils.http.client.multipart.content.FileBody
com.lidroid.xutils.http.client.multipart.content.FileBody: java.io.File file
com.lidroid.xutils.http.client.multipart.content.FileBody: java.lang.String filename
com.lidroid.xutils.http.client.multipart.content.FileBody: java.lang.String charset
com.lidroid.xutils.http.client.multipart.content.FileBody: FileBody(java.io.File,java.lang.String,java.lang.String,java.lang.String)
com.lidroid.xutils.http.client.multipart.content.FileBody: FileBody(java.io.File,java.lang.String,java.lang.String)
com.lidroid.xutils.http.client.multipart.content.FileBody: FileBody(java.io.File,java.lang.String)
com.lidroid.xutils.http.client.multipart.content.FileBody: FileBody(java.io.File)
com.lidroid.xutils.http.client.multipart.content.FileBody: java.io.InputStream getInputStream()
com.lidroid.xutils.http.client.multipart.content.FileBody: void writeTo(java.io.OutputStream)
com.lidroid.xutils.http.client.multipart.content.FileBody: java.lang.String getTransferEncoding()
com.lidroid.xutils.http.client.multipart.content.FileBody: java.lang.String getCharset()
com.lidroid.xutils.http.client.multipart.content.FileBody: long getContentLength()
com.lidroid.xutils.http.client.multipart.content.FileBody: java.lang.String getFilename()
com.lidroid.xutils.http.client.multipart.content.FileBody: java.io.File getFile()
com.lidroid.xutils.http.client.multipart.content.InputStreamBody
com.lidroid.xutils.http.client.multipart.content.InputStreamBody: java.io.InputStream in
com.lidroid.xutils.http.client.multipart.content.InputStreamBody: java.lang.String filename
com.lidroid.xutils.http.client.multipart.content.InputStreamBody: long length
com.lidroid.xutils.http.client.multipart.content.InputStreamBody: InputStreamBody(java.io.InputStream,long,java.lang.String,java.lang.String)
com.lidroid.xutils.http.client.multipart.content.InputStreamBody: InputStreamBody(java.io.InputStream,long,java.lang.String)
com.lidroid.xutils.http.client.multipart.content.InputStreamBody: InputStreamBody(java.io.InputStream,long)
com.lidroid.xutils.http.client.multipart.content.InputStreamBody: java.io.InputStream getInputStream()
com.lidroid.xutils.http.client.multipart.content.InputStreamBody: void writeTo(java.io.OutputStream)
com.lidroid.xutils.http.client.multipart.content.InputStreamBody: java.lang.String getTransferEncoding()
com.lidroid.xutils.http.client.multipart.content.InputStreamBody: java.lang.String getCharset()
com.lidroid.xutils.http.client.multipart.content.InputStreamBody: long getContentLength()
com.lidroid.xutils.http.client.multipart.content.InputStreamBody: java.lang.String getFilename()
com.lidroid.xutils.http.client.multipart.content.StringBody
com.lidroid.xutils.http.client.multipart.content.StringBody: byte[] content
com.lidroid.xutils.http.client.multipart.content.StringBody: java.nio.charset.Charset charset
com.lidroid.xutils.http.client.multipart.content.StringBody: com.lidroid.xutils.http.client.multipart.content.StringBody create(java.lang.String,java.lang.String,java.nio.charset.Charset)
com.lidroid.xutils.http.client.multipart.content.StringBody: com.lidroid.xutils.http.client.multipart.content.StringBody create(java.lang.String,java.nio.charset.Charset)
com.lidroid.xutils.http.client.multipart.content.StringBody: com.lidroid.xutils.http.client.multipart.content.StringBody create(java.lang.String)
com.lidroid.xutils.http.client.multipart.content.StringBody: StringBody(java.lang.String,java.lang.String,java.nio.charset.Charset)
com.lidroid.xutils.http.client.multipart.content.StringBody: StringBody(java.lang.String,java.nio.charset.Charset)
com.lidroid.xutils.http.client.multipart.content.StringBody: StringBody(java.lang.String)
com.lidroid.xutils.http.client.multipart.content.StringBody: java.io.Reader getReader()
com.lidroid.xutils.http.client.multipart.content.StringBody: void writeTo(java.io.OutputStream)
com.lidroid.xutils.http.client.multipart.content.StringBody: java.lang.String getTransferEncoding()
com.lidroid.xutils.http.client.multipart.content.StringBody: java.lang.String getCharset()
com.lidroid.xutils.http.client.multipart.content.StringBody: long getContentLength()
com.lidroid.xutils.http.client.multipart.content.StringBody: java.lang.String getFilename()
com.lidroid.xutils.http.client.util.URIBuilder
com.lidroid.xutils.http.client.util.URIBuilder: java.lang.String scheme
com.lidroid.xutils.http.client.util.URIBuilder: java.lang.String encodedSchemeSpecificPart
com.lidroid.xutils.http.client.util.URIBuilder: java.lang.String encodedAuthority
com.lidroid.xutils.http.client.util.URIBuilder: java.lang.String userInfo
com.lidroid.xutils.http.client.util.URIBuilder: java.lang.String encodedUserInfo
com.lidroid.xutils.http.client.util.URIBuilder: java.lang.String host
com.lidroid.xutils.http.client.util.URIBuilder: int port
com.lidroid.xutils.http.client.util.URIBuilder: java.lang.String path
com.lidroid.xutils.http.client.util.URIBuilder: java.lang.String encodedPath
com.lidroid.xutils.http.client.util.URIBuilder: java.lang.String encodedQuery
com.lidroid.xutils.http.client.util.URIBuilder: java.util.List queryParams
com.lidroid.xutils.http.client.util.URIBuilder: java.lang.String fragment
com.lidroid.xutils.http.client.util.URIBuilder: java.lang.String encodedFragment
com.lidroid.xutils.http.client.util.URIBuilder: URIBuilder()
com.lidroid.xutils.http.client.util.URIBuilder: URIBuilder(java.lang.String)
com.lidroid.xutils.http.client.util.URIBuilder: URIBuilder(java.net.URI)
com.lidroid.xutils.http.client.util.URIBuilder: void digestURI(java.net.URI)
com.lidroid.xutils.http.client.util.URIBuilder: java.util.List parseQuery(java.lang.String)
com.lidroid.xutils.http.client.util.URIBuilder: java.net.URI build(java.nio.charset.Charset)
com.lidroid.xutils.http.client.util.URIBuilder: java.lang.String buildString(java.nio.charset.Charset)
com.lidroid.xutils.http.client.util.URIBuilder: java.lang.String encodeUserInfo(java.lang.String,java.nio.charset.Charset)
com.lidroid.xutils.http.client.util.URIBuilder: java.lang.String encodePath(java.lang.String,java.nio.charset.Charset)
com.lidroid.xutils.http.client.util.URIBuilder: java.lang.String encodeQuery(java.util.List,java.nio.charset.Charset)
com.lidroid.xutils.http.client.util.URIBuilder: java.lang.String encodeFragment(java.lang.String,java.nio.charset.Charset)
com.lidroid.xutils.http.client.util.URIBuilder: com.lidroid.xutils.http.client.util.URIBuilder setScheme(java.lang.String)
com.lidroid.xutils.http.client.util.URIBuilder: com.lidroid.xutils.http.client.util.URIBuilder setUserInfo(java.lang.String)
com.lidroid.xutils.http.client.util.URIBuilder: com.lidroid.xutils.http.client.util.URIBuilder setUserInfo(java.lang.String,java.lang.String)
com.lidroid.xutils.http.client.util.URIBuilder: com.lidroid.xutils.http.client.util.URIBuilder setHost(java.lang.String)
com.lidroid.xutils.http.client.util.URIBuilder: com.lidroid.xutils.http.client.util.URIBuilder setPort(int)
com.lidroid.xutils.http.client.util.URIBuilder: com.lidroid.xutils.http.client.util.URIBuilder setPath(java.lang.String)
com.lidroid.xutils.http.client.util.URIBuilder: com.lidroid.xutils.http.client.util.URIBuilder setQuery(java.lang.String)
com.lidroid.xutils.http.client.util.URIBuilder: com.lidroid.xutils.http.client.util.URIBuilder addParameter(java.lang.String,java.lang.String)
com.lidroid.xutils.http.client.util.URIBuilder: com.lidroid.xutils.http.client.util.URIBuilder setParameter(java.lang.String,java.lang.String)
com.lidroid.xutils.http.client.util.URIBuilder: com.lidroid.xutils.http.client.util.URIBuilder setFragment(java.lang.String)
com.lidroid.xutils.http.client.util.URIBuilder: java.lang.String getScheme()
com.lidroid.xutils.http.client.util.URIBuilder: java.lang.String getUserInfo()
com.lidroid.xutils.http.client.util.URIBuilder: java.lang.String getHost()
com.lidroid.xutils.http.client.util.URIBuilder: int getPort()
com.lidroid.xutils.http.client.util.URIBuilder: java.lang.String getPath()
com.lidroid.xutils.http.client.util.URIBuilder: java.util.List getQueryParams()
com.lidroid.xutils.http.client.util.URIBuilder: java.lang.String getFragment()
com.lidroid.xutils.http.client.util.URIBuilder: java.lang.String normalizePath(java.lang.String)
com.lidroid.xutils.http.client.util.URLEncodedUtils
com.lidroid.xutils.http.client.util.URLEncodedUtils: java.lang.String CONTENT_TYPE
com.lidroid.xutils.http.client.util.URLEncodedUtils: java.lang.String PARAMETER_SEPARATOR
com.lidroid.xutils.http.client.util.URLEncodedUtils: java.lang.String NAME_VALUE_SEPARATOR
com.lidroid.xutils.http.client.util.URLEncodedUtils: char[] DELIM
com.lidroid.xutils.http.client.util.URLEncodedUtils: java.util.BitSet UNRESERVED
com.lidroid.xutils.http.client.util.URLEncodedUtils: java.util.BitSet PUNCT
com.lidroid.xutils.http.client.util.URLEncodedUtils: java.util.BitSet USERINFO
com.lidroid.xutils.http.client.util.URLEncodedUtils: java.util.BitSet PATHSAFE
com.lidroid.xutils.http.client.util.URLEncodedUtils: java.util.BitSet FRAGMENT
com.lidroid.xutils.http.client.util.URLEncodedUtils: java.util.BitSet RESERVED
com.lidroid.xutils.http.client.util.URLEncodedUtils: java.util.BitSet URLENCODER
com.lidroid.xutils.http.client.util.URLEncodedUtils: int RADIX
com.lidroid.xutils.http.client.util.URLEncodedUtils: void <clinit>()
com.lidroid.xutils.http.client.util.URLEncodedUtils: URLEncodedUtils()
com.lidroid.xutils.http.client.util.URLEncodedUtils: boolean isEncoded(org.apache.http.HttpEntity)
com.lidroid.xutils.http.client.util.URLEncodedUtils: java.util.List parse(java.net.URI)
com.lidroid.xutils.http.client.util.URLEncodedUtils: void parse(java.util.List,java.util.Scanner)
com.lidroid.xutils.http.client.util.URLEncodedUtils: java.util.List parse(java.lang.String)
com.lidroid.xutils.http.client.util.URLEncodedUtils: java.lang.String format(java.util.List,java.lang.String)
com.lidroid.xutils.http.client.util.URLEncodedUtils: java.lang.String format(java.lang.Iterable,java.nio.charset.Charset)
com.lidroid.xutils.http.client.util.URLEncodedUtils: java.lang.String urlencode(java.lang.String,java.nio.charset.Charset,java.util.BitSet,boolean)
com.lidroid.xutils.http.client.util.URLEncodedUtils: java.lang.String urldecode(java.lang.String,java.nio.charset.Charset,boolean)
com.lidroid.xutils.http.client.util.URLEncodedUtils: java.lang.String decodeFormFields(java.lang.String,java.lang.String)
com.lidroid.xutils.http.client.util.URLEncodedUtils: java.lang.String decodeFormFields(java.lang.String,java.nio.charset.Charset)
com.lidroid.xutils.http.client.util.URLEncodedUtils: java.lang.String encodeFormFields(java.lang.String,java.lang.String)
com.lidroid.xutils.http.client.util.URLEncodedUtils: java.lang.String encodeFormFields(java.lang.String,java.nio.charset.Charset)
com.lidroid.xutils.http.client.util.URLEncodedUtils: java.lang.String encUserInfo(java.lang.String,java.nio.charset.Charset)
com.lidroid.xutils.http.client.util.URLEncodedUtils: java.lang.String encFragment(java.lang.String,java.nio.charset.Charset)
com.lidroid.xutils.http.client.util.URLEncodedUtils: java.lang.String encPath(java.lang.String,java.nio.charset.Charset)
com.lidroid.xutils.util.CharsetUtils
com.lidroid.xutils.util.CharsetUtils: java.lang.String DEFAULT_ENCODING_CHARSET
com.lidroid.xutils.util.CharsetUtils: java.util.List SUPPORT_CHARSET
com.lidroid.xutils.util.CharsetUtils: void <clinit>()
com.lidroid.xutils.util.CharsetUtils: CharsetUtils()
com.lidroid.xutils.util.CharsetUtils: java.lang.String toCharset(java.lang.String,java.lang.String,int)
com.lidroid.xutils.util.CharsetUtils: java.lang.String getEncoding(java.lang.String,int)
com.lidroid.xutils.util.CharsetUtils: boolean isCharset(java.lang.String,java.lang.String,int)
com.lidroid.xutils.util.CookieUtils
com.lidroid.xutils.util.CookieUtils: java.lang.String COOKIE_PREFS
com.lidroid.xutils.util.CookieUtils: java.lang.String COOKIE_NAME_STORE
com.lidroid.xutils.util.CookieUtils: java.lang.String COOKIE_NAME_PREFIX
com.lidroid.xutils.util.CookieUtils: java.util.concurrent.ConcurrentHashMap cookies
com.lidroid.xutils.util.CookieUtils: android.content.SharedPreferences cookiePrefs
com.lidroid.xutils.util.CookieUtils: CookieUtils(android.content.Context)
com.lidroid.xutils.util.CookieUtils: void addCookie(org.apache.http.cookie.Cookie)
com.lidroid.xutils.util.CookieUtils: void clear()
com.lidroid.xutils.util.CookieUtils: boolean clearExpired(java.util.Date)
com.lidroid.xutils.util.CookieUtils: java.util.List getCookies()
com.lidroid.xutils.util.CookieUtils: org.apache.http.cookie.Cookie getCookie(java.lang.String)
com.lidroid.xutils.util.CookieUtils: java.lang.String encodeCookie(com.lidroid.xutils.util.CookieUtils$SerializableCookie)
com.lidroid.xutils.util.CookieUtils: org.apache.http.cookie.Cookie decodeCookie(java.lang.String)
com.lidroid.xutils.util.CookieUtils: java.lang.String byteArrayToHexString(byte[])
com.lidroid.xutils.util.CookieUtils: byte[] hexStringToByteArray(java.lang.String)
com.lidroid.xutils.util.CookieUtils$SerializableCookie
com.lidroid.xutils.util.CookieUtils$SerializableCookie: long serialVersionUID
com.lidroid.xutils.util.CookieUtils$SerializableCookie: org.apache.http.cookie.Cookie cookie
com.lidroid.xutils.util.CookieUtils$SerializableCookie: org.apache.http.impl.cookie.BasicClientCookie clientCookie
com.lidroid.xutils.util.CookieUtils$SerializableCookie: com.lidroid.xutils.util.CookieUtils this$0
com.lidroid.xutils.util.CookieUtils$SerializableCookie: CookieUtils$SerializableCookie(com.lidroid.xutils.util.CookieUtils,org.apache.http.cookie.Cookie)
com.lidroid.xutils.util.CookieUtils$SerializableCookie: org.apache.http.cookie.Cookie getCookie()
com.lidroid.xutils.util.CookieUtils$SerializableCookie: void writeObject(java.io.ObjectOutputStream)
com.lidroid.xutils.util.CookieUtils$SerializableCookie: void readObject(java.io.ObjectInputStream)
com.lidroid.xutils.util.IOUtils
com.lidroid.xutils.util.IOUtils: IOUtils()
com.lidroid.xutils.util.IOUtils: void closeQuietly(java.io.Closeable)
com.lidroid.xutils.util.IOUtils: void closeQuietly(android.database.Cursor)
com.lidroid.xutils.util.LogUtils
com.lidroid.xutils.util.LogUtils: java.lang.String customTagPrefix
com.lidroid.xutils.util.LogUtils: boolean allowD
com.lidroid.xutils.util.LogUtils: boolean allowE
com.lidroid.xutils.util.LogUtils: boolean allowI
com.lidroid.xutils.util.LogUtils: boolean allowV
com.lidroid.xutils.util.LogUtils: boolean allowW
com.lidroid.xutils.util.LogUtils: boolean allowWtf
com.lidroid.xutils.util.LogUtils: com.lidroid.xutils.util.LogUtils$CustomLogger customLogger
com.lidroid.xutils.util.LogUtils: void <clinit>()
com.lidroid.xutils.util.LogUtils: LogUtils()
com.lidroid.xutils.util.LogUtils: java.lang.String generateTag(java.lang.StackTraceElement)
com.lidroid.xutils.util.LogUtils: void d(java.lang.String)
com.lidroid.xutils.util.LogUtils: void d(java.lang.String,java.lang.Throwable)
com.lidroid.xutils.util.LogUtils: void e(java.lang.String)
com.lidroid.xutils.util.LogUtils: void e(java.lang.String,java.lang.Throwable)
com.lidroid.xutils.util.LogUtils: void i(java.lang.String)
com.lidroid.xutils.util.LogUtils: void i(java.lang.String,java.lang.Throwable)
com.lidroid.xutils.util.LogUtils: void v(java.lang.String)
com.lidroid.xutils.util.LogUtils: void v(java.lang.String,java.lang.Throwable)
com.lidroid.xutils.util.LogUtils: void w(java.lang.String)
com.lidroid.xutils.util.LogUtils: void w(java.lang.String,java.lang.Throwable)
com.lidroid.xutils.util.LogUtils: void w(java.lang.Throwable)
com.lidroid.xutils.util.LogUtils: void wtf(java.lang.String)
com.lidroid.xutils.util.LogUtils: void wtf(java.lang.String,java.lang.Throwable)
com.lidroid.xutils.util.LogUtils: void wtf(java.lang.Throwable)
com.lidroid.xutils.util.LogUtils$CustomLogger
com.lidroid.xutils.util.LogUtils$CustomLogger: void d(java.lang.String,java.lang.String)
com.lidroid.xutils.util.LogUtils$CustomLogger: void d(java.lang.String,java.lang.String,java.lang.Throwable)
com.lidroid.xutils.util.LogUtils$CustomLogger: void e(java.lang.String,java.lang.String)
com.lidroid.xutils.util.LogUtils$CustomLogger: void e(java.lang.String,java.lang.String,java.lang.Throwable)
com.lidroid.xutils.util.LogUtils$CustomLogger: void i(java.lang.String,java.lang.String)
com.lidroid.xutils.util.LogUtils$CustomLogger: void i(java.lang.String,java.lang.String,java.lang.Throwable)
com.lidroid.xutils.util.LogUtils$CustomLogger: void v(java.lang.String,java.lang.String)
com.lidroid.xutils.util.LogUtils$CustomLogger: void v(java.lang.String,java.lang.String,java.lang.Throwable)
com.lidroid.xutils.util.LogUtils$CustomLogger: void w(java.lang.String,java.lang.String)
com.lidroid.xutils.util.LogUtils$CustomLogger: void w(java.lang.String,java.lang.String,java.lang.Throwable)
com.lidroid.xutils.util.LogUtils$CustomLogger: void w(java.lang.String,java.lang.Throwable)
com.lidroid.xutils.util.LogUtils$CustomLogger: void wtf(java.lang.String,java.lang.String)
com.lidroid.xutils.util.LogUtils$CustomLogger: void wtf(java.lang.String,java.lang.String,java.lang.Throwable)
com.lidroid.xutils.util.LogUtils$CustomLogger: void wtf(java.lang.String,java.lang.Throwable)
com.lidroid.xutils.util.MimeTypeUtils
com.lidroid.xutils.util.MimeTypeUtils: MimeTypeUtils()
com.lidroid.xutils.util.MimeTypeUtils: java.lang.String getMimeType(java.lang.String)
com.lidroid.xutils.util.OtherUtils
com.lidroid.xutils.util.OtherUtils: int STRING_BUFFER_LENGTH
com.lidroid.xutils.util.OtherUtils: javax.net.ssl.TrustManager[] trustAllCerts
com.lidroid.xutils.util.OtherUtils: OtherUtils()
com.lidroid.xutils.util.OtherUtils: boolean isSupportRange(org.apache.http.HttpResponse)
com.lidroid.xutils.util.OtherUtils: java.lang.String getFileNameFromHttpResponse(org.apache.http.HttpResponse)
com.lidroid.xutils.util.OtherUtils: java.nio.charset.Charset getCharsetFromHttpRequest(org.apache.http.client.methods.HttpRequestBase)
com.lidroid.xutils.util.OtherUtils: long sizeOfString(java.lang.String,java.lang.String)
com.lidroid.xutils.util.OtherUtils: java.lang.String getSubString(java.lang.String,int,int)
com.lidroid.xutils.util.OtherUtils: java.lang.StackTraceElement getCurrentStackTraceElement()
com.lidroid.xutils.util.OtherUtils: java.lang.StackTraceElement getCallerStackTraceElement()
com.lidroid.xutils.util.OtherUtils: void trustAllSSLForHttpsURLConnection()
com.lidroid.xutils.util.OtherUtils$1
com.lidroid.xutils.util.OtherUtils$1: OtherUtils$1()
com.lidroid.xutils.util.OtherUtils$1: java.security.cert.X509Certificate[] getAcceptedIssuers()
com.lidroid.xutils.util.OtherUtils$1: void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String)
com.lidroid.xutils.util.OtherUtils$1: void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String)
com.lidroid.xutils.util.core.CompatibleAsyncTask
com.lidroid.xutils.util.core.CompatibleAsyncTask: int CORE_POOL_SIZE
com.lidroid.xutils.util.core.CompatibleAsyncTask: int MAXIMUM_POOL_SIZE
com.lidroid.xutils.util.core.CompatibleAsyncTask: int KEEP_ALIVE
com.lidroid.xutils.util.core.CompatibleAsyncTask: java.util.concurrent.ThreadFactory sThreadFactory
com.lidroid.xutils.util.core.CompatibleAsyncTask: java.util.concurrent.BlockingQueue sPoolWorkQueue
com.lidroid.xutils.util.core.CompatibleAsyncTask: java.util.concurrent.Executor THREAD_POOL_EXECUTOR
com.lidroid.xutils.util.core.CompatibleAsyncTask: java.util.concurrent.Executor SERIAL_EXECUTOR
com.lidroid.xutils.util.core.CompatibleAsyncTask: int MESSAGE_POST_RESULT
com.lidroid.xutils.util.core.CompatibleAsyncTask: int MESSAGE_POST_PROGRESS
com.lidroid.xutils.util.core.CompatibleAsyncTask: com.lidroid.xutils.util.core.CompatibleAsyncTask$InternalHandler sHandler
com.lidroid.xutils.util.core.CompatibleAsyncTask: java.util.concurrent.Executor sDefaultExecutor
com.lidroid.xutils.util.core.CompatibleAsyncTask: com.lidroid.xutils.util.core.CompatibleAsyncTask$WorkerRunnable mWorker
com.lidroid.xutils.util.core.CompatibleAsyncTask: java.util.concurrent.FutureTask mFuture
com.lidroid.xutils.util.core.CompatibleAsyncTask: com.lidroid.xutils.util.core.CompatibleAsyncTask$Status mStatus
com.lidroid.xutils.util.core.CompatibleAsyncTask: java.util.concurrent.atomic.AtomicBoolean mCancelled
com.lidroid.xutils.util.core.CompatibleAsyncTask: java.util.concurrent.atomic.AtomicBoolean mTaskInvoked
com.lidroid.xutils.util.core.CompatibleAsyncTask: int[] $SWITCH_TABLE$com$lidroid$xutils$util$core$CompatibleAsyncTask$Status
com.lidroid.xutils.util.core.CompatibleAsyncTask: void <clinit>()
com.lidroid.xutils.util.core.CompatibleAsyncTask: void init()
com.lidroid.xutils.util.core.CompatibleAsyncTask: void setDefaultExecutor(java.util.concurrent.Executor)
com.lidroid.xutils.util.core.CompatibleAsyncTask: CompatibleAsyncTask()
com.lidroid.xutils.util.core.CompatibleAsyncTask: void postResultIfNotInvoked(java.lang.Object)
com.lidroid.xutils.util.core.CompatibleAsyncTask: java.lang.Object postResult(java.lang.Object)
com.lidroid.xutils.util.core.CompatibleAsyncTask: com.lidroid.xutils.util.core.CompatibleAsyncTask$Status getStatus()
com.lidroid.xutils.util.core.CompatibleAsyncTask: java.lang.Object doInBackground(java.lang.Object[])
com.lidroid.xutils.util.core.CompatibleAsyncTask: void onPreExecute()
com.lidroid.xutils.util.core.CompatibleAsyncTask: void onPostExecute(java.lang.Object)
com.lidroid.xutils.util.core.CompatibleAsyncTask: void onProgressUpdate(java.lang.Object[])
com.lidroid.xutils.util.core.CompatibleAsyncTask: void onCancelled(java.lang.Object)
com.lidroid.xutils.util.core.CompatibleAsyncTask: void onCancelled()
com.lidroid.xutils.util.core.CompatibleAsyncTask: boolean isCancelled()
com.lidroid.xutils.util.core.CompatibleAsyncTask: boolean cancel(boolean)
com.lidroid.xutils.util.core.CompatibleAsyncTask: java.lang.Object get()
com.lidroid.xutils.util.core.CompatibleAsyncTask: java.lang.Object get(long,java.util.concurrent.TimeUnit)
com.lidroid.xutils.util.core.CompatibleAsyncTask: com.lidroid.xutils.util.core.CompatibleAsyncTask execute(java.lang.Object[])
com.lidroid.xutils.util.core.CompatibleAsyncTask: com.lidroid.xutils.util.core.CompatibleAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])
com.lidroid.xutils.util.core.CompatibleAsyncTask: void execute(java.lang.Runnable)
com.lidroid.xutils.util.core.CompatibleAsyncTask: void publishProgress(java.lang.Object[])
com.lidroid.xutils.util.core.CompatibleAsyncTask: void finish(java.lang.Object)
com.lidroid.xutils.util.core.CompatibleAsyncTask: void access$0(com.lidroid.xutils.util.core.CompatibleAsyncTask,java.lang.Object)
com.lidroid.xutils.util.core.CompatibleAsyncTask: java.util.concurrent.atomic.AtomicBoolean access$1(com.lidroid.xutils.util.core.CompatibleAsyncTask)
com.lidroid.xutils.util.core.CompatibleAsyncTask: java.lang.Object access$2(com.lidroid.xutils.util.core.CompatibleAsyncTask,java.lang.Object)
com.lidroid.xutils.util.core.CompatibleAsyncTask: void access$3(com.lidroid.xutils.util.core.CompatibleAsyncTask,java.lang.Object)
com.lidroid.xutils.util.core.CompatibleAsyncTask: int[] $SWITCH_TABLE$com$lidroid$xutils$util$core$CompatibleAsyncTask$Status()
com.lidroid.xutils.util.core.CompatibleAsyncTask$1
com.lidroid.xutils.util.core.CompatibleAsyncTask$1: java.util.concurrent.atomic.AtomicInteger mCount
com.lidroid.xutils.util.core.CompatibleAsyncTask$1: CompatibleAsyncTask$1()
com.lidroid.xutils.util.core.CompatibleAsyncTask$1: java.lang.Thread newThread(java.lang.Runnable)
com.lidroid.xutils.util.core.CompatibleAsyncTask$2
com.lidroid.xutils.util.core.CompatibleAsyncTask$2: com.lidroid.xutils.util.core.CompatibleAsyncTask this$0
com.lidroid.xutils.util.core.CompatibleAsyncTask$2: CompatibleAsyncTask$2(com.lidroid.xutils.util.core.CompatibleAsyncTask)
com.lidroid.xutils.util.core.CompatibleAsyncTask$2: java.lang.Object call()
com.lidroid.xutils.util.core.CompatibleAsyncTask$3
com.lidroid.xutils.util.core.CompatibleAsyncTask$3: com.lidroid.xutils.util.core.CompatibleAsyncTask this$0
com.lidroid.xutils.util.core.CompatibleAsyncTask$3: CompatibleAsyncTask$3(com.lidroid.xutils.util.core.CompatibleAsyncTask,java.util.concurrent.Callable)
com.lidroid.xutils.util.core.CompatibleAsyncTask$3: void done()
com.lidroid.xutils.util.core.CompatibleAsyncTask$AsyncTaskResult
com.lidroid.xutils.util.core.CompatibleAsyncTask$AsyncTaskResult: com.lidroid.xutils.util.core.CompatibleAsyncTask mTask
com.lidroid.xutils.util.core.CompatibleAsyncTask$AsyncTaskResult: java.lang.Object[] mData
com.lidroid.xutils.util.core.CompatibleAsyncTask$AsyncTaskResult: CompatibleAsyncTask$AsyncTaskResult(com.lidroid.xutils.util.core.CompatibleAsyncTask,java.lang.Object[])
com.lidroid.xutils.util.core.CompatibleAsyncTask$InternalHandler
com.lidroid.xutils.util.core.CompatibleAsyncTask$InternalHandler: CompatibleAsyncTask$InternalHandler()
com.lidroid.xutils.util.core.CompatibleAsyncTask$InternalHandler: void handleMessage(android.os.Message)
com.lidroid.xutils.util.core.CompatibleAsyncTask$InternalHandler: CompatibleAsyncTask$InternalHandler(com.lidroid.xutils.util.core.CompatibleAsyncTask$InternalHandler)
com.lidroid.xutils.util.core.CompatibleAsyncTask$SerialExecutor
com.lidroid.xutils.util.core.CompatibleAsyncTask$SerialExecutor: com.lidroid.xutils.util.core.compatible.ArrayDeque mTasks
com.lidroid.xutils.util.core.CompatibleAsyncTask$SerialExecutor: java.lang.Runnable mActive
com.lidroid.xutils.util.core.CompatibleAsyncTask$SerialExecutor: CompatibleAsyncTask$SerialExecutor()
com.lidroid.xutils.util.core.CompatibleAsyncTask$SerialExecutor: void execute(java.lang.Runnable)
com.lidroid.xutils.util.core.CompatibleAsyncTask$SerialExecutor: void scheduleNext()
com.lidroid.xutils.util.core.CompatibleAsyncTask$SerialExecutor: CompatibleAsyncTask$SerialExecutor(com.lidroid.xutils.util.core.CompatibleAsyncTask$SerialExecutor)
com.lidroid.xutils.util.core.CompatibleAsyncTask$SerialExecutor$1
com.lidroid.xutils.util.core.CompatibleAsyncTask$SerialExecutor$1: com.lidroid.xutils.util.core.CompatibleAsyncTask$SerialExecutor this$1
com.lidroid.xutils.util.core.CompatibleAsyncTask$SerialExecutor$1: java.lang.Runnable val$r
com.lidroid.xutils.util.core.CompatibleAsyncTask$SerialExecutor$1: CompatibleAsyncTask$SerialExecutor$1(com.lidroid.xutils.util.core.CompatibleAsyncTask$SerialExecutor,java.lang.Runnable)
com.lidroid.xutils.util.core.CompatibleAsyncTask$SerialExecutor$1: void run()
com.lidroid.xutils.util.core.CompatibleAsyncTask$Status
com.lidroid.xutils.util.core.CompatibleAsyncTask$Status: com.lidroid.xutils.util.core.CompatibleAsyncTask$Status PENDING
com.lidroid.xutils.util.core.CompatibleAsyncTask$Status: com.lidroid.xutils.util.core.CompatibleAsyncTask$Status RUNNING
com.lidroid.xutils.util.core.CompatibleAsyncTask$Status: com.lidroid.xutils.util.core.CompatibleAsyncTask$Status FINISHED
com.lidroid.xutils.util.core.CompatibleAsyncTask$Status: com.lidroid.xutils.util.core.CompatibleAsyncTask$Status[] ENUM$VALUES
com.lidroid.xutils.util.core.CompatibleAsyncTask$Status: void <clinit>()
com.lidroid.xutils.util.core.CompatibleAsyncTask$Status: CompatibleAsyncTask$Status(java.lang.String,int)
com.lidroid.xutils.util.core.CompatibleAsyncTask$Status: com.lidroid.xutils.util.core.CompatibleAsyncTask$Status[] values()
com.lidroid.xutils.util.core.CompatibleAsyncTask$Status: com.lidroid.xutils.util.core.CompatibleAsyncTask$Status valueOf(java.lang.String)
com.lidroid.xutils.util.core.CompatibleAsyncTask$WorkerRunnable
com.lidroid.xutils.util.core.CompatibleAsyncTask$WorkerRunnable: java.lang.Object[] mParams
com.lidroid.xutils.util.core.CompatibleAsyncTask$WorkerRunnable: CompatibleAsyncTask$WorkerRunnable()
com.lidroid.xutils.util.core.CompatibleAsyncTask$WorkerRunnable: CompatibleAsyncTask$WorkerRunnable(com.lidroid.xutils.util.core.CompatibleAsyncTask$WorkerRunnable)
com.lidroid.xutils.util.core.DoubleKeyValueMap
com.lidroid.xutils.util.core.DoubleKeyValueMap: java.util.concurrent.ConcurrentHashMap k1_k2V_map
com.lidroid.xutils.util.core.DoubleKeyValueMap: DoubleKeyValueMap()
com.lidroid.xutils.util.core.DoubleKeyValueMap: void put(java.lang.Object,java.lang.Object,java.lang.Object)
com.lidroid.xutils.util.core.DoubleKeyValueMap: java.util.Set getFirstKeys()
com.lidroid.xutils.util.core.DoubleKeyValueMap: java.util.concurrent.ConcurrentHashMap get(java.lang.Object)
com.lidroid.xutils.util.core.DoubleKeyValueMap: java.lang.Object get(java.lang.Object,java.lang.Object)
com.lidroid.xutils.util.core.DoubleKeyValueMap: java.util.Collection getAllValues(java.lang.Object)
com.lidroid.xutils.util.core.DoubleKeyValueMap: java.util.Collection getAllValues()
com.lidroid.xutils.util.core.DoubleKeyValueMap: boolean containsKey(java.lang.Object,java.lang.Object)
com.lidroid.xutils.util.core.DoubleKeyValueMap: boolean containsKey(java.lang.Object)
com.lidroid.xutils.util.core.DoubleKeyValueMap: int size()
com.lidroid.xutils.util.core.DoubleKeyValueMap: void remove(java.lang.Object)
com.lidroid.xutils.util.core.DoubleKeyValueMap: void remove(java.lang.Object,java.lang.Object)
com.lidroid.xutils.util.core.DoubleKeyValueMap: void clear()
com.lidroid.xutils.util.core.KeyExpiryMap
com.lidroid.xutils.util.core.KeyExpiryMap: long serialVersionUID
com.lidroid.xutils.util.core.KeyExpiryMap: int DEFAULT_CONCURRENCY_LEVEL
com.lidroid.xutils.util.core.KeyExpiryMap: KeyExpiryMap(int,float,int)
com.lidroid.xutils.util.core.KeyExpiryMap: KeyExpiryMap(int,float)
com.lidroid.xutils.util.core.KeyExpiryMap: KeyExpiryMap(int)
com.lidroid.xutils.util.core.KeyExpiryMap: KeyExpiryMap()
com.lidroid.xutils.util.core.KeyExpiryMap: java.lang.Long get(java.lang.Object)
com.lidroid.xutils.util.core.KeyExpiryMap: java.lang.Long put(java.lang.Object,java.lang.Long)
com.lidroid.xutils.util.core.KeyExpiryMap: boolean containsKey(java.lang.Object)
com.lidroid.xutils.util.core.KeyExpiryMap: java.lang.Long remove(java.lang.Object)
com.lidroid.xutils.util.core.KeyExpiryMap: void clear()
com.lidroid.xutils.util.core.KeyExpiryMap: java.lang.Object get(java.lang.Object)
com.lidroid.xutils.util.core.KeyExpiryMap: java.lang.Object remove(java.lang.Object)
com.lidroid.xutils.util.core.KeyExpiryMap: java.lang.Object put(java.lang.Object,java.lang.Object)
com.lidroid.xutils.util.core.LruDiskCache
com.lidroid.xutils.util.core.LruDiskCache: java.lang.String JOURNAL_FILE
com.lidroid.xutils.util.core.LruDiskCache: java.lang.String JOURNAL_FILE_TEMP
com.lidroid.xutils.util.core.LruDiskCache: java.lang.String JOURNAL_FILE_BACKUP
com.lidroid.xutils.util.core.LruDiskCache: java.lang.String MAGIC
com.lidroid.xutils.util.core.LruDiskCache: java.lang.String VERSION_1
com.lidroid.xutils.util.core.LruDiskCache: long ANY_SEQUENCE_NUMBER
com.lidroid.xutils.util.core.LruDiskCache: java.util.regex.Pattern LEGAL_KEY_PATTERN
com.lidroid.xutils.util.core.LruDiskCache: java.lang.String CLEAN
com.lidroid.xutils.util.core.LruDiskCache: java.lang.String DIRTY
com.lidroid.xutils.util.core.LruDiskCache: java.lang.String REMOVE
com.lidroid.xutils.util.core.LruDiskCache: java.lang.String READ
com.lidroid.xutils.util.core.LruDiskCache: java.io.File directory
com.lidroid.xutils.util.core.LruDiskCache: java.io.File journalFile
com.lidroid.xutils.util.core.LruDiskCache: java.io.File journalFileTmp
com.lidroid.xutils.util.core.LruDiskCache: java.io.File journalFileBackup
com.lidroid.xutils.util.core.LruDiskCache: int appVersion
com.lidroid.xutils.util.core.LruDiskCache: long maxSize
com.lidroid.xutils.util.core.LruDiskCache: int valueCount
com.lidroid.xutils.util.core.LruDiskCache: long size
com.lidroid.xutils.util.core.LruDiskCache: java.io.Writer journalWriter
com.lidroid.xutils.util.core.LruDiskCache: java.util.LinkedHashMap lruEntries
com.lidroid.xutils.util.core.LruDiskCache: int redundantOpCount
com.lidroid.xutils.util.core.LruDiskCache: long nextSequenceNumber
com.lidroid.xutils.util.core.LruDiskCache: java.util.concurrent.ThreadPoolExecutor executorService
com.lidroid.xutils.util.core.LruDiskCache: java.util.concurrent.Callable cleanupCallable
com.lidroid.xutils.util.core.LruDiskCache: java.io.OutputStream NULL_OUTPUT_STREAM
com.lidroid.xutils.util.core.LruDiskCache: com.lidroid.xutils.util.core.LruDiskCache$DiskCacheFileNameGenerator diskCacheFileNameGenerator
com.lidroid.xutils.util.core.LruDiskCache: void <clinit>()
com.lidroid.xutils.util.core.LruDiskCache: LruDiskCache(java.io.File,int,int,long)
com.lidroid.xutils.util.core.LruDiskCache: com.lidroid.xutils.util.core.LruDiskCache open(java.io.File,int,int,long)
com.lidroid.xutils.util.core.LruDiskCache: void readJournal()
com.lidroid.xutils.util.core.LruDiskCache: void readJournalLine(java.lang.String)
com.lidroid.xutils.util.core.LruDiskCache: void processJournal()
com.lidroid.xutils.util.core.LruDiskCache: void rebuildJournal()
com.lidroid.xutils.util.core.LruDiskCache: void deleteIfExists(java.io.File)
com.lidroid.xutils.util.core.LruDiskCache: void renameTo(java.io.File,java.io.File,boolean)
com.lidroid.xutils.util.core.LruDiskCache: long getExpiryTimestamp(java.lang.String)
com.lidroid.xutils.util.core.LruDiskCache: java.io.File getCacheFile(java.lang.String,int)
com.lidroid.xutils.util.core.LruDiskCache: com.lidroid.xutils.util.core.LruDiskCache$Snapshot get(java.lang.String)
com.lidroid.xutils.util.core.LruDiskCache: com.lidroid.xutils.util.core.LruDiskCache$Snapshot getByDiskKey(java.lang.String)
com.lidroid.xutils.util.core.LruDiskCache: com.lidroid.xutils.util.core.LruDiskCache$Editor edit(java.lang.String)
com.lidroid.xutils.util.core.LruDiskCache: com.lidroid.xutils.util.core.LruDiskCache$Editor editByDiskKey(java.lang.String,long)
com.lidroid.xutils.util.core.LruDiskCache: java.io.File getDirectory()
com.lidroid.xutils.util.core.LruDiskCache: long getMaxSize()
com.lidroid.xutils.util.core.LruDiskCache: void setMaxSize(long)
com.lidroid.xutils.util.core.LruDiskCache: long size()
com.lidroid.xutils.util.core.LruDiskCache: void completeEdit(com.lidroid.xutils.util.core.LruDiskCache$Editor,boolean)
com.lidroid.xutils.util.core.LruDiskCache: boolean journalRebuildRequired()
com.lidroid.xutils.util.core.LruDiskCache: boolean remove(java.lang.String)
com.lidroid.xutils.util.core.LruDiskCache: boolean removeByDiskKey(java.lang.String)
com.lidroid.xutils.util.core.LruDiskCache: boolean isClosed()
com.lidroid.xutils.util.core.LruDiskCache: void checkNotClosed()
com.lidroid.xutils.util.core.LruDiskCache: void flush()
com.lidroid.xutils.util.core.LruDiskCache: void close()
com.lidroid.xutils.util.core.LruDiskCache: void trimToSize()
com.lidroid.xutils.util.core.LruDiskCache: void delete()
com.lidroid.xutils.util.core.LruDiskCache: void validateKey(java.lang.String)
com.lidroid.xutils.util.core.LruDiskCache: java.lang.String inputStreamToString(java.io.InputStream)
com.lidroid.xutils.util.core.LruDiskCache: java.lang.String readFully(java.io.Reader)
com.lidroid.xutils.util.core.LruDiskCache: void deleteContents(java.io.File)
com.lidroid.xutils.util.core.LruDiskCache: com.lidroid.xutils.util.core.LruDiskCache$DiskCacheFileNameGenerator getDiskCacheFileNameGenerator()
com.lidroid.xutils.util.core.LruDiskCache: void setDiskCacheFileNameGenerator(com.lidroid.xutils.util.core.LruDiskCache$DiskCacheFileNameGenerator)
com.lidroid.xutils.util.core.LruDiskCache: java.io.Writer access$0(com.lidroid.xutils.util.core.LruDiskCache)
com.lidroid.xutils.util.core.LruDiskCache: void access$1(com.lidroid.xutils.util.core.LruDiskCache)
com.lidroid.xutils.util.core.LruDiskCache: boolean access$2(com.lidroid.xutils.util.core.LruDiskCache)
com.lidroid.xutils.util.core.LruDiskCache: void access$3(com.lidroid.xutils.util.core.LruDiskCache)
com.lidroid.xutils.util.core.LruDiskCache: void access$4(com.lidroid.xutils.util.core.LruDiskCache,int)
com.lidroid.xutils.util.core.LruDiskCache: com.lidroid.xutils.util.core.LruDiskCache$Editor access$5(com.lidroid.xutils.util.core.LruDiskCache,java.lang.String,long)
com.lidroid.xutils.util.core.LruDiskCache: java.lang.String access$6(java.io.InputStream)
com.lidroid.xutils.util.core.LruDiskCache: int access$7(com.lidroid.xutils.util.core.LruDiskCache)
com.lidroid.xutils.util.core.LruDiskCache: java.io.File access$8(com.lidroid.xutils.util.core.LruDiskCache)
com.lidroid.xutils.util.core.LruDiskCache: java.io.OutputStream access$9()
com.lidroid.xutils.util.core.LruDiskCache: void access$10(com.lidroid.xutils.util.core.LruDiskCache,com.lidroid.xutils.util.core.LruDiskCache$Editor,boolean)
com.lidroid.xutils.util.core.LruDiskCache: boolean access$11(com.lidroid.xutils.util.core.LruDiskCache,java.lang.String)
com.lidroid.xutils.util.core.LruDiskCache$1
com.lidroid.xutils.util.core.LruDiskCache$1: com.lidroid.xutils.util.core.LruDiskCache this$0
com.lidroid.xutils.util.core.LruDiskCache$1: LruDiskCache$1(com.lidroid.xutils.util.core.LruDiskCache)
com.lidroid.xutils.util.core.LruDiskCache$1: java.lang.Void call()
com.lidroid.xutils.util.core.LruDiskCache$1: java.lang.Object call()
com.lidroid.xutils.util.core.LruDiskCache$2
com.lidroid.xutils.util.core.LruDiskCache$2: LruDiskCache$2()
com.lidroid.xutils.util.core.LruDiskCache$2: void write(int)
com.lidroid.xutils.util.core.LruDiskCache$DiskCacheFileNameGenerator
com.lidroid.xutils.util.core.LruDiskCache$DiskCacheFileNameGenerator: java.lang.String generate(java.lang.String)
com.lidroid.xutils.util.core.LruDiskCache$Editor
com.lidroid.xutils.util.core.LruDiskCache$Editor: com.lidroid.xutils.util.core.LruDiskCache$Entry entry
com.lidroid.xutils.util.core.LruDiskCache$Editor: boolean[] written
com.lidroid.xutils.util.core.LruDiskCache$Editor: boolean hasErrors
com.lidroid.xutils.util.core.LruDiskCache$Editor: boolean committed
com.lidroid.xutils.util.core.LruDiskCache$Editor: com.lidroid.xutils.util.core.LruDiskCache this$0
com.lidroid.xutils.util.core.LruDiskCache$Editor: LruDiskCache$Editor(com.lidroid.xutils.util.core.LruDiskCache,com.lidroid.xutils.util.core.LruDiskCache$Entry)
com.lidroid.xutils.util.core.LruDiskCache$Editor: void setEntryExpiryTimestamp(long)
com.lidroid.xutils.util.core.LruDiskCache$Editor: java.io.InputStream newInputStream(int)
com.lidroid.xutils.util.core.LruDiskCache$Editor: java.lang.String getString(int)
com.lidroid.xutils.util.core.LruDiskCache$Editor: java.io.OutputStream newOutputStream(int)
com.lidroid.xutils.util.core.LruDiskCache$Editor: void set(int,java.lang.String)
com.lidroid.xutils.util.core.LruDiskCache$Editor: void commit()
com.lidroid.xutils.util.core.LruDiskCache$Editor: void abort()
com.lidroid.xutils.util.core.LruDiskCache$Editor: void abortUnlessCommitted()
com.lidroid.xutils.util.core.LruDiskCache$Editor: void access$0(com.lidroid.xutils.util.core.LruDiskCache$Editor,boolean)
com.lidroid.xutils.util.core.LruDiskCache$Editor: LruDiskCache$Editor(com.lidroid.xutils.util.core.LruDiskCache,com.lidroid.xutils.util.core.LruDiskCache$Entry,com.lidroid.xutils.util.core.LruDiskCache$Editor)
com.lidroid.xutils.util.core.LruDiskCache$Editor: com.lidroid.xutils.util.core.LruDiskCache$Entry access$2(com.lidroid.xutils.util.core.LruDiskCache$Editor)
com.lidroid.xutils.util.core.LruDiskCache$Editor: boolean[] access$3(com.lidroid.xutils.util.core.LruDiskCache$Editor)
com.lidroid.xutils.util.core.LruDiskCache$Editor$FaultHidingOutputStream
com.lidroid.xutils.util.core.LruDiskCache$Editor$FaultHidingOutputStream: com.lidroid.xutils.util.core.LruDiskCache$Editor this$1
com.lidroid.xutils.util.core.LruDiskCache$Editor$FaultHidingOutputStream: LruDiskCache$Editor$FaultHidingOutputStream(com.lidroid.xutils.util.core.LruDiskCache$Editor,java.io.OutputStream)
com.lidroid.xutils.util.core.LruDiskCache$Editor$FaultHidingOutputStream: void write(int)
com.lidroid.xutils.util.core.LruDiskCache$Editor$FaultHidingOutputStream: void write(byte[],int,int)
com.lidroid.xutils.util.core.LruDiskCache$Editor$FaultHidingOutputStream: void close()
com.lidroid.xutils.util.core.LruDiskCache$Editor$FaultHidingOutputStream: void flush()
com.lidroid.xutils.util.core.LruDiskCache$Editor$FaultHidingOutputStream: LruDiskCache$Editor$FaultHidingOutputStream(com.lidroid.xutils.util.core.LruDiskCache$Editor,java.io.OutputStream,com.lidroid.xutils.util.core.LruDiskCache$Editor$FaultHidingOutputStream)
com.lidroid.xutils.util.core.LruDiskCache$Entry
com.lidroid.xutils.util.core.LruDiskCache$Entry: java.lang.String diskKey
com.lidroid.xutils.util.core.LruDiskCache$Entry: long expiryTimestamp
com.lidroid.xutils.util.core.LruDiskCache$Entry: long[] lengths
com.lidroid.xutils.util.core.LruDiskCache$Entry: boolean readable
com.lidroid.xutils.util.core.LruDiskCache$Entry: com.lidroid.xutils.util.core.LruDiskCache$Editor currentEditor
com.lidroid.xutils.util.core.LruDiskCache$Entry: long sequenceNumber
com.lidroid.xutils.util.core.LruDiskCache$Entry: com.lidroid.xutils.util.core.LruDiskCache this$0
com.lidroid.xutils.util.core.LruDiskCache$Entry: LruDiskCache$Entry(com.lidroid.xutils.util.core.LruDiskCache,java.lang.String)
com.lidroid.xutils.util.core.LruDiskCache$Entry: java.lang.String getLengths()
com.lidroid.xutils.util.core.LruDiskCache$Entry: void setLengths(java.lang.String[],int)
com.lidroid.xutils.util.core.LruDiskCache$Entry: java.io.IOException invalidLengths(java.lang.String[])
com.lidroid.xutils.util.core.LruDiskCache$Entry: java.io.File getCleanFile(int)
com.lidroid.xutils.util.core.LruDiskCache$Entry: java.io.File getDirtyFile(int)
com.lidroid.xutils.util.core.LruDiskCache$Entry: boolean access$0(com.lidroid.xutils.util.core.LruDiskCache$Entry)
com.lidroid.xutils.util.core.LruDiskCache$Entry: void access$1(com.lidroid.xutils.util.core.LruDiskCache$Entry,long)
com.lidroid.xutils.util.core.LruDiskCache$Entry: com.lidroid.xutils.util.core.LruDiskCache$Editor access$2(com.lidroid.xutils.util.core.LruDiskCache$Entry)
com.lidroid.xutils.util.core.LruDiskCache$Entry: java.lang.String access$3(com.lidroid.xutils.util.core.LruDiskCache$Entry)
com.lidroid.xutils.util.core.LruDiskCache$Entry: LruDiskCache$Entry(com.lidroid.xutils.util.core.LruDiskCache,java.lang.String,com.lidroid.xutils.util.core.LruDiskCache$Entry)
com.lidroid.xutils.util.core.LruDiskCache$Entry: void access$5(com.lidroid.xutils.util.core.LruDiskCache$Entry,boolean)
com.lidroid.xutils.util.core.LruDiskCache$Entry: void access$6(com.lidroid.xutils.util.core.LruDiskCache$Entry,com.lidroid.xutils.util.core.LruDiskCache$Editor)
com.lidroid.xutils.util.core.LruDiskCache$Entry: void access$7(com.lidroid.xutils.util.core.LruDiskCache$Entry,java.lang.String[],int)
com.lidroid.xutils.util.core.LruDiskCache$Entry: long[] access$8(com.lidroid.xutils.util.core.LruDiskCache$Entry)
com.lidroid.xutils.util.core.LruDiskCache$Entry: long access$9(com.lidroid.xutils.util.core.LruDiskCache$Entry)
com.lidroid.xutils.util.core.LruDiskCache$Entry: long access$10(com.lidroid.xutils.util.core.LruDiskCache$Entry)
com.lidroid.xutils.util.core.LruDiskCache$Entry: void access$11(com.lidroid.xutils.util.core.LruDiskCache$Entry,long)
com.lidroid.xutils.util.core.LruDiskCache$MD5DiskCacheFileNameGenerator
com.lidroid.xutils.util.core.LruDiskCache$MD5DiskCacheFileNameGenerator: com.lidroid.xutils.util.core.LruDiskCache this$0
com.lidroid.xutils.util.core.LruDiskCache$MD5DiskCacheFileNameGenerator: LruDiskCache$MD5DiskCacheFileNameGenerator(com.lidroid.xutils.util.core.LruDiskCache)
com.lidroid.xutils.util.core.LruDiskCache$MD5DiskCacheFileNameGenerator: java.lang.String generate(java.lang.String)
com.lidroid.xutils.util.core.LruDiskCache$MD5DiskCacheFileNameGenerator: java.lang.String bytesToHexString(byte[])
com.lidroid.xutils.util.core.LruDiskCache$Snapshot
com.lidroid.xutils.util.core.LruDiskCache$Snapshot: java.lang.String diskKey
com.lidroid.xutils.util.core.LruDiskCache$Snapshot: long sequenceNumber
com.lidroid.xutils.util.core.LruDiskCache$Snapshot: java.io.FileInputStream[] ins
com.lidroid.xutils.util.core.LruDiskCache$Snapshot: long[] lengths
com.lidroid.xutils.util.core.LruDiskCache$Snapshot: com.lidroid.xutils.util.core.LruDiskCache this$0
com.lidroid.xutils.util.core.LruDiskCache$Snapshot: LruDiskCache$Snapshot(com.lidroid.xutils.util.core.LruDiskCache,java.lang.String,long,java.io.FileInputStream[],long[])
com.lidroid.xutils.util.core.LruDiskCache$Snapshot: com.lidroid.xutils.util.core.LruDiskCache$Editor edit()
com.lidroid.xutils.util.core.LruDiskCache$Snapshot: java.io.FileInputStream getInputStream(int)
com.lidroid.xutils.util.core.LruDiskCache$Snapshot: java.lang.String getString(int)
com.lidroid.xutils.util.core.LruDiskCache$Snapshot: long getLength(int)
com.lidroid.xutils.util.core.LruDiskCache$Snapshot: void close()
com.lidroid.xutils.util.core.LruDiskCache$Snapshot: LruDiskCache$Snapshot(com.lidroid.xutils.util.core.LruDiskCache,java.lang.String,long,java.io.FileInputStream[],long[],com.lidroid.xutils.util.core.LruDiskCache$Snapshot)
com.lidroid.xutils.util.core.LruDiskCache$StrictLineReader
com.lidroid.xutils.util.core.LruDiskCache$StrictLineReader: byte CR
com.lidroid.xutils.util.core.LruDiskCache$StrictLineReader: byte LF
com.lidroid.xutils.util.core.LruDiskCache$StrictLineReader: java.io.InputStream in
com.lidroid.xutils.util.core.LruDiskCache$StrictLineReader: java.nio.charset.Charset charset
com.lidroid.xutils.util.core.LruDiskCache$StrictLineReader: byte[] buf
com.lidroid.xutils.util.core.LruDiskCache$StrictLineReader: int pos
com.lidroid.xutils.util.core.LruDiskCache$StrictLineReader: int end
com.lidroid.xutils.util.core.LruDiskCache$StrictLineReader: com.lidroid.xutils.util.core.LruDiskCache this$0
com.lidroid.xutils.util.core.LruDiskCache$StrictLineReader: LruDiskCache$StrictLineReader(com.lidroid.xutils.util.core.LruDiskCache,java.io.InputStream)
com.lidroid.xutils.util.core.LruDiskCache$StrictLineReader: LruDiskCache$StrictLineReader(com.lidroid.xutils.util.core.LruDiskCache,java.io.InputStream,int)
com.lidroid.xutils.util.core.LruDiskCache$StrictLineReader: void close()
com.lidroid.xutils.util.core.LruDiskCache$StrictLineReader: java.lang.String readLine()
com.lidroid.xutils.util.core.LruDiskCache$StrictLineReader: void fillBuf()
com.lidroid.xutils.util.core.LruDiskCache$StrictLineReader: java.nio.charset.Charset access$0(com.lidroid.xutils.util.core.LruDiskCache$StrictLineReader)
com.lidroid.xutils.util.core.LruDiskCache$StrictLineReader$1
com.lidroid.xutils.util.core.LruDiskCache$StrictLineReader$1: com.lidroid.xutils.util.core.LruDiskCache$StrictLineReader this$1
com.lidroid.xutils.util.core.LruDiskCache$StrictLineReader$1: LruDiskCache$StrictLineReader$1(com.lidroid.xutils.util.core.LruDiskCache$StrictLineReader,int)
com.lidroid.xutils.util.core.LruDiskCache$StrictLineReader$1: java.lang.String toString()
com.lidroid.xutils.util.core.LruMemoryCache
com.lidroid.xutils.util.core.LruMemoryCache: java.util.LinkedHashMap map
com.lidroid.xutils.util.core.LruMemoryCache: int size
com.lidroid.xutils.util.core.LruMemoryCache: int maxSize
com.lidroid.xutils.util.core.LruMemoryCache: int putCount
com.lidroid.xutils.util.core.LruMemoryCache: int createCount
com.lidroid.xutils.util.core.LruMemoryCache: int evictionCount
com.lidroid.xutils.util.core.LruMemoryCache: int hitCount
com.lidroid.xutils.util.core.LruMemoryCache: int missCount
com.lidroid.xutils.util.core.LruMemoryCache: com.lidroid.xutils.util.core.KeyExpiryMap keyExpiryMap
com.lidroid.xutils.util.core.LruMemoryCache: LruMemoryCache(int)
com.lidroid.xutils.util.core.LruMemoryCache: void setMaxSize(int)
com.lidroid.xutils.util.core.LruMemoryCache: java.lang.Object get(java.lang.Object)
com.lidroid.xutils.util.core.LruMemoryCache: java.lang.Object put(java.lang.Object,java.lang.Object)
com.lidroid.xutils.util.core.LruMemoryCache: java.lang.Object put(java.lang.Object,java.lang.Object,long)
com.lidroid.xutils.util.core.LruMemoryCache: void trimToSize(int)
com.lidroid.xutils.util.core.LruMemoryCache: java.lang.Object remove(java.lang.Object)
com.lidroid.xutils.util.core.LruMemoryCache: boolean containsKey(java.lang.Object)
com.lidroid.xutils.util.core.LruMemoryCache: void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object)
com.lidroid.xutils.util.core.LruMemoryCache: java.lang.Object create(java.lang.Object)
com.lidroid.xutils.util.core.LruMemoryCache: int safeSizeOf(java.lang.Object,java.lang.Object)
com.lidroid.xutils.util.core.LruMemoryCache: int sizeOf(java.lang.Object,java.lang.Object)
com.lidroid.xutils.util.core.LruMemoryCache: void evictAll()
com.lidroid.xutils.util.core.LruMemoryCache: int size()
com.lidroid.xutils.util.core.LruMemoryCache: int maxSize()
com.lidroid.xutils.util.core.LruMemoryCache: int hitCount()
com.lidroid.xutils.util.core.LruMemoryCache: int missCount()
com.lidroid.xutils.util.core.LruMemoryCache: int createCount()
com.lidroid.xutils.util.core.LruMemoryCache: int putCount()
com.lidroid.xutils.util.core.LruMemoryCache: int evictionCount()
com.lidroid.xutils.util.core.LruMemoryCache: java.util.Map snapshot()
com.lidroid.xutils.util.core.LruMemoryCache: java.lang.String toString()
com.lidroid.xutils.util.core.compatible.ArrayDeque
com.lidroid.xutils.util.core.compatible.ArrayDeque: java.lang.Object[] elements
com.lidroid.xutils.util.core.compatible.ArrayDeque: int head
com.lidroid.xutils.util.core.compatible.ArrayDeque: int tail
com.lidroid.xutils.util.core.compatible.ArrayDeque: int MIN_INITIAL_CAPACITY
com.lidroid.xutils.util.core.compatible.ArrayDeque: long serialVersionUID
com.lidroid.xutils.util.core.compatible.ArrayDeque: void allocateElements(int)
com.lidroid.xutils.util.core.compatible.ArrayDeque: void doubleCapacity()
com.lidroid.xutils.util.core.compatible.ArrayDeque: java.lang.Object[] copyElements(java.lang.Object[])
com.lidroid.xutils.util.core.compatible.ArrayDeque: ArrayDeque()
com.lidroid.xutils.util.core.compatible.ArrayDeque: ArrayDeque(int)
com.lidroid.xutils.util.core.compatible.ArrayDeque: ArrayDeque(java.util.Collection)
com.lidroid.xutils.util.core.compatible.ArrayDeque: void addFirst(java.lang.Object)
com.lidroid.xutils.util.core.compatible.ArrayDeque: void addLast(java.lang.Object)
com.lidroid.xutils.util.core.compatible.ArrayDeque: boolean offerFirst(java.lang.Object)
com.lidroid.xutils.util.core.compatible.ArrayDeque: boolean offerLast(java.lang.Object)
com.lidroid.xutils.util.core.compatible.ArrayDeque: java.lang.Object removeFirst()
com.lidroid.xutils.util.core.compatible.ArrayDeque: java.lang.Object removeLast()
com.lidroid.xutils.util.core.compatible.ArrayDeque: java.lang.Object pollFirst()
com.lidroid.xutils.util.core.compatible.ArrayDeque: java.lang.Object pollLast()
com.lidroid.xutils.util.core.compatible.ArrayDeque: java.lang.Object getFirst()
com.lidroid.xutils.util.core.compatible.ArrayDeque: java.lang.Object getLast()
com.lidroid.xutils.util.core.compatible.ArrayDeque: java.lang.Object peekFirst()
com.lidroid.xutils.util.core.compatible.ArrayDeque: java.lang.Object peekLast()
com.lidroid.xutils.util.core.compatible.ArrayDeque: boolean removeFirstOccurrence(java.lang.Object)
com.lidroid.xutils.util.core.compatible.ArrayDeque: boolean removeLastOccurrence(java.lang.Object)
com.lidroid.xutils.util.core.compatible.ArrayDeque: boolean add(java.lang.Object)
com.lidroid.xutils.util.core.compatible.ArrayDeque: boolean offer(java.lang.Object)
com.lidroid.xutils.util.core.compatible.ArrayDeque: java.lang.Object remove()
com.lidroid.xutils.util.core.compatible.ArrayDeque: java.lang.Object poll()
com.lidroid.xutils.util.core.compatible.ArrayDeque: java.lang.Object element()
com.lidroid.xutils.util.core.compatible.ArrayDeque: java.lang.Object peek()
com.lidroid.xutils.util.core.compatible.ArrayDeque: void push(java.lang.Object)
com.lidroid.xutils.util.core.compatible.ArrayDeque: java.lang.Object pop()
com.lidroid.xutils.util.core.compatible.ArrayDeque: boolean delete(int)
com.lidroid.xutils.util.core.compatible.ArrayDeque: int size()
com.lidroid.xutils.util.core.compatible.ArrayDeque: boolean isEmpty()
com.lidroid.xutils.util.core.compatible.ArrayDeque: java.util.Iterator iterator()
com.lidroid.xutils.util.core.compatible.ArrayDeque: java.util.Iterator descendingIterator()
com.lidroid.xutils.util.core.compatible.ArrayDeque: boolean contains(java.lang.Object)
com.lidroid.xutils.util.core.compatible.ArrayDeque: boolean remove(java.lang.Object)
com.lidroid.xutils.util.core.compatible.ArrayDeque: void clear()
com.lidroid.xutils.util.core.compatible.ArrayDeque: java.lang.Object[] toArray()
com.lidroid.xutils.util.core.compatible.ArrayDeque: java.lang.Object[] toArray(java.lang.Object[])
com.lidroid.xutils.util.core.compatible.ArrayDeque: com.lidroid.xutils.util.core.compatible.ArrayDeque clone()
com.lidroid.xutils.util.core.compatible.ArrayDeque: java.lang.Object[] copyOfRange(java.lang.Object[],int,int)
com.lidroid.xutils.util.core.compatible.ArrayDeque: void writeObject(java.io.ObjectOutputStream)
com.lidroid.xutils.util.core.compatible.ArrayDeque: void readObject(java.io.ObjectInputStream)
com.lidroid.xutils.util.core.compatible.ArrayDeque: java.lang.Object clone()
com.lidroid.xutils.util.core.compatible.ArrayDeque: int access$1(com.lidroid.xutils.util.core.compatible.ArrayDeque)
com.lidroid.xutils.util.core.compatible.ArrayDeque: int access$2(com.lidroid.xutils.util.core.compatible.ArrayDeque)
com.lidroid.xutils.util.core.compatible.ArrayDeque: java.lang.Object[] access$3(com.lidroid.xutils.util.core.compatible.ArrayDeque)
com.lidroid.xutils.util.core.compatible.ArrayDeque: boolean access$4(com.lidroid.xutils.util.core.compatible.ArrayDeque,int)
com.lidroid.xutils.util.core.compatible.ArrayDeque$DeqIterator
com.lidroid.xutils.util.core.compatible.ArrayDeque$DeqIterator: int cursor
com.lidroid.xutils.util.core.compatible.ArrayDeque$DeqIterator: int fence
com.lidroid.xutils.util.core.compatible.ArrayDeque$DeqIterator: int lastRet
com.lidroid.xutils.util.core.compatible.ArrayDeque$DeqIterator: com.lidroid.xutils.util.core.compatible.ArrayDeque this$0
com.lidroid.xutils.util.core.compatible.ArrayDeque$DeqIterator: ArrayDeque$DeqIterator(com.lidroid.xutils.util.core.compatible.ArrayDeque)
com.lidroid.xutils.util.core.compatible.ArrayDeque$DeqIterator: boolean hasNext()
com.lidroid.xutils.util.core.compatible.ArrayDeque$DeqIterator: java.lang.Object next()
com.lidroid.xutils.util.core.compatible.ArrayDeque$DeqIterator: void remove()
com.lidroid.xutils.util.core.compatible.ArrayDeque$DeqIterator: ArrayDeque$DeqIterator(com.lidroid.xutils.util.core.compatible.ArrayDeque,com.lidroid.xutils.util.core.compatible.ArrayDeque$DeqIterator)
com.lidroid.xutils.util.core.compatible.ArrayDeque$DescendingIterator
com.lidroid.xutils.util.core.compatible.ArrayDeque$DescendingIterator: int cursor
com.lidroid.xutils.util.core.compatible.ArrayDeque$DescendingIterator: int fence
com.lidroid.xutils.util.core.compatible.ArrayDeque$DescendingIterator: int lastRet
com.lidroid.xutils.util.core.compatible.ArrayDeque$DescendingIterator: com.lidroid.xutils.util.core.compatible.ArrayDeque this$0
com.lidroid.xutils.util.core.compatible.ArrayDeque$DescendingIterator: ArrayDeque$DescendingIterator(com.lidroid.xutils.util.core.compatible.ArrayDeque)
com.lidroid.xutils.util.core.compatible.ArrayDeque$DescendingIterator: boolean hasNext()
com.lidroid.xutils.util.core.compatible.ArrayDeque$DescendingIterator: java.lang.Object next()
com.lidroid.xutils.util.core.compatible.ArrayDeque$DescendingIterator: void remove()
com.lidroid.xutils.util.core.compatible.ArrayDeque$DescendingIterator: ArrayDeque$DescendingIterator(com.lidroid.xutils.util.core.compatible.ArrayDeque,com.lidroid.xutils.util.core.compatible.ArrayDeque$DescendingIterator)
com.lidroid.xutils.util.core.compatible.Deque
com.lidroid.xutils.util.core.compatible.Deque: void addFirst(java.lang.Object)
com.lidroid.xutils.util.core.compatible.Deque: void addLast(java.lang.Object)
com.lidroid.xutils.util.core.compatible.Deque: boolean offerFirst(java.lang.Object)
com.lidroid.xutils.util.core.compatible.Deque: boolean offerLast(java.lang.Object)
com.lidroid.xutils.util.core.compatible.Deque: java.lang.Object removeFirst()
com.lidroid.xutils.util.core.compatible.Deque: java.lang.Object removeLast()
com.lidroid.xutils.util.core.compatible.Deque: java.lang.Object pollFirst()
com.lidroid.xutils.util.core.compatible.Deque: java.lang.Object pollLast()
com.lidroid.xutils.util.core.compatible.Deque: java.lang.Object getFirst()
com.lidroid.xutils.util.core.compatible.Deque: java.lang.Object getLast()
com.lidroid.xutils.util.core.compatible.Deque: java.lang.Object peekFirst()
com.lidroid.xutils.util.core.compatible.Deque: java.lang.Object peekLast()
com.lidroid.xutils.util.core.compatible.Deque: boolean removeFirstOccurrence(java.lang.Object)
com.lidroid.xutils.util.core.compatible.Deque: boolean removeLastOccurrence(java.lang.Object)
com.lidroid.xutils.util.core.compatible.Deque: boolean add(java.lang.Object)
com.lidroid.xutils.util.core.compatible.Deque: boolean offer(java.lang.Object)
com.lidroid.xutils.util.core.compatible.Deque: java.lang.Object remove()
com.lidroid.xutils.util.core.compatible.Deque: java.lang.Object poll()
com.lidroid.xutils.util.core.compatible.Deque: java.lang.Object element()
com.lidroid.xutils.util.core.compatible.Deque: java.lang.Object peek()
com.lidroid.xutils.util.core.compatible.Deque: void push(java.lang.Object)
com.lidroid.xutils.util.core.compatible.Deque: java.lang.Object pop()
com.lidroid.xutils.util.core.compatible.Deque: boolean remove(java.lang.Object)
com.lidroid.xutils.util.core.compatible.Deque: boolean contains(java.lang.Object)
com.lidroid.xutils.util.core.compatible.Deque: int size()
com.lidroid.xutils.util.core.compatible.Deque: java.util.Iterator iterator()
com.lidroid.xutils.util.core.compatible.Deque: java.util.Iterator descendingIterator()
com.squareup.otto.BasicBus: java.lang.String DEFAULT_IDENTIFIER
com.squareup.otto.BasicBus: java.util.concurrent.ConcurrentMap handlersByType
com.squareup.otto.BasicBus: java.util.concurrent.ConcurrentMap producersByType
com.squareup.otto.BasicBus: java.util.Map flattenedHierarchyCache
com.squareup.otto.BasicBus: java.lang.String identifier
com.squareup.otto.BasicBus: com.squareup.otto.ThreadEnforcer enforcer
com.squareup.otto.BasicBus: com.squareup.otto.HandlerFinder handlerFinder
com.squareup.otto.BasicBus: java.lang.ThreadLocal eventsToDispatch
com.squareup.otto.BasicBus: java.lang.ThreadLocal isDispatching
com.squareup.otto.BasicBus: com.squareup.otto.ThreadEnforcer getPlatformDefault()
com.squareup.otto.BasicBus: BasicBus()
com.squareup.otto.BasicBus: BasicBus(java.lang.String)
com.squareup.otto.BasicBus: BasicBus(com.squareup.otto.ThreadEnforcer)
com.squareup.otto.BasicBus: BasicBus(com.squareup.otto.ThreadEnforcer,java.lang.String)
com.squareup.otto.BasicBus: BasicBus(com.squareup.otto.ThreadEnforcer,java.lang.String,com.squareup.otto.HandlerFinder)
com.squareup.otto.BasicBus: java.lang.String toString()
com.squareup.otto.BasicBus: void register(java.lang.Object)
com.squareup.otto.BasicBus: void dispatchProducerResultToHandler(com.squareup.otto.EventHandler,com.squareup.otto.EventProducer)
com.squareup.otto.BasicBus: void unregister(java.lang.Object)
com.squareup.otto.BasicBus: void post(java.lang.Object)
com.squareup.otto.BasicBus: void enqueueEvent(java.lang.Object,com.squareup.otto.EventHandler)
com.squareup.otto.BasicBus: void dispatchQueuedEvents()
com.squareup.otto.BasicBus: void dispatch(java.lang.Object,com.squareup.otto.EventHandler)
com.squareup.otto.BasicBus: com.squareup.otto.EventProducer getProducerForEventType(java.lang.Class)
com.squareup.otto.BasicBus: java.util.Set getHandlersForEventType(java.lang.Class)
com.squareup.otto.BasicBus: java.util.Set flattenHierarchy(java.lang.Class)
com.squareup.otto.BasicBus: java.util.Set getClassesFor(java.lang.Class)
com.squareup.otto.BasicBus: void throwRuntimeException(java.lang.String,java.lang.reflect.InvocationTargetException)
com.tencent.mm.sdk.Build
com.tencent.mm.sdk.Build: int SDK_INT
com.tencent.mm.sdk.Build: java.lang.String SDK_VERSION_NAME
com.tencent.mm.sdk.Build: int TIMELINE_SUPPORTED_SDK_INT
com.tencent.mm.sdk.Build: int EMOJI_SUPPORTED_SDK_INT
com.tencent.mm.sdk.Build: Build()
com.tencent.mm.sdk.BuildConfig
com.tencent.mm.sdk.BuildConfig: boolean DEBUG
com.tencent.mm.sdk.BuildConfig: BuildConfig()
com.tencent.mm.sdk.ConstantsUI
com.tencent.mm.sdk.ConstantsUI: java.lang.String PREF_FILE_PATH
com.tencent.mm.sdk.ConstantsUI: ConstantsUI()
com.tencent.mm.sdk.ConstantsUI$Contact
com.tencent.mm.sdk.ConstantsUI$Contact: java.lang.String KUser
com.tencent.mm.sdk.ConstantsUI$Contact: ConstantsUI$Contact()
com.tencent.mm.sdk.MMAppMgr
com.tencent.mm.sdk.MMAppMgr: MMAppMgr()
com.tencent.mm.sdk.MMAppMgr: void activate(boolean)
com.tencent.mm.sdk.MMAppMgr: android.content.SharedPreferences getSharedPreferences(android.content.Context,int)
com.tencent.mm.sdk.MMAppMgr: com.tencent.mm.sdk.plugin.IMMPluginAPI getPluginMgr(android.content.Context)
com.tencent.mm.sdk.MMSharedPreferences
com.tencent.mm.sdk.MMSharedPreferences: android.content.ContentResolver i
com.tencent.mm.sdk.MMSharedPreferences: java.lang.String[] columns
com.tencent.mm.sdk.MMSharedPreferences: java.util.HashMap j
com.tencent.mm.sdk.MMSharedPreferences: com.tencent.mm.sdk.MMSharedPreferences$REditor k
com.tencent.mm.sdk.MMSharedPreferences: MMSharedPreferences(android.content.Context)
com.tencent.mm.sdk.MMSharedPreferences: java.lang.Object getValue(java.lang.String)
com.tencent.mm.sdk.MMSharedPreferences: java.util.Map getAll()
com.tencent.mm.sdk.MMSharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)
com.tencent.mm.sdk.MMSharedPreferences: int getInt(java.lang.String,int)
com.tencent.mm.sdk.MMSharedPreferences: long getLong(java.lang.String,long)
com.tencent.mm.sdk.MMSharedPreferences: float getFloat(java.lang.String,float)
com.tencent.mm.sdk.MMSharedPreferences: boolean getBoolean(java.lang.String,boolean)
com.tencent.mm.sdk.MMSharedPreferences: boolean contains(java.lang.String)
com.tencent.mm.sdk.MMSharedPreferences: android.content.SharedPreferences$Editor edit()
com.tencent.mm.sdk.MMSharedPreferences: void registerOnSharedPreferenceChangeListener(android.content.SharedPreferences$OnSharedPreferenceChangeListener)
com.tencent.mm.sdk.MMSharedPreferences: void unregisterOnSharedPreferenceChangeListener(android.content.SharedPreferences$OnSharedPreferenceChangeListener)
com.tencent.mm.sdk.MMSharedPreferences: java.util.Set getStringSet(java.lang.String,java.util.Set)
com.tencent.mm.sdk.MMSharedPreferences$REditor
com.tencent.mm.sdk.MMSharedPreferences$REditor: java.util.Map l
com.tencent.mm.sdk.MMSharedPreferences$REditor: java.util.Set m
com.tencent.mm.sdk.MMSharedPreferences$REditor: boolean n
com.tencent.mm.sdk.MMSharedPreferences$REditor: android.content.ContentResolver i
com.tencent.mm.sdk.MMSharedPreferences$REditor: MMSharedPreferences$REditor(android.content.ContentResolver)
com.tencent.mm.sdk.MMSharedPreferences$REditor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)
com.tencent.mm.sdk.MMSharedPreferences$REditor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)
com.tencent.mm.sdk.MMSharedPreferences$REditor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)
com.tencent.mm.sdk.MMSharedPreferences$REditor: android.content.SharedPreferences$Editor putFloat(java.lang.String,float)
com.tencent.mm.sdk.MMSharedPreferences$REditor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)
com.tencent.mm.sdk.MMSharedPreferences$REditor: android.content.SharedPreferences$Editor remove(java.lang.String)
com.tencent.mm.sdk.MMSharedPreferences$REditor: android.content.SharedPreferences$Editor clear()
com.tencent.mm.sdk.MMSharedPreferences$REditor: boolean commit()
com.tencent.mm.sdk.MMSharedPreferences$REditor: void apply()
com.tencent.mm.sdk.MMSharedPreferences$REditor: android.content.SharedPreferences$Editor putStringSet(java.lang.String,java.util.Set)
com.tencent.mm.sdk.channel.ConstantsMMessage
com.tencent.mm.sdk.channel.ConstantsMMessage: java.lang.String APP_PACKAGE
com.tencent.mm.sdk.channel.ConstantsMMessage: java.lang.String SDK_VERSION
com.tencent.mm.sdk.channel.ConstantsMMessage: java.lang.String CONTENT
com.tencent.mm.sdk.channel.ConstantsMMessage: java.lang.String CHECK_SUM
com.tencent.mm.sdk.channel.ConstantsMMessage: java.lang.String ACTION_MESSAGE
com.tencent.mm.sdk.channel.ConstantsMMessage: ConstantsMMessage()
com.tencent.mm.sdk.channel.MMessage
com.tencent.mm.sdk.channel.MMessage: MMessage()
com.tencent.mm.sdk.channel.MMessage: boolean send(android.content.Context,java.lang.String,java.lang.String,java.lang.String,android.os.Bundle)
com.tencent.mm.sdk.channel.MMessage: void send(android.content.Context,java.lang.String,java.lang.String)
com.tencent.mm.sdk.channel.MMessage: void send(android.content.Context,java.lang.String,java.lang.String,java.lang.String)
com.tencent.mm.sdk.channel.MMessage$CallBack
com.tencent.mm.sdk.channel.MMessage$CallBack: void handleMessage(android.content.Intent)
com.tencent.mm.sdk.channel.MMessage$Receiver
com.tencent.mm.sdk.channel.MMessage$Receiver: java.util.Map callbacks
com.tencent.mm.sdk.channel.MMessage$Receiver: com.tencent.mm.sdk.channel.MMessage$CallBack o
com.tencent.mm.sdk.channel.MMessage$Receiver: MMessage$Receiver()
com.tencent.mm.sdk.channel.MMessage$Receiver: MMessage$Receiver(com.tencent.mm.sdk.channel.MMessage$CallBack)
com.tencent.mm.sdk.channel.MMessage$Receiver: void onReceive(android.content.Context,android.content.Intent)
com.tencent.mm.sdk.channel.MMessage$Receiver: void registerCallBack(java.lang.String,com.tencent.mm.sdk.channel.MMessage$CallBack)
com.tencent.mm.sdk.channel.MMessage$Receiver: void unregisterCallBack(java.lang.String)
com.tencent.mm.sdk.channel.MMessage$Receiver: void <clinit>()
com.tencent.mm.sdk.channel.MMessageAct
com.tencent.mm.sdk.channel.MMessageAct: MMessageAct()
com.tencent.mm.sdk.channel.MMessageAct: boolean send(android.content.Context,java.lang.String,java.lang.String,java.lang.String,android.os.Bundle)
com.tencent.mm.sdk.channel.MMessageAct: boolean send(android.content.Context,java.lang.String,java.lang.String)
com.tencent.mm.sdk.channel.MMessageAct: boolean send(android.content.Context,java.lang.String,java.lang.String,android.os.Bundle)
com.tencent.mm.sdk.channel.MMessageAct: boolean sendToWx(android.content.Context,java.lang.String,android.os.Bundle)
com.tencent.mm.sdk.channel.MMessageAct: boolean sendToWx(android.content.Context,java.lang.String)
com.tencent.mm.sdk.channel.MMessageUtil
com.tencent.mm.sdk.channel.MMessageUtil: MMessageUtil()
com.tencent.mm.sdk.channel.MMessageUtil: byte[] a(java.lang.String,java.lang.String)
com.tencent.mm.sdk.channel.package-info
com.tencent.mm.sdk.contact.RContact
com.tencent.mm.sdk.contact.RContact: java.lang.reflect.Field[] p
com.tencent.mm.sdk.contact.RContact: java.lang.String[] COLUMNS
com.tencent.mm.sdk.contact.RContact: java.lang.String COL_USERNAME
com.tencent.mm.sdk.contact.RContact: java.lang.String COL_ALIAS
com.tencent.mm.sdk.contact.RContact: java.lang.String COL_CONREMARK
com.tencent.mm.sdk.contact.RContact: java.lang.String COL_DOMAINLIST
com.tencent.mm.sdk.contact.RContact: java.lang.String COL_NICKNAME
com.tencent.mm.sdk.contact.RContact: java.lang.String COL_PYINITIAL
com.tencent.mm.sdk.contact.RContact: java.lang.String COL_QUANPIN
com.tencent.mm.sdk.contact.RContact: java.lang.String COL_SHOWHEAD
com.tencent.mm.sdk.contact.RContact: java.lang.String COL_TYPE
com.tencent.mm.sdk.contact.RContact: java.lang.String COL_WEIBOFLAG
com.tencent.mm.sdk.contact.RContact: java.lang.String COL_WEIBONICKNAME
com.tencent.mm.sdk.contact.RContact: java.lang.String COL_CONREMARK_PYFULL
com.tencent.mm.sdk.contact.RContact: java.lang.String COL_CONREMARK_PYSHORT
com.tencent.mm.sdk.contact.RContact: java.lang.String COL_VERIFY_FLAG
com.tencent.mm.sdk.contact.RContact: long contactId
com.tencent.mm.sdk.contact.RContact: java.lang.String field_username
com.tencent.mm.sdk.contact.RContact: java.lang.String field_alias
com.tencent.mm.sdk.contact.RContact: java.lang.String field_conRemark
com.tencent.mm.sdk.contact.RContact: java.lang.String field_domainList
com.tencent.mm.sdk.contact.RContact: java.lang.String field_nickname
com.tencent.mm.sdk.contact.RContact: java.lang.String field_pyInitial
com.tencent.mm.sdk.contact.RContact: java.lang.String field_quanPin
com.tencent.mm.sdk.contact.RContact: int field_showHead
com.tencent.mm.sdk.contact.RContact: int field_type
com.tencent.mm.sdk.contact.RContact: int field_weiboFlag
com.tencent.mm.sdk.contact.RContact: java.lang.String field_weiboNickname
com.tencent.mm.sdk.contact.RContact: java.lang.String field_conRemarkPYFull
com.tencent.mm.sdk.contact.RContact: java.lang.String field_conRemarkPYShort
com.tencent.mm.sdk.contact.RContact: byte[] field_lvbuff
com.tencent.mm.sdk.contact.RContact: int field_verifyFlag
com.tencent.mm.sdk.contact.RContact: int q
com.tencent.mm.sdk.contact.RContact: int r
com.tencent.mm.sdk.contact.RContact: java.lang.String s
com.tencent.mm.sdk.contact.RContact: long u
com.tencent.mm.sdk.contact.RContact: int h
com.tencent.mm.sdk.contact.RContact: java.lang.String v
com.tencent.mm.sdk.contact.RContact: java.lang.String w
com.tencent.mm.sdk.contact.RContact: int x
com.tencent.mm.sdk.contact.RContact: int y
com.tencent.mm.sdk.contact.RContact: java.lang.String z
com.tencent.mm.sdk.contact.RContact: java.lang.String A
com.tencent.mm.sdk.contact.RContact: int B
com.tencent.mm.sdk.contact.RContact: int C
com.tencent.mm.sdk.contact.RContact: java.lang.String D
com.tencent.mm.sdk.contact.RContact: java.lang.String E
com.tencent.mm.sdk.contact.RContact: java.lang.String F
com.tencent.mm.sdk.contact.RContact: java.lang.String G
com.tencent.mm.sdk.contact.RContact: int H
com.tencent.mm.sdk.contact.RContact: int I
com.tencent.mm.sdk.contact.RContact: java.lang.String J
com.tencent.mm.sdk.contact.RContact: java.lang.String K
com.tencent.mm.sdk.contact.RContact: java.lang.String L
com.tencent.mm.sdk.contact.RContact: java.util.Map M
com.tencent.mm.sdk.contact.RContact: java.util.Map N
com.tencent.mm.sdk.contact.RContact: int DEL_CONTACT_MSG
com.tencent.mm.sdk.contact.RContact: int NOT_IN_CHAT_LIST
com.tencent.mm.sdk.contact.RContact: int FAVOUR_CONTACT_SHOW_HEAD_CODE
com.tencent.mm.sdk.contact.RContact: java.lang.String FAVOUR_CONTACT_SHOW_HEAD_CHAR
com.tencent.mm.sdk.contact.RContact: int MM_CONTACTFLAG_NULL
com.tencent.mm.sdk.contact.RContact: int MM_SEX_UNKNOWN
com.tencent.mm.sdk.contact.RContact: int MM_SEX_MALE
com.tencent.mm.sdk.contact.RContact: int MM_SEX_FEMALE
com.tencent.mm.sdk.contact.RContact: int MM_CONTACT_WEIXIN
com.tencent.mm.sdk.contact.RContact: int MM_CONTACT_QQMICROBLOG
com.tencent.mm.sdk.contact.RContact: int MM_CONTACT_CHATROOM
com.tencent.mm.sdk.contact.RContact: int MM_CONTACT_EMAIL
com.tencent.mm.sdk.contact.RContact: int MM_CONTACT_QQ
com.tencent.mm.sdk.contact.RContact: int MM_CONTACT_BOTTLE
com.tencent.mm.sdk.contact.RContact: int MM_CONTACTFLAG_CONTACT
com.tencent.mm.sdk.contact.RContact: int MM_CONTACTFLAG_CHATCONTACT
com.tencent.mm.sdk.contact.RContact: int MM_CONTACTFLAG_CHATROOMCONTACT
com.tencent.mm.sdk.contact.RContact: int MM_CONTACTFLAG_BLACKLISTCONTACT
com.tencent.mm.sdk.contact.RContact: int MM_CONTACTFLAG_DOMAINCONTACT
com.tencent.mm.sdk.contact.RContact: int MM_CONTACTFLAG_HIDECONTACT
com.tencent.mm.sdk.contact.RContact: int MM_CONTACTFLAG_FAVOURCONTACT
com.tencent.mm.sdk.contact.RContact: int MM_CONTACTFLAG_ALL
com.tencent.mm.sdk.contact.RContact: int MM_CONTACTIMGFLAG_NOTMODIFY
com.tencent.mm.sdk.contact.RContact: int MM_CONTACTIMGFLAG_MODIFY
com.tencent.mm.sdk.contact.RContact: int MM_CONTACTIMGFLAG_HAS_HEADIMG
com.tencent.mm.sdk.contact.RContact: int MM_CONTACTIMGFLAG_HAS_NO_HEADIMG
com.tencent.mm.sdk.contact.RContact: int MM_CONTACTIMGFLAG_LOCAL_EXIST
com.tencent.mm.sdk.contact.RContact: int COL_ID_INVALID_VALUE
com.tencent.mm.sdk.contact.RContact: java.lang.reflect.Field[] fields()
com.tencent.mm.sdk.contact.RContact: void reset()
com.tencent.mm.sdk.contact.RContact: RContact(java.lang.String)
com.tencent.mm.sdk.contact.RContact: RContact()
com.tencent.mm.sdk.contact.RContact: void setHardCodeNickMaps(java.util.Map)
com.tencent.mm.sdk.contact.RContact: void setHardCodeAliasMaps(java.util.Map)
com.tencent.mm.sdk.contact.RContact: int calculateShowHead()
com.tencent.mm.sdk.contact.RContact: void setNullContact()
com.tencent.mm.sdk.contact.RContact: void setChatroomContact()
com.tencent.mm.sdk.contact.RContact: void setContact()
com.tencent.mm.sdk.contact.RContact: void unSetContact()
com.tencent.mm.sdk.contact.RContact: void setBlackList()
com.tencent.mm.sdk.contact.RContact: void unSetBlackList()
com.tencent.mm.sdk.contact.RContact: void setChatContact()
com.tencent.mm.sdk.contact.RContact: void unSetChatContact()
com.tencent.mm.sdk.contact.RContact: void setHidden()
com.tencent.mm.sdk.contact.RContact: void unSetHidden()
com.tencent.mm.sdk.contact.RContact: void setFavour()
com.tencent.mm.sdk.contact.RContact: void unSetFavour()
com.tencent.mm.sdk.contact.RContact: int getContactBit()
com.tencent.mm.sdk.contact.RContact: int getBlackListContactBit()
com.tencent.mm.sdk.contact.RContact: int getDomainContactBit()
com.tencent.mm.sdk.contact.RContact: int getHiddenContactBit()
com.tencent.mm.sdk.contact.RContact: boolean isContact()
com.tencent.mm.sdk.contact.RContact: boolean isContact(int)
com.tencent.mm.sdk.contact.RContact: boolean isChatContact()
com.tencent.mm.sdk.contact.RContact: boolean isHidden()
com.tencent.mm.sdk.contact.RContact: boolean isImgLocalExist()
com.tencent.mm.sdk.contact.RContact: boolean isChatRoomContact()
com.tencent.mm.sdk.contact.RContact: boolean isBlackListContact()
com.tencent.mm.sdk.contact.RContact: boolean isDomainContact()
com.tencent.mm.sdk.contact.RContact: boolean isFavourContact()
com.tencent.mm.sdk.contact.RContact: boolean isLetter(char)
com.tencent.mm.sdk.contact.RContact: int getContactID()
com.tencent.mm.sdk.contact.RContact: int getSex()
com.tencent.mm.sdk.contact.RContact: void setSex(int)
com.tencent.mm.sdk.contact.RContact: int getType()
com.tencent.mm.sdk.contact.RContact: void setType(int)
com.tencent.mm.sdk.contact.RContact: int getShowHead()
com.tencent.mm.sdk.contact.RContact: void setShowHead(int)
com.tencent.mm.sdk.contact.RContact: java.lang.String getUsername()
com.tencent.mm.sdk.contact.RContact: void setUsername(java.lang.String)
com.tencent.mm.sdk.contact.RContact: java.lang.String getNickname()
com.tencent.mm.sdk.contact.RContact: void setNickname(java.lang.String)
com.tencent.mm.sdk.contact.RContact: java.lang.String getFaceBookUsername()
com.tencent.mm.sdk.contact.RContact: void setFaceBookUsername(java.lang.String)
com.tencent.mm.sdk.contact.RContact: long getFaceBookId()
com.tencent.mm.sdk.contact.RContact: void setFaceBookId(long)
com.tencent.mm.sdk.contact.RContact: java.lang.String getPyInitial()
com.tencent.mm.sdk.contact.RContact: void setPyInitial(java.lang.String)
com.tencent.mm.sdk.contact.RContact: java.lang.String getQuanPin()
com.tencent.mm.sdk.contact.RContact: void setQuanPin(java.lang.String)
com.tencent.mm.sdk.contact.RContact: void setAlias(java.lang.String)
com.tencent.mm.sdk.contact.RContact: java.lang.String getAlias()
com.tencent.mm.sdk.contact.RContact: java.lang.String getDisplayNick()
com.tencent.mm.sdk.contact.RContact: java.lang.String getDisplayRemark()
com.tencent.mm.sdk.contact.RContact: java.lang.String getDisplayUser()
com.tencent.mm.sdk.contact.RContact: java.lang.String formatDisplayNick(java.lang.String)
com.tencent.mm.sdk.contact.RContact: int getUin()
com.tencent.mm.sdk.contact.RContact: java.lang.String getEmail()
com.tencent.mm.sdk.contact.RContact: java.lang.String getMobile()
com.tencent.mm.sdk.contact.RContact: int getShowFlag()
com.tencent.mm.sdk.contact.RContact: int getConType()
com.tencent.mm.sdk.contact.RContact: java.lang.String getConRemark()
com.tencent.mm.sdk.contact.RContact: java.lang.String getConRemarkPYShort()
com.tencent.mm.sdk.contact.RContact: java.lang.String getConRemarkPYFull()
com.tencent.mm.sdk.contact.RContact: java.lang.String getConSMBlog()
com.tencent.mm.sdk.contact.RContact: java.lang.String getConQQMBlog()
com.tencent.mm.sdk.contact.RContact: java.lang.String getDomainList()
com.tencent.mm.sdk.contact.RContact: int getChatroomNotify()
com.tencent.mm.sdk.contact.RContact: int getImgFlag()
com.tencent.mm.sdk.contact.RContact: int getPersonalCard()
com.tencent.mm.sdk.contact.RContact: void setPersonalCard(int)
com.tencent.mm.sdk.contact.RContact: java.lang.String getSignature()
com.tencent.mm.sdk.contact.RContact: void setSignature(java.lang.String)
com.tencent.mm.sdk.contact.RContact: java.lang.String getProvince()
com.tencent.mm.sdk.contact.RContact: void setProvince(java.lang.String)
com.tencent.mm.sdk.contact.RContact: java.lang.String getCity()
com.tencent.mm.sdk.contact.RContact: void setCity(java.lang.String)
com.tencent.mm.sdk.contact.RContact: void setDistance(java.lang.String)
com.tencent.mm.sdk.contact.RContact: java.lang.String getDistance()
com.tencent.mm.sdk.contact.RContact: void setFromType(int)
com.tencent.mm.sdk.contact.RContact: int getFromType()
com.tencent.mm.sdk.contact.RContact: void setSource(int)
com.tencent.mm.sdk.contact.RContact: int getSource()
com.tencent.mm.sdk.contact.RContact: void setWeibo(java.lang.String)
com.tencent.mm.sdk.contact.RContact: java.lang.String getWeibo()
com.tencent.mm.sdk.contact.RContact: int getWeiboFlag()
com.tencent.mm.sdk.contact.RContact: void setWeiboFlag(int)
com.tencent.mm.sdk.contact.RContact: java.lang.String getWeiboNickName()
com.tencent.mm.sdk.contact.RContact: void setWeiboNickName(java.lang.String)
com.tencent.mm.sdk.contact.RContact: void setUin(int)
com.tencent.mm.sdk.contact.RContact: void setEmail(java.lang.String)
com.tencent.mm.sdk.contact.RContact: void setMobile(java.lang.String)
com.tencent.mm.sdk.contact.RContact: void setShowFlag(int)
com.tencent.mm.sdk.contact.RContact: void setConType(int)
com.tencent.mm.sdk.contact.RContact: void setConRemark(java.lang.String)
com.tencent.mm.sdk.contact.RContact: void setConRemarkPYShort(java.lang.String)
com.tencent.mm.sdk.contact.RContact: void setConRemarkPYFull(java.lang.String)
com.tencent.mm.sdk.contact.RContact: void setConSMBlog(java.lang.String)
com.tencent.mm.sdk.contact.RContact: void setConQQMBlog(java.lang.String)
com.tencent.mm.sdk.contact.RContact: void setDomainList(java.lang.String)
com.tencent.mm.sdk.contact.RContact: void setChatroomNotify(int)
com.tencent.mm.sdk.contact.RContact: void setImgFlag(int)
com.tencent.mm.sdk.contact.RContact: int getVerifyFlag()
com.tencent.mm.sdk.contact.RContact: void setVerifyFlag(int)
com.tencent.mm.sdk.contact.RContact: java.lang.String getVerifyInfo()
com.tencent.mm.sdk.contact.RContact: void setVerifyInfo(java.lang.String)
com.tencent.mm.sdk.contact.RContact: java.lang.String getRegionCode()
com.tencent.mm.sdk.contact.RContact: void setRegionCode(java.lang.String)
com.tencent.mm.sdk.contact.RContact: byte[] a()
com.tencent.mm.sdk.contact.RContact: void convertFrom(android.database.Cursor)
com.tencent.mm.sdk.contact.RContact: android.content.ContentValues convertTo()
com.tencent.mm.sdk.contact.RContact: void <clinit>()
com.tencent.mm.sdk.contact.RContactAvatar
com.tencent.mm.sdk.contact.RContactAvatar: RContactAvatar()
com.tencent.mm.sdk.contact.RContactDB
com.tencent.mm.sdk.contact.RContactDB: java.util.Map O
com.tencent.mm.sdk.contact.RContactDB: RContactDB(android.content.Context)
com.tencent.mm.sdk.contact.RContactDB: android.net.Uri getUriFromTable(java.lang.String)
com.tencent.mm.sdk.contact.RContactDB: void <clinit>()
com.tencent.mm.sdk.contact.RContactStorage
com.tencent.mm.sdk.contact.RContactStorage: java.lang.String AUTHORITY
com.tencent.mm.sdk.contact.RContactStorage: java.lang.String TABLE
com.tencent.mm.sdk.contact.RContactStorage: java.lang.String PRIMARY_KEY
com.tencent.mm.sdk.contact.RContactStorage: com.tencent.mm.sdk.contact.RContactStorage create(android.content.Context)
com.tencent.mm.sdk.contact.RContactStorage: RContactStorage(com.tencent.mm.sdk.storage.ISQLiteDatabase)
com.tencent.mm.sdk.contact.RContactStorage: java.lang.String getTableName()
com.tencent.mm.sdk.contact.RContactStorage: java.lang.String getPrimaryKey()
com.tencent.mm.sdk.contact.RContactStorage: java.lang.String[] getColumns()
com.tencent.mm.sdk.contact.RContactStorage: com.tencent.mm.sdk.contact.RContact get(java.lang.String)
com.tencent.mm.sdk.contact.package-info
com.tencent.mm.sdk.conversation.RConversation
com.tencent.mm.sdk.conversation.RConversation: java.lang.reflect.Field[] p
com.tencent.mm.sdk.conversation.RConversation: java.lang.String[] COLUMNS
com.tencent.mm.sdk.conversation.RConversation: int NOT_SHOWN_TIPS
com.tencent.mm.sdk.conversation.RConversation: int HAS_SHOWN_TIPS
com.tencent.mm.sdk.conversation.RConversation: int FLAG_NORMAL
com.tencent.mm.sdk.conversation.RConversation: int ROOM_MUTE_ON
com.tencent.mm.sdk.conversation.RConversation: int ROOM_MUTE_OFF
com.tencent.mm.sdk.conversation.RConversation: int field_unReadCount
com.tencent.mm.sdk.conversation.RConversation: int field_chatmode
com.tencent.mm.sdk.conversation.RConversation: int field_status
com.tencent.mm.sdk.conversation.RConversation: int field_isSend
com.tencent.mm.sdk.conversation.RConversation: long field_conversationTime
com.tencent.mm.sdk.conversation.RConversation: java.lang.String field_username
com.tencent.mm.sdk.conversation.RConversation: java.lang.String field_content
com.tencent.mm.sdk.conversation.RConversation: java.lang.String field_msgType
com.tencent.mm.sdk.conversation.RConversation: java.lang.String field_customNotify
com.tencent.mm.sdk.conversation.RConversation: int field_showTips
com.tencent.mm.sdk.conversation.RConversation: long field_flag
com.tencent.mm.sdk.conversation.RConversation: int COL_UNREAD_COUNT_INVALID_VALUE
com.tencent.mm.sdk.conversation.RConversation: int INDEX_UNREAD_COUNT
com.tencent.mm.sdk.conversation.RConversation: int INDEX_STATUE
com.tencent.mm.sdk.conversation.RConversation: int INDEX_IS_SEND
com.tencent.mm.sdk.conversation.RConversation: int INDEX_CONVERSATION_TIME
com.tencent.mm.sdk.conversation.RConversation: int INDEX_USERNAME
com.tencent.mm.sdk.conversation.RConversation: int INDEX_CONTENT
com.tencent.mm.sdk.conversation.RConversation: int INDEX_MSGTYPE
com.tencent.mm.sdk.conversation.RConversation: int INDEX_FLAG
com.tencent.mm.sdk.conversation.RConversation: java.lang.String OLD_TABLE
com.tencent.mm.sdk.conversation.RConversation: java.lang.String OLD_BOTTLE_TABLE
com.tencent.mm.sdk.conversation.RConversation: java.lang.String COL_UNREAD_COUNT
com.tencent.mm.sdk.conversation.RConversation: java.lang.String COL_CHATMODE
com.tencent.mm.sdk.conversation.RConversation: java.lang.String COL_STATUS
com.tencent.mm.sdk.conversation.RConversation: java.lang.String COL_IS_SEND
com.tencent.mm.sdk.conversation.RConversation: java.lang.String COL_CONVERSATION_TIME
com.tencent.mm.sdk.conversation.RConversation: java.lang.String COL_USERNAME
com.tencent.mm.sdk.conversation.RConversation: java.lang.String COL_CONTENT
com.tencent.mm.sdk.conversation.RConversation: java.lang.String COL_MSGTYPE
com.tencent.mm.sdk.conversation.RConversation: java.lang.String COL_FLAG
com.tencent.mm.sdk.conversation.RConversation: long MAX_TIME
com.tencent.mm.sdk.conversation.RConversation: java.lang.reflect.Field[] fields()
com.tencent.mm.sdk.conversation.RConversation: java.lang.reflect.Field[] getFields()
com.tencent.mm.sdk.conversation.RConversation: RConversation()
com.tencent.mm.sdk.conversation.RConversation: RConversation(java.lang.String)
com.tencent.mm.sdk.conversation.RConversation: int getUnReadCount()
com.tencent.mm.sdk.conversation.RConversation: void setUnReadCount(int)
com.tencent.mm.sdk.conversation.RConversation: int getStatus()
com.tencent.mm.sdk.conversation.RConversation: void setStatus(int)
com.tencent.mm.sdk.conversation.RConversation: int getIsSend()
com.tencent.mm.sdk.conversation.RConversation: void setIsSend(int)
com.tencent.mm.sdk.conversation.RConversation: int getChatmode()
com.tencent.mm.sdk.conversation.RConversation: void setChatmode(int)
com.tencent.mm.sdk.conversation.RConversation: long getConversationTime()
com.tencent.mm.sdk.conversation.RConversation: void setConversationTime(long)
com.tencent.mm.sdk.conversation.RConversation: java.lang.String getUsername()
com.tencent.mm.sdk.conversation.RConversation: void setUsername(java.lang.String)
com.tencent.mm.sdk.conversation.RConversation: java.lang.String getCustomNotify()
com.tencent.mm.sdk.conversation.RConversation: void setCustomNotify(java.lang.String)
com.tencent.mm.sdk.conversation.RConversation: java.lang.String getContent()
com.tencent.mm.sdk.conversation.RConversation: void setContent(java.lang.String)
com.tencent.mm.sdk.conversation.RConversation: java.lang.String getMsgType()
com.tencent.mm.sdk.conversation.RConversation: void setMsgType(java.lang.String)
com.tencent.mm.sdk.conversation.RConversation: int getShowTips()
com.tencent.mm.sdk.conversation.RConversation: void setShowTips(int)
com.tencent.mm.sdk.conversation.RConversation: long getFlag()
com.tencent.mm.sdk.conversation.RConversation: void setFlag(long)
com.tencent.mm.sdk.conversation.RConversation: void <clinit>()
com.tencent.mm.sdk.conversation.RConversationDB
com.tencent.mm.sdk.conversation.RConversationDB: java.util.Map O
com.tencent.mm.sdk.conversation.RConversationDB: RConversationDB(android.content.Context)
com.tencent.mm.sdk.conversation.RConversationDB: android.net.Uri getUriFromTable(java.lang.String)
com.tencent.mm.sdk.conversation.RConversationDB: void <clinit>()
com.tencent.mm.sdk.conversation.RConversationStorage
com.tencent.mm.sdk.conversation.RConversationStorage: java.lang.String AUTHORITY
com.tencent.mm.sdk.conversation.RConversationStorage: java.lang.String TABLE
com.tencent.mm.sdk.conversation.RConversationStorage: java.lang.String PRIMARY_KEY
com.tencent.mm.sdk.conversation.RConversationStorage: com.tencent.mm.sdk.conversation.RConversationStorage create(android.content.Context)
com.tencent.mm.sdk.conversation.RConversationStorage: RConversationStorage(com.tencent.mm.sdk.storage.ISQLiteDatabase)
com.tencent.mm.sdk.conversation.RConversationStorage: java.lang.String getTableName()
com.tencent.mm.sdk.conversation.RConversationStorage: java.lang.String getPrimaryKey()
com.tencent.mm.sdk.conversation.RConversationStorage: java.lang.String[] getColumns()
com.tencent.mm.sdk.conversation.RConversationStorage: com.tencent.mm.sdk.conversation.RConversation get(java.lang.String)
com.tencent.mm.sdk.conversation.package-info
com.tencent.mm.sdk.message.RMsgInfo
com.tencent.mm.sdk.message.RMsgInfo: java.lang.reflect.Field[] p
com.tencent.mm.sdk.message.RMsgInfo: java.lang.String[] COLUMNS
com.tencent.mm.sdk.message.RMsgInfo: long field_msgId
com.tencent.mm.sdk.message.RMsgInfo: int field_msgSvrId
com.tencent.mm.sdk.message.RMsgInfo: int field_type
com.tencent.mm.sdk.message.RMsgInfo: int field_status
com.tencent.mm.sdk.message.RMsgInfo: int field_isSend
com.tencent.mm.sdk.message.RMsgInfo: int field_isShowTimer
com.tencent.mm.sdk.message.RMsgInfo: long field_createTime
com.tencent.mm.sdk.message.RMsgInfo: java.lang.String field_talker
com.tencent.mm.sdk.message.RMsgInfo: java.lang.String field_content
com.tencent.mm.sdk.message.RMsgInfo: java.lang.String field_imgPath
com.tencent.mm.sdk.message.RMsgInfo: java.lang.String field_reserved
com.tencent.mm.sdk.message.RMsgInfo: byte[] field_lvBuffer
com.tencent.mm.sdk.message.RMsgInfo: java.lang.String commentUrl
com.tencent.mm.sdk.message.RMsgInfo: java.lang.String COL_ID
com.tencent.mm.sdk.message.RMsgInfo: java.lang.String COL_ID_SVR
com.tencent.mm.sdk.message.RMsgInfo: java.lang.String COL_TYPE
com.tencent.mm.sdk.message.RMsgInfo: java.lang.String COL_STATUS
com.tencent.mm.sdk.message.RMsgInfo: java.lang.String COL_IS_SEND
com.tencent.mm.sdk.message.RMsgInfo: java.lang.String COL_IS_SHOWTIMER
com.tencent.mm.sdk.message.RMsgInfo: java.lang.String COL_CREATE_TIME
com.tencent.mm.sdk.message.RMsgInfo: java.lang.String COL_TALKER
com.tencent.mm.sdk.message.RMsgInfo: java.lang.String COL_CONTENT
com.tencent.mm.sdk.message.RMsgInfo: java.lang.String COL_IMG_PATH
com.tencent.mm.sdk.message.RMsgInfo: java.lang.String COL_RESERVED
com.tencent.mm.sdk.message.RMsgInfo: java.lang.String COL_LVBUFFER
com.tencent.mm.sdk.message.RMsgInfo: java.lang.reflect.Field[] fields()
com.tencent.mm.sdk.message.RMsgInfo: RMsgInfo()
com.tencent.mm.sdk.message.RMsgInfo: RMsgInfo(long)
com.tencent.mm.sdk.message.RMsgInfo: RMsgInfo(java.lang.String)
com.tencent.mm.sdk.message.RMsgInfo: void <clinit>()
com.tencent.mm.sdk.message.RMsgInfoDB
com.tencent.mm.sdk.message.RMsgInfoDB: java.util.Map O
com.tencent.mm.sdk.message.RMsgInfoDB: java.lang.String TABLE
com.tencent.mm.sdk.message.RMsgInfoDB: RMsgInfoDB(android.content.Context)
com.tencent.mm.sdk.message.RMsgInfoDB: android.net.Uri getUriFromTable(java.lang.String)
com.tencent.mm.sdk.message.RMsgInfoDB: void <clinit>()
com.tencent.mm.sdk.message.RMsgInfoStorage
com.tencent.mm.sdk.message.RMsgInfoStorage: java.lang.String AUTHORITY
com.tencent.mm.sdk.message.RMsgInfoStorage: java.lang.String PRIMARY_KEY
com.tencent.mm.sdk.message.RMsgInfoStorage: com.tencent.mm.sdk.storage.ISQLiteDatabase P
com.tencent.mm.sdk.message.RMsgInfoStorage: com.tencent.mm.sdk.message.RMsgInfoStorage create(android.content.Context)
com.tencent.mm.sdk.message.RMsgInfoStorage: RMsgInfoStorage(com.tencent.mm.sdk.storage.ISQLiteDatabase)
com.tencent.mm.sdk.message.RMsgInfoStorage: long doInsert(com.tencent.mm.sdk.message.RMsgInfo)
com.tencent.mm.sdk.message.RMsgInfoStorage: int doDelete(long)
com.tencent.mm.sdk.message.RMsgInfoStorage: int doUpdate(long,com.tencent.mm.sdk.message.RMsgInfo)
com.tencent.mm.sdk.message.RMsgInfoStorage: com.tencent.mm.sdk.message.RMsgInfo getMsgById(long)
com.tencent.mm.sdk.message.RMsgInfoStorage: android.database.Cursor getMsgByTalker(java.lang.String)
com.tencent.mm.sdk.openapi.BaseReq
com.tencent.mm.sdk.openapi.BaseReq: java.lang.String transaction
com.tencent.mm.sdk.openapi.BaseReq: BaseReq()
com.tencent.mm.sdk.openapi.BaseReq: int getType()
com.tencent.mm.sdk.openapi.BaseReq: void toBundle(android.os.Bundle)
com.tencent.mm.sdk.openapi.BaseReq: void fromBundle(android.os.Bundle)
com.tencent.mm.sdk.openapi.BaseReq: boolean checkArgs()
com.tencent.mm.sdk.openapi.BaseResp
com.tencent.mm.sdk.openapi.BaseResp: int errCode
com.tencent.mm.sdk.openapi.BaseResp: java.lang.String errStr
com.tencent.mm.sdk.openapi.BaseResp: java.lang.String transaction
com.tencent.mm.sdk.openapi.BaseResp: BaseResp()
com.tencent.mm.sdk.openapi.BaseResp: int getType()
com.tencent.mm.sdk.openapi.BaseResp: void toBundle(android.os.Bundle)
com.tencent.mm.sdk.openapi.BaseResp: void fromBundle(android.os.Bundle)
com.tencent.mm.sdk.openapi.BaseResp: boolean checkArgs()
com.tencent.mm.sdk.openapi.BaseResp$ErrCode
com.tencent.mm.sdk.openapi.BaseResp$ErrCode: int ERR_OK
com.tencent.mm.sdk.openapi.BaseResp$ErrCode: int ERR_COMM
com.tencent.mm.sdk.openapi.BaseResp$ErrCode: int ERR_USER_CANCEL
com.tencent.mm.sdk.openapi.BaseResp$ErrCode: int ERR_SENT_FAILED
com.tencent.mm.sdk.openapi.BaseResp$ErrCode: int ERR_AUTH_DENIED
com.tencent.mm.sdk.openapi.BaseResp$ErrCode: int ERR_UNSUPPORT
com.tencent.mm.sdk.openapi.ConstantsAPI
com.tencent.mm.sdk.openapi.ConstantsAPI: java.lang.String ACTION_HANDLE_APP_REGISTER
com.tencent.mm.sdk.openapi.ConstantsAPI: java.lang.String ACTION_HANDLE_APP_UNREGISTER
com.tencent.mm.sdk.openapi.ConstantsAPI: java.lang.String ACTION_REFRESH_WXAPP
com.tencent.mm.sdk.openapi.ConstantsAPI: int COMMAND_UNKNOWN
com.tencent.mm.sdk.openapi.ConstantsAPI: int COMMAND_SENDAUTH
com.tencent.mm.sdk.openapi.ConstantsAPI: int COMMAND_SENDMESSAGE_TO_WX
com.tencent.mm.sdk.openapi.ConstantsAPI: int COMMAND_GETMESSAGE_FROM_WX
com.tencent.mm.sdk.openapi.ConstantsAPI: int COMMAND_SHOWMESSAGE_FROM_WX
com.tencent.mm.sdk.openapi.ConstantsAPI: java.lang.String WX_TOKEN_KEY
com.tencent.mm.sdk.openapi.ConstantsAPI: java.lang.String WX_TOKEN_VALUE
com.tencent.mm.sdk.openapi.GetMessageFromWX
com.tencent.mm.sdk.openapi.GetMessageFromWX: GetMessageFromWX()
com.tencent.mm.sdk.openapi.GetMessageFromWX$Req
com.tencent.mm.sdk.openapi.GetMessageFromWX$Req: java.lang.String username
com.tencent.mm.sdk.openapi.GetMessageFromWX$Req: GetMessageFromWX$Req()
com.tencent.mm.sdk.openapi.GetMessageFromWX$Req: GetMessageFromWX$Req(android.os.Bundle)
com.tencent.mm.sdk.openapi.GetMessageFromWX$Req: int getType()
com.tencent.mm.sdk.openapi.GetMessageFromWX$Req: void toBundle(android.os.Bundle)
com.tencent.mm.sdk.openapi.GetMessageFromWX$Req: void fromBundle(android.os.Bundle)
com.tencent.mm.sdk.openapi.GetMessageFromWX$Req: boolean checkArgs()
com.tencent.mm.sdk.openapi.GetMessageFromWX$Resp
com.tencent.mm.sdk.openapi.GetMessageFromWX$Resp: com.tencent.mm.sdk.openapi.WXMediaMessage message
com.tencent.mm.sdk.openapi.GetMessageFromWX$Resp: GetMessageFromWX$Resp()
com.tencent.mm.sdk.openapi.GetMessageFromWX$Resp: GetMessageFromWX$Resp(android.os.Bundle)
com.tencent.mm.sdk.openapi.GetMessageFromWX$Resp: int getType()
com.tencent.mm.sdk.openapi.GetMessageFromWX$Resp: void fromBundle(android.os.Bundle)
com.tencent.mm.sdk.openapi.GetMessageFromWX$Resp: void toBundle(android.os.Bundle)
com.tencent.mm.sdk.openapi.GetMessageFromWX$Resp: boolean checkArgs()
com.tencent.mm.sdk.openapi.IWXAPI
com.tencent.mm.sdk.openapi.IWXAPI: boolean registerApp(java.lang.String)
com.tencent.mm.sdk.openapi.IWXAPI: void unregisterApp()
com.tencent.mm.sdk.openapi.IWXAPI: boolean handleIntent(android.content.Intent,com.tencent.mm.sdk.openapi.IWXAPIEventHandler)
com.tencent.mm.sdk.openapi.IWXAPI: boolean isWXAppInstalled()
com.tencent.mm.sdk.openapi.IWXAPI: boolean isWXAppSupportAPI()
com.tencent.mm.sdk.openapi.IWXAPI: int getWXAppSupportAPI()
com.tencent.mm.sdk.openapi.IWXAPI: boolean openWXApp()
com.tencent.mm.sdk.openapi.IWXAPI: boolean sendReq(com.tencent.mm.sdk.openapi.BaseReq)
com.tencent.mm.sdk.openapi.IWXAPI: boolean sendResp(com.tencent.mm.sdk.openapi.BaseResp)
com.tencent.mm.sdk.openapi.IWXAPIEventHandler
com.tencent.mm.sdk.openapi.IWXAPIEventHandler: void onReq(com.tencent.mm.sdk.openapi.BaseReq)
com.tencent.mm.sdk.openapi.IWXAPIEventHandler: void onResp(com.tencent.mm.sdk.openapi.BaseResp)
com.tencent.mm.sdk.openapi.SendAuth
com.tencent.mm.sdk.openapi.SendAuth: SendAuth()
com.tencent.mm.sdk.openapi.SendAuth$Req
com.tencent.mm.sdk.openapi.SendAuth$Req: java.lang.String scope
com.tencent.mm.sdk.openapi.SendAuth$Req: java.lang.String state
com.tencent.mm.sdk.openapi.SendAuth$Req: SendAuth$Req()
com.tencent.mm.sdk.openapi.SendAuth$Req: SendAuth$Req(android.os.Bundle)
com.tencent.mm.sdk.openapi.SendAuth$Req: int getType()
com.tencent.mm.sdk.openapi.SendAuth$Req: void fromBundle(android.os.Bundle)
com.tencent.mm.sdk.openapi.SendAuth$Req: void toBundle(android.os.Bundle)
com.tencent.mm.sdk.openapi.SendAuth$Req: boolean checkArgs()
com.tencent.mm.sdk.openapi.SendAuth$Resp
com.tencent.mm.sdk.openapi.SendAuth$Resp: java.lang.String userName
com.tencent.mm.sdk.openapi.SendAuth$Resp: java.lang.String token
com.tencent.mm.sdk.openapi.SendAuth$Resp: int expireDate
com.tencent.mm.sdk.openapi.SendAuth$Resp: java.lang.String state
com.tencent.mm.sdk.openapi.SendAuth$Resp: java.lang.String resultUrl
com.tencent.mm.sdk.openapi.SendAuth$Resp: SendAuth$Resp()
com.tencent.mm.sdk.openapi.SendAuth$Resp: SendAuth$Resp(android.os.Bundle)
com.tencent.mm.sdk.openapi.SendAuth$Resp: int getType()
com.tencent.mm.sdk.openapi.SendAuth$Resp: void fromBundle(android.os.Bundle)
com.tencent.mm.sdk.openapi.SendAuth$Resp: void toBundle(android.os.Bundle)
com.tencent.mm.sdk.openapi.SendAuth$Resp: boolean checkArgs()
com.tencent.mm.sdk.openapi.SendMessageToWX
com.tencent.mm.sdk.openapi.SendMessageToWX: SendMessageToWX()
com.tencent.mm.sdk.openapi.SendMessageToWX$Req
com.tencent.mm.sdk.openapi.SendMessageToWX$Req: int WXSceneSession
com.tencent.mm.sdk.openapi.SendMessageToWX$Req: int WXSceneTimeline
com.tencent.mm.sdk.openapi.SendMessageToWX$Req: com.tencent.mm.sdk.openapi.WXMediaMessage message
com.tencent.mm.sdk.openapi.SendMessageToWX$Req: int scene
com.tencent.mm.sdk.openapi.SendMessageToWX$Req: SendMessageToWX$Req()
com.tencent.mm.sdk.openapi.SendMessageToWX$Req: SendMessageToWX$Req(android.os.Bundle)
com.tencent.mm.sdk.openapi.SendMessageToWX$Req: int getType()
com.tencent.mm.sdk.openapi.SendMessageToWX$Req: void fromBundle(android.os.Bundle)
com.tencent.mm.sdk.openapi.SendMessageToWX$Req: void toBundle(android.os.Bundle)
com.tencent.mm.sdk.openapi.SendMessageToWX$Req: boolean checkArgs()
com.tencent.mm.sdk.openapi.SendMessageToWX$Resp
com.tencent.mm.sdk.openapi.SendMessageToWX$Resp: SendMessageToWX$Resp()
com.tencent.mm.sdk.openapi.SendMessageToWX$Resp: SendMessageToWX$Resp(android.os.Bundle)
com.tencent.mm.sdk.openapi.SendMessageToWX$Resp: int getType()
com.tencent.mm.sdk.openapi.SendMessageToWX$Resp: void fromBundle(android.os.Bundle)
com.tencent.mm.sdk.openapi.SendMessageToWX$Resp: void toBundle(android.os.Bundle)
com.tencent.mm.sdk.openapi.SendMessageToWX$Resp: boolean checkArgs()
com.tencent.mm.sdk.openapi.ShowMessageFromWX
com.tencent.mm.sdk.openapi.ShowMessageFromWX: ShowMessageFromWX()
com.tencent.mm.sdk.openapi.ShowMessageFromWX$Req
com.tencent.mm.sdk.openapi.ShowMessageFromWX$Req: com.tencent.mm.sdk.openapi.WXMediaMessage message
com.tencent.mm.sdk.openapi.ShowMessageFromWX$Req: ShowMessageFromWX$Req()
com.tencent.mm.sdk.openapi.ShowMessageFromWX$Req: ShowMessageFromWX$Req(android.os.Bundle)
com.tencent.mm.sdk.openapi.ShowMessageFromWX$Req: int getType()
com.tencent.mm.sdk.openapi.ShowMessageFromWX$Req: void toBundle(android.os.Bundle)
com.tencent.mm.sdk.openapi.ShowMessageFromWX$Req: void fromBundle(android.os.Bundle)
com.tencent.mm.sdk.openapi.ShowMessageFromWX$Req: boolean checkArgs()
com.tencent.mm.sdk.openapi.ShowMessageFromWX$Resp
com.tencent.mm.sdk.openapi.ShowMessageFromWX$Resp: ShowMessageFromWX$Resp()
com.tencent.mm.sdk.openapi.ShowMessageFromWX$Resp: ShowMessageFromWX$Resp(android.os.Bundle)
com.tencent.mm.sdk.openapi.ShowMessageFromWX$Resp: int getType()
com.tencent.mm.sdk.openapi.ShowMessageFromWX$Resp: boolean checkArgs()
com.tencent.mm.sdk.openapi.WXAPIFactory
com.tencent.mm.sdk.openapi.WXAPIFactory: com.tencent.mm.sdk.openapi.WXAPIFactory Q
com.tencent.mm.sdk.openapi.WXAPIFactory: WXAPIFactory()
com.tencent.mm.sdk.openapi.WXAPIFactory: com.tencent.mm.sdk.openapi.IWXAPI createWXAPI(android.content.Context,java.lang.String)
com.tencent.mm.sdk.openapi.WXAPIFactory: com.tencent.mm.sdk.openapi.IWXAPI createWXAPI(android.content.Context,java.lang.String,boolean)
com.tencent.mm.sdk.openapi.WXAPIFactory: void <clinit>()
com.tencent.mm.sdk.openapi.WXApiImplV10
com.tencent.mm.sdk.openapi.WXApiImplV10: android.content.Context R
com.tencent.mm.sdk.openapi.WXApiImplV10: java.lang.String S
com.tencent.mm.sdk.openapi.WXApiImplV10: boolean T
com.tencent.mm.sdk.openapi.WXApiImplV10: WXApiImplV10(android.content.Context,java.lang.String)
com.tencent.mm.sdk.openapi.WXApiImplV10: WXApiImplV10(android.content.Context,java.lang.String,boolean)
com.tencent.mm.sdk.openapi.WXApiImplV10: boolean registerApp(java.lang.String)
com.tencent.mm.sdk.openapi.WXApiImplV10: void unregisterApp()
com.tencent.mm.sdk.openapi.WXApiImplV10: boolean handleIntent(android.content.Intent,com.tencent.mm.sdk.openapi.IWXAPIEventHandler)
com.tencent.mm.sdk.openapi.WXApiImplV10: boolean isWXAppInstalled()
com.tencent.mm.sdk.openapi.WXApiImplV10: boolean isWXAppSupportAPI()
com.tencent.mm.sdk.openapi.WXApiImplV10: int getWXAppSupportAPI()
com.tencent.mm.sdk.openapi.WXApiImplV10: boolean openWXApp()
com.tencent.mm.sdk.openapi.WXApiImplV10: boolean sendReq(com.tencent.mm.sdk.openapi.BaseReq)
com.tencent.mm.sdk.openapi.WXApiImplV10: boolean sendResp(com.tencent.mm.sdk.openapi.BaseResp)
com.tencent.mm.sdk.openapi.WXApiImplV10: boolean a(java.lang.String)
com.tencent.mm.sdk.openapi.WXApiImplV10: boolean a(android.content.pm.Signature[])
com.tencent.mm.sdk.openapi.WXApiImplV10: boolean a(byte[],byte[])
com.tencent.mm.sdk.openapi.WXAppExtendObject
com.tencent.mm.sdk.openapi.WXAppExtendObject: java.lang.String extInfo
com.tencent.mm.sdk.openapi.WXAppExtendObject: java.lang.String filePath
com.tencent.mm.sdk.openapi.WXAppExtendObject: byte[] fileData
com.tencent.mm.sdk.openapi.WXAppExtendObject: WXAppExtendObject()
com.tencent.mm.sdk.openapi.WXAppExtendObject: WXAppExtendObject(java.lang.String,byte[])
com.tencent.mm.sdk.openapi.WXAppExtendObject: WXAppExtendObject(java.lang.String,java.lang.String)
com.tencent.mm.sdk.openapi.WXAppExtendObject: void serialize(android.os.Bundle)
com.tencent.mm.sdk.openapi.WXAppExtendObject: void unserialize(android.os.Bundle)
com.tencent.mm.sdk.openapi.WXAppExtendObject: int type()
com.tencent.mm.sdk.openapi.WXAppExtendObject: boolean checkArgs()
com.tencent.mm.sdk.openapi.WXAppLaunchData
com.tencent.mm.sdk.openapi.WXAppLaunchData: java.lang.String ACTION_HANDLE_WXAPPLAUNCH
com.tencent.mm.sdk.openapi.WXAppLaunchData: java.lang.String ACTION_HANDLE_WXAPP_RESULT
com.tencent.mm.sdk.openapi.WXAppLaunchData: java.lang.String ACTION_HANDLE_WXAPP_SHOW
com.tencent.mm.sdk.openapi.WXAppLaunchData: int launchType
com.tencent.mm.sdk.openapi.WXAppLaunchData: java.lang.String message
com.tencent.mm.sdk.openapi.WXAppLaunchData: WXAppLaunchData()
com.tencent.mm.sdk.openapi.WXAppLaunchData$Builder
com.tencent.mm.sdk.openapi.WXAppLaunchData$Builder: WXAppLaunchData$Builder()
com.tencent.mm.sdk.openapi.WXAppLaunchData$Builder: com.tencent.mm.sdk.openapi.WXAppLaunchData fromBundle(android.os.Bundle)
com.tencent.mm.sdk.openapi.WXAppLaunchData$Builder: android.os.Bundle toBundle(com.tencent.mm.sdk.openapi.WXAppLaunchData)
com.tencent.mm.sdk.openapi.WXEmojiObject
com.tencent.mm.sdk.openapi.WXEmojiObject: byte[] emojiData
com.tencent.mm.sdk.openapi.WXEmojiObject: java.lang.String emojiPath
com.tencent.mm.sdk.openapi.WXEmojiObject: WXEmojiObject()
com.tencent.mm.sdk.openapi.WXEmojiObject: WXEmojiObject(byte[])
com.tencent.mm.sdk.openapi.WXEmojiObject: WXEmojiObject(java.lang.String)
com.tencent.mm.sdk.openapi.WXEmojiObject: void setEmojiData(byte[])
com.tencent.mm.sdk.openapi.WXEmojiObject: void setEmojiPath(java.lang.String)
com.tencent.mm.sdk.openapi.WXEmojiObject: void serialize(android.os.Bundle)
com.tencent.mm.sdk.openapi.WXEmojiObject: void unserialize(android.os.Bundle)
com.tencent.mm.sdk.openapi.WXEmojiObject: int type()
com.tencent.mm.sdk.openapi.WXEmojiObject: boolean checkArgs()
com.tencent.mm.sdk.openapi.WXFileObject
com.tencent.mm.sdk.openapi.WXFileObject: byte[] fileData
com.tencent.mm.sdk.openapi.WXFileObject: java.lang.String filePath
com.tencent.mm.sdk.openapi.WXFileObject: WXFileObject()
com.tencent.mm.sdk.openapi.WXFileObject: WXFileObject(byte[])
com.tencent.mm.sdk.openapi.WXFileObject: WXFileObject(java.lang.String)
com.tencent.mm.sdk.openapi.WXFileObject: void setFileData(byte[])
com.tencent.mm.sdk.openapi.WXFileObject: void setFilePath(java.lang.String)
com.tencent.mm.sdk.openapi.WXFileObject: void serialize(android.os.Bundle)
com.tencent.mm.sdk.openapi.WXFileObject: void unserialize(android.os.Bundle)
com.tencent.mm.sdk.openapi.WXFileObject: int type()
com.tencent.mm.sdk.openapi.WXFileObject: boolean checkArgs()
com.tencent.mm.sdk.openapi.WXImageObject
com.tencent.mm.sdk.openapi.WXImageObject: byte[] imageData
com.tencent.mm.sdk.openapi.WXImageObject: java.lang.String imagePath
com.tencent.mm.sdk.openapi.WXImageObject: java.lang.String imageUrl
com.tencent.mm.sdk.openapi.WXImageObject: WXImageObject()
com.tencent.mm.sdk.openapi.WXImageObject: WXImageObject(byte[])
com.tencent.mm.sdk.openapi.WXImageObject: WXImageObject(android.graphics.Bitmap)
com.tencent.mm.sdk.openapi.WXImageObject: void setImagePath(java.lang.String)
com.tencent.mm.sdk.openapi.WXImageObject: void serialize(android.os.Bundle)
com.tencent.mm.sdk.openapi.WXImageObject: void unserialize(android.os.Bundle)
com.tencent.mm.sdk.openapi.WXImageObject: int type()
com.tencent.mm.sdk.openapi.WXImageObject: boolean checkArgs()
com.tencent.mm.sdk.openapi.WXMediaMessage
com.tencent.mm.sdk.openapi.WXMediaMessage: java.lang.String ACTION_WXAPPMESSAGE
com.tencent.mm.sdk.openapi.WXMediaMessage: int sdkVer
com.tencent.mm.sdk.openapi.WXMediaMessage: java.lang.String title
com.tencent.mm.sdk.openapi.WXMediaMessage: java.lang.String description
com.tencent.mm.sdk.openapi.WXMediaMessage: byte[] thumbData
com.tencent.mm.sdk.openapi.WXMediaMessage: com.tencent.mm.sdk.openapi.WXMediaMessage$IMediaObject mediaObject
com.tencent.mm.sdk.openapi.WXMediaMessage: WXMediaMessage()
com.tencent.mm.sdk.openapi.WXMediaMessage: WXMediaMessage(com.tencent.mm.sdk.openapi.WXMediaMessage$IMediaObject)
com.tencent.mm.sdk.openapi.WXMediaMessage: int getType()
com.tencent.mm.sdk.openapi.WXMediaMessage: void setThumbImage(android.graphics.Bitmap)
com.tencent.mm.sdk.openapi.WXMediaMessage: boolean checkArgs()
com.tencent.mm.sdk.openapi.WXMediaMessage$Builder
com.tencent.mm.sdk.openapi.WXMediaMessage$Builder: java.lang.String KEY_IDENTIFIER
com.tencent.mm.sdk.openapi.WXMediaMessage$Builder: WXMediaMessage$Builder()
com.tencent.mm.sdk.openapi.WXMediaMessage$Builder: android.os.Bundle toBundle(com.tencent.mm.sdk.openapi.WXMediaMessage)
com.tencent.mm.sdk.openapi.WXMediaMessage$Builder: com.tencent.mm.sdk.openapi.WXMediaMessage fromBundle(android.os.Bundle)
com.tencent.mm.sdk.openapi.WXMediaMessage$IMediaObject
com.tencent.mm.sdk.openapi.WXMediaMessage$IMediaObject: int TYPE_UNKNOWN
com.tencent.mm.sdk.openapi.WXMediaMessage$IMediaObject: int TYPE_TEXT
com.tencent.mm.sdk.openapi.WXMediaMessage$IMediaObject: int TYPE_IMAGE
com.tencent.mm.sdk.openapi.WXMediaMessage$IMediaObject: int TYPE_MUSIC
com.tencent.mm.sdk.openapi.WXMediaMessage$IMediaObject: int TYPE_VIDEO
com.tencent.mm.sdk.openapi.WXMediaMessage$IMediaObject: int TYPE_URL
com.tencent.mm.sdk.openapi.WXMediaMessage$IMediaObject: int TYPE_FILE
com.tencent.mm.sdk.openapi.WXMediaMessage$IMediaObject: int TYPE_APPDATA
com.tencent.mm.sdk.openapi.WXMediaMessage$IMediaObject: int TYPE_EMOJI
com.tencent.mm.sdk.openapi.WXMediaMessage$IMediaObject: void serialize(android.os.Bundle)
com.tencent.mm.sdk.openapi.WXMediaMessage$IMediaObject: void unserialize(android.os.Bundle)
com.tencent.mm.sdk.openapi.WXMediaMessage$IMediaObject: int type()
com.tencent.mm.sdk.openapi.WXMediaMessage$IMediaObject: boolean checkArgs()
com.tencent.mm.sdk.openapi.WXMusicObject
com.tencent.mm.sdk.openapi.WXMusicObject: java.lang.String musicUrl
com.tencent.mm.sdk.openapi.WXMusicObject: java.lang.String musicLowBandUrl
com.tencent.mm.sdk.openapi.WXMusicObject: WXMusicObject()
com.tencent.mm.sdk.openapi.WXMusicObject: void serialize(android.os.Bundle)
com.tencent.mm.sdk.openapi.WXMusicObject: void unserialize(android.os.Bundle)
com.tencent.mm.sdk.openapi.WXMusicObject: int type()
com.tencent.mm.sdk.openapi.WXMusicObject: boolean checkArgs()
com.tencent.mm.sdk.openapi.WXTextObject
com.tencent.mm.sdk.openapi.WXTextObject: java.lang.String text
com.tencent.mm.sdk.openapi.WXTextObject: WXTextObject()
com.tencent.mm.sdk.openapi.WXTextObject: WXTextObject(java.lang.String)
com.tencent.mm.sdk.openapi.WXTextObject: void serialize(android.os.Bundle)
com.tencent.mm.sdk.openapi.WXTextObject: void unserialize(android.os.Bundle)
com.tencent.mm.sdk.openapi.WXTextObject: int type()
com.tencent.mm.sdk.openapi.WXTextObject: boolean checkArgs()
com.tencent.mm.sdk.openapi.WXVideoObject
com.tencent.mm.sdk.openapi.WXVideoObject: java.lang.String videoUrl
com.tencent.mm.sdk.openapi.WXVideoObject: java.lang.String videoLowBandUrl
com.tencent.mm.sdk.openapi.WXVideoObject: WXVideoObject()
com.tencent.mm.sdk.openapi.WXVideoObject: void serialize(android.os.Bundle)
com.tencent.mm.sdk.openapi.WXVideoObject: void unserialize(android.os.Bundle)
com.tencent.mm.sdk.openapi.WXVideoObject: int type()
com.tencent.mm.sdk.openapi.WXVideoObject: boolean checkArgs()
com.tencent.mm.sdk.openapi.WXWebpageObject
com.tencent.mm.sdk.openapi.WXWebpageObject: java.lang.String webpageUrl
com.tencent.mm.sdk.openapi.WXWebpageObject: WXWebpageObject()
com.tencent.mm.sdk.openapi.WXWebpageObject: WXWebpageObject(java.lang.String)
com.tencent.mm.sdk.openapi.WXWebpageObject: void serialize(android.os.Bundle)
com.tencent.mm.sdk.openapi.WXWebpageObject: void unserialize(android.os.Bundle)
com.tencent.mm.sdk.openapi.WXWebpageObject: int type()
com.tencent.mm.sdk.openapi.WXWebpageObject: boolean checkArgs()
com.tencent.mm.sdk.openapi.package-info
com.tencent.mm.sdk.package-info
com.tencent.mm.sdk.platformtools.AnimationHelperImpl21below
com.tencent.mm.sdk.platformtools.AnimationHelperImpl21below: AnimationHelperImpl21below()
com.tencent.mm.sdk.platformtools.AnimationHelperImpl21below: void cancelAnimation(android.view.View,android.view.animation.Animation)
com.tencent.mm.sdk.platformtools.AnimationHelperImpl22
com.tencent.mm.sdk.platformtools.AnimationHelperImpl22: AnimationHelperImpl22()
com.tencent.mm.sdk.platformtools.AnimationHelperImpl22: void cancelAnimation(android.view.View,android.view.animation.Animation)
com.tencent.mm.sdk.platformtools.BackwardSupportUtil
com.tencent.mm.sdk.platformtools.BackwardSupportUtil: BackwardSupportUtil()
com.tencent.mm.sdk.platformtools.BackwardSupportUtil$AnimationHelper
com.tencent.mm.sdk.platformtools.BackwardSupportUtil$AnimationHelper: BackwardSupportUtil$AnimationHelper()
com.tencent.mm.sdk.platformtools.BackwardSupportUtil$AnimationHelper: void cancelAnimation(android.view.View,android.view.animation.Animation)
com.tencent.mm.sdk.platformtools.BackwardSupportUtil$AnimationHelper: void overridePendingTransition(android.app.Activity,int,int)
com.tencent.mm.sdk.platformtools.BackwardSupportUtil$AnimationHelper$IHelper
com.tencent.mm.sdk.platformtools.BackwardSupportUtil$AnimationHelper$IHelper: void cancelAnimation(android.view.View,android.view.animation.Animation)
com.tencent.mm.sdk.platformtools.BackwardSupportUtil$BitmapFactory
com.tencent.mm.sdk.platformtools.BackwardSupportUtil$BitmapFactory: BackwardSupportUtil$BitmapFactory()
com.tencent.mm.sdk.platformtools.BackwardSupportUtil$BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String,float)
com.tencent.mm.sdk.platformtools.BackwardSupportUtil$BitmapFactory: int fromDPToPix(android.content.Context,float)
com.tencent.mm.sdk.platformtools.BackwardSupportUtil$BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)
com.tencent.mm.sdk.platformtools.BackwardSupportUtil$BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,float)
com.tencent.mm.sdk.platformtools.BackwardSupportUtil$BitmapFactory: java.lang.String getDisplayDensityType(android.content.Context)
com.tencent.mm.sdk.platformtools.BackwardSupportUtil$BitmapFactory: android.graphics.Bitmap getBitmapFromURL(java.lang.String)
com.tencent.mm.sdk.platformtools.BackwardSupportUtil$ExifHelper
com.tencent.mm.sdk.platformtools.BackwardSupportUtil$ExifHelper: BackwardSupportUtil$ExifHelper()
com.tencent.mm.sdk.platformtools.BackwardSupportUtil$ExifHelper: int getExifOrientation(java.lang.String)
com.tencent.mm.sdk.platformtools.BackwardSupportUtil$SmoothScrollFactory
com.tencent.mm.sdk.platformtools.BackwardSupportUtil$SmoothScrollFactory: BackwardSupportUtil$SmoothScrollFactory()
com.tencent.mm.sdk.platformtools.BackwardSupportUtil$SmoothScrollFactory: void scrollToTop(android.widget.ListView)
com.tencent.mm.sdk.platformtools.BackwardSupportUtil$SmoothScrollFactory: void scrollTo(android.widget.ListView,int)
com.tencent.mm.sdk.platformtools.BackwardSupportUtil$SmoothScrollFactory$IScroll
com.tencent.mm.sdk.platformtools.BackwardSupportUtil$SmoothScrollFactory$IScroll: void doScroll(android.widget.ListView)
com.tencent.mm.sdk.platformtools.BackwardSupportUtil$SmoothScrollFactory$IScroll: void doScroll(android.widget.ListView,int)
com.tencent.mm.sdk.platformtools.ChannelUtil
com.tencent.mm.sdk.platformtools.ChannelUtil: int FLAG_UPDATE_EXTERNAL
com.tencent.mm.sdk.platformtools.ChannelUtil: int FLAG_UPDATE_NOTIP
com.tencent.mm.sdk.platformtools.ChannelUtil: int FLAG_NULL
com.tencent.mm.sdk.platformtools.ChannelUtil: int channelId
com.tencent.mm.sdk.platformtools.ChannelUtil: java.lang.String profileDeviceType
com.tencent.mm.sdk.platformtools.ChannelUtil: int updateMode
com.tencent.mm.sdk.platformtools.ChannelUtil: int buildRev
com.tencent.mm.sdk.platformtools.ChannelUtil: java.lang.String marketURL
com.tencent.mm.sdk.platformtools.ChannelUtil: boolean fullVersionInfo
com.tencent.mm.sdk.platformtools.ChannelUtil: ChannelUtil()
com.tencent.mm.sdk.platformtools.ChannelUtil: void setupChannelId(android.content.Context)
com.tencent.mm.sdk.platformtools.ChannelUtil: void loadProfile(android.content.Context)
com.tencent.mm.sdk.platformtools.ChannelUtil: java.lang.String formatVersion(android.content.Context,int)
com.tencent.mm.sdk.platformtools.ChannelUtil: void <clinit>()
com.tencent.mm.sdk.platformtools.CharSequences
com.tencent.mm.sdk.platformtools.CharSequences: CharSequences()
com.tencent.mm.sdk.platformtools.CharSequences: java.lang.CharSequence forAsciiBytes(byte[])
com.tencent.mm.sdk.platformtools.CharSequences: java.lang.CharSequence forAsciiBytes(byte[],int,int)
com.tencent.mm.sdk.platformtools.CharSequences: void a(int,int,int)
com.tencent.mm.sdk.platformtools.CharSequences: boolean equals(java.lang.CharSequence,java.lang.CharSequence)
com.tencent.mm.sdk.platformtools.CharSequences: int compareToIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)
com.tencent.mm.sdk.platformtools.CharSequences$1
com.tencent.mm.sdk.platformtools.CharSequences$1: byte[] U
com.tencent.mm.sdk.platformtools.CharSequences$1: CharSequences$1(byte[])
com.tencent.mm.sdk.platformtools.CharSequences$1: char charAt(int)
com.tencent.mm.sdk.platformtools.CharSequences$1: int length()
com.tencent.mm.sdk.platformtools.CharSequences$1: java.lang.CharSequence subSequence(int,int)
com.tencent.mm.sdk.platformtools.CharSequences$1: java.lang.String toString()
com.tencent.mm.sdk.platformtools.CharSequences$2
com.tencent.mm.sdk.platformtools.CharSequences$2: byte[] U
com.tencent.mm.sdk.platformtools.CharSequences$2: int V
com.tencent.mm.sdk.platformtools.CharSequences$2: int W
com.tencent.mm.sdk.platformtools.CharSequences$2: CharSequences$2(byte[],int,int)
com.tencent.mm.sdk.platformtools.CharSequences$2: char charAt(int)
com.tencent.mm.sdk.platformtools.CharSequences$2: int length()
com.tencent.mm.sdk.platformtools.CharSequences$2: java.lang.CharSequence subSequence(int,int)
com.tencent.mm.sdk.platformtools.CharSequences$2: java.lang.String toString()
com.tencent.mm.sdk.platformtools.InetUtil
com.tencent.mm.sdk.platformtools.InetUtil: java.util.regex.Pattern X
com.tencent.mm.sdk.platformtools.InetUtil: java.util.regex.Pattern Y
com.tencent.mm.sdk.platformtools.InetUtil: java.util.regex.Pattern Z
com.tencent.mm.sdk.platformtools.InetUtil: InetUtil()
com.tencent.mm.sdk.platformtools.InetUtil: boolean isIPv4Address(java.lang.String)
com.tencent.mm.sdk.platformtools.InetUtil: boolean isIPv6StdAddress(java.lang.String)
com.tencent.mm.sdk.platformtools.InetUtil: boolean isIPv6HexCompressedAddress(java.lang.String)
com.tencent.mm.sdk.platformtools.InetUtil: boolean isIPv6Address(java.lang.String)
com.tencent.mm.sdk.platformtools.InetUtil: java.net.InetAddress getByDottedAddress(java.lang.String)
com.tencent.mm.sdk.platformtools.InetUtil: void <clinit>()
com.tencent.mm.sdk.platformtools.KVConfig
com.tencent.mm.sdk.platformtools.KVConfig: boolean aa
com.tencent.mm.sdk.platformtools.KVConfig: KVConfig()
com.tencent.mm.sdk.platformtools.KVConfig: java.util.Map parseIni(java.lang.String)
com.tencent.mm.sdk.platformtools.KVConfig: java.util.Map parseXml(java.lang.String,java.lang.String,java.lang.String)
com.tencent.mm.sdk.platformtools.KVConfig: void a(java.util.Map,java.lang.String,org.w3c.dom.Node,int)
com.tencent.mm.sdk.platformtools.KVConfig: void a(java.util.Map)
com.tencent.mm.sdk.platformtools.KVConfig: void <clinit>()
com.tencent.mm.sdk.platformtools.LBSManager
com.tencent.mm.sdk.platformtools.LBSManager: java.lang.String FILTER_GPS
com.tencent.mm.sdk.platformtools.LBSManager: float INVALID_LAT
com.tencent.mm.sdk.platformtools.LBSManager: float INVALID_LNG
com.tencent.mm.sdk.platformtools.LBSManager: int INVALID_ACC
com.tencent.mm.sdk.platformtools.LBSManager: int MM_SOURCE_HARDWARE
com.tencent.mm.sdk.platformtools.LBSManager: int MM_SOURCE_NET
com.tencent.mm.sdk.platformtools.LBSManager: int MM_SOURCE_REPORT_HARWARE
com.tencent.mm.sdk.platformtools.LBSManager: int MM_SOURCE_REPORT_NETWORK
com.tencent.mm.sdk.platformtools.LBSManager: com.tencent.mm.sdk.platformtools.LBSManager$LocationCache ab
com.tencent.mm.sdk.platformtools.LBSManager: com.tencent.mm.sdk.platformtools.LBSManager$OnLocationGotListener ac
com.tencent.mm.sdk.platformtools.LBSManager: android.location.LocationManager ad
com.tencent.mm.sdk.platformtools.LBSManager: android.content.Context R
com.tencent.mm.sdk.platformtools.LBSManager: android.app.PendingIntent ae
com.tencent.mm.sdk.platformtools.LBSManager: boolean af
com.tencent.mm.sdk.platformtools.LBSManager: boolean ag
com.tencent.mm.sdk.platformtools.LBSManager: boolean ah
com.tencent.mm.sdk.platformtools.LBSManager: boolean ai
com.tencent.mm.sdk.platformtools.LBSManager: int aj
com.tencent.mm.sdk.platformtools.LBSManager: com.tencent.mm.sdk.platformtools.MTimerHandler ak
com.tencent.mm.sdk.platformtools.LBSManager: LBSManager(android.content.Context,com.tencent.mm.sdk.platformtools.LBSManager$OnLocationGotListener)
com.tencent.mm.sdk.platformtools.LBSManager: boolean b()
com.tencent.mm.sdk.platformtools.LBSManager: void start()
com.tencent.mm.sdk.platformtools.LBSManager: boolean isGpsEnable()
com.tencent.mm.sdk.platformtools.LBSManager: boolean isNetworkPrividerEnable()
com.tencent.mm.sdk.platformtools.LBSManager: void removeGpsUpdate()
com.tencent.mm.sdk.platformtools.LBSManager: void requestGpsUpdate()
com.tencent.mm.sdk.platformtools.LBSManager: void removeListener()
com.tencent.mm.sdk.platformtools.LBSManager: void c()
com.tencent.mm.sdk.platformtools.LBSManager: java.lang.String getTelLocation()
com.tencent.mm.sdk.platformtools.LBSManager: java.lang.String getWIFILocation()
com.tencent.mm.sdk.platformtools.LBSManager: void setLocationCache(float,float,int,int)
com.tencent.mm.sdk.platformtools.LBSManager: void onReceive(android.content.Context,android.content.Intent)
com.tencent.mm.sdk.platformtools.LBSManager: boolean a(com.tencent.mm.sdk.platformtools.LBSManager)
com.tencent.mm.sdk.platformtools.LBSManager$1
com.tencent.mm.sdk.platformtools.LBSManager$1: com.tencent.mm.sdk.platformtools.LBSManager al
com.tencent.mm.sdk.platformtools.LBSManager$1: LBSManager$1(com.tencent.mm.sdk.platformtools.LBSManager)
com.tencent.mm.sdk.platformtools.LBSManager$1: boolean onTimerExpired()
com.tencent.mm.sdk.platformtools.LBSManager$LocationCache
com.tencent.mm.sdk.platformtools.LBSManager$LocationCache: float am
com.tencent.mm.sdk.platformtools.LBSManager$LocationCache: float an
com.tencent.mm.sdk.platformtools.LBSManager$LocationCache: int ao
com.tencent.mm.sdk.platformtools.LBSManager$LocationCache: long time
com.tencent.mm.sdk.platformtools.LBSManager$LocationCache: int I
com.tencent.mm.sdk.platformtools.LBSManager$LocationCache: LBSManager$LocationCache()
com.tencent.mm.sdk.platformtools.LBSManager$OnLocationGotListener
com.tencent.mm.sdk.platformtools.LBSManager$OnLocationGotListener: void onLocationGot(float,float,int,int,java.lang.String,java.lang.String,boolean)
com.tencent.mm.sdk.platformtools.LVBuffer
com.tencent.mm.sdk.platformtools.LVBuffer: int LENGTH_ALLOC_PER_NEW
com.tencent.mm.sdk.platformtools.LVBuffer: int MAX_STRING_LENGTH
com.tencent.mm.sdk.platformtools.LVBuffer: java.nio.ByteBuffer ap
com.tencent.mm.sdk.platformtools.LVBuffer: boolean aq
com.tencent.mm.sdk.platformtools.LVBuffer: LVBuffer()
com.tencent.mm.sdk.platformtools.LVBuffer: int initParse(byte[])
com.tencent.mm.sdk.platformtools.LVBuffer: int getInt()
com.tencent.mm.sdk.platformtools.LVBuffer: long getLong()
com.tencent.mm.sdk.platformtools.LVBuffer: java.lang.String getString()
com.tencent.mm.sdk.platformtools.LVBuffer: boolean checkGetFinish()
com.tencent.mm.sdk.platformtools.LVBuffer: int initBuild()
com.tencent.mm.sdk.platformtools.LVBuffer: int a(int)
com.tencent.mm.sdk.platformtools.LVBuffer: int putInt(int)
com.tencent.mm.sdk.platformtools.LVBuffer: int putLong(long)
com.tencent.mm.sdk.platformtools.LVBuffer: int putString(java.lang.String)
com.tencent.mm.sdk.platformtools.LVBuffer: byte[] buildFinish()
com.tencent.mm.sdk.platformtools.LocaleUtil
com.tencent.mm.sdk.platformtools.LocaleUtil: java.lang.String LANGUAGE_DEFAULT
com.tencent.mm.sdk.platformtools.LocaleUtil: java.lang.String LANGUAGE_KEY
com.tencent.mm.sdk.platformtools.LocaleUtil: java.lang.String TAIWAN
com.tencent.mm.sdk.platformtools.LocaleUtil: java.lang.String HONGKONG
com.tencent.mm.sdk.platformtools.LocaleUtil: java.lang.String CHINA
com.tencent.mm.sdk.platformtools.LocaleUtil: java.lang.String ENGLISH
com.tencent.mm.sdk.platformtools.LocaleUtil: java.lang.String THAI
com.tencent.mm.sdk.platformtools.LocaleUtil: java.lang.String INDONESIAN
com.tencent.mm.sdk.platformtools.LocaleUtil: java.lang.String VIETNAMESE
com.tencent.mm.sdk.platformtools.LocaleUtil: java.lang.String PORTUGUESE
com.tencent.mm.sdk.platformtools.LocaleUtil: java.lang.String SPANISH
com.tencent.mm.sdk.platformtools.LocaleUtil: java.lang.String RUSSIAN
com.tencent.mm.sdk.platformtools.LocaleUtil: java.lang.String ARABIC
com.tencent.mm.sdk.platformtools.LocaleUtil: java.lang.String HEBREW
com.tencent.mm.sdk.platformtools.LocaleUtil: java.lang.String POLISH
com.tencent.mm.sdk.platformtools.LocaleUtil: java.lang.String HINDI
com.tencent.mm.sdk.platformtools.LocaleUtil: java.lang.String JAPANESE
com.tencent.mm.sdk.platformtools.LocaleUtil: java.lang.String ITALIAN
com.tencent.mm.sdk.platformtools.LocaleUtil: java.lang.String KOREAN
com.tencent.mm.sdk.platformtools.LocaleUtil: java.lang.String MALAY
com.tencent.mm.sdk.platformtools.LocaleUtil: java.lang.String TURKEY
com.tencent.mm.sdk.platformtools.LocaleUtil: LocaleUtil()
com.tencent.mm.sdk.platformtools.LocaleUtil: boolean isLanguageSupported(java.lang.String)
com.tencent.mm.sdk.platformtools.LocaleUtil: void updateApplicationResourceLocale(android.content.Context,java.util.Locale)
com.tencent.mm.sdk.platformtools.LocaleUtil: java.util.Locale transLanguageToLocale(java.lang.String)
com.tencent.mm.sdk.platformtools.LocaleUtil: java.lang.String getCurrentCountryCode()
com.tencent.mm.sdk.platformtools.LocaleUtil: java.lang.String b(java.lang.String)
com.tencent.mm.sdk.platformtools.LocaleUtil: java.lang.String getApplicationLanguage()
com.tencent.mm.sdk.platformtools.LocaleUtil: java.lang.String loadApplicationLanguage(android.content.SharedPreferences,android.content.Context)
com.tencent.mm.sdk.platformtools.LocaleUtil: java.lang.String loadApplicationLanguageSettings(android.content.SharedPreferences,android.content.Context)
com.tencent.mm.sdk.platformtools.LocaleUtil: void saveApplicationLanguage(android.content.SharedPreferences,android.content.Context,java.lang.String)
com.tencent.mm.sdk.platformtools.Log
com.tencent.mm.sdk.platformtools.Log: int LEVEL_VERBOSE
com.tencent.mm.sdk.platformtools.Log: int LEVEL_DEBUG
com.tencent.mm.sdk.platformtools.Log: int LEVEL_INFO
com.tencent.mm.sdk.platformtools.Log: int LEVEL_WARNING
com.tencent.mm.sdk.platformtools.Log: int LEVEL_ERROR
com.tencent.mm.sdk.platformtools.Log: int LEVEL_FATAL
com.tencent.mm.sdk.platformtools.Log: int LEVEL_NONE
com.tencent.mm.sdk.platformtools.Log: int level
com.tencent.mm.sdk.platformtools.Log: java.io.PrintStream ar
com.tencent.mm.sdk.platformtools.Log: byte[] as
com.tencent.mm.sdk.platformtools.Log: java.lang.String at
com.tencent.mm.sdk.platformtools.Log: Log()
com.tencent.mm.sdk.platformtools.Log: void setOutputPath(java.lang.String,java.lang.String,java.lang.String,int)
com.tencent.mm.sdk.platformtools.Log: void setOutputStream(java.io.InputStream,java.io.OutputStream,java.lang.String,java.lang.String,int)
com.tencent.mm.sdk.platformtools.Log: void reset()
com.tencent.mm.sdk.platformtools.Log: void setLevel(int,boolean)
com.tencent.mm.sdk.platformtools.Log: int getLevel()
com.tencent.mm.sdk.platformtools.Log: void f(java.lang.String,java.lang.String)
com.tencent.mm.sdk.platformtools.Log: void e(java.lang.String,java.lang.String)
com.tencent.mm.sdk.platformtools.Log: void w(java.lang.String,java.lang.String)
com.tencent.mm.sdk.platformtools.Log: void i(java.lang.String,java.lang.String)
com.tencent.mm.sdk.platformtools.Log: void d(java.lang.String,java.lang.String)
com.tencent.mm.sdk.platformtools.Log: void v(java.lang.String,java.lang.String)
com.tencent.mm.sdk.platformtools.Log: void f(java.lang.String,java.lang.String,java.lang.Object[])
com.tencent.mm.sdk.platformtools.Log: void e(java.lang.String,java.lang.String,java.lang.Object[])
com.tencent.mm.sdk.platformtools.Log: void w(java.lang.String,java.lang.String,java.lang.Object[])
com.tencent.mm.sdk.platformtools.Log: void i(java.lang.String,java.lang.String,java.lang.Object[])
com.tencent.mm.sdk.platformtools.Log: void d(java.lang.String,java.lang.String,java.lang.Object[])
com.tencent.mm.sdk.platformtools.Log: void v(java.lang.String,java.lang.String,java.lang.Object[])
com.tencent.mm.sdk.platformtools.Log: java.lang.String getSysInfo()
com.tencent.mm.sdk.platformtools.Log: void <clinit>()
com.tencent.mm.sdk.platformtools.LogHelper
com.tencent.mm.sdk.platformtools.LogHelper: byte[] au
com.tencent.mm.sdk.platformtools.LogHelper: LogHelper()
com.tencent.mm.sdk.platformtools.LogHelper: void writeToStream(java.io.PrintStream,byte[],java.lang.String,java.lang.String)
com.tencent.mm.sdk.platformtools.LogHelper: void initLogHeader(java.io.PrintStream,java.lang.String,java.lang.String,long,int)
com.tencent.mm.sdk.platformtools.LogHelper: void <clinit>()
com.tencent.mm.sdk.platformtools.MAlarmHandler
com.tencent.mm.sdk.platformtools.MAlarmHandler: int av
com.tencent.mm.sdk.platformtools.MAlarmHandler: int aw
com.tencent.mm.sdk.platformtools.MAlarmHandler: boolean ax
com.tencent.mm.sdk.platformtools.MAlarmHandler: long ay
com.tencent.mm.sdk.platformtools.MAlarmHandler: long az
com.tencent.mm.sdk.platformtools.MAlarmHandler: java.util.Map aA
com.tencent.mm.sdk.platformtools.MAlarmHandler: com.tencent.mm.sdk.platformtools.MAlarmHandler$CallBack aB
com.tencent.mm.sdk.platformtools.MAlarmHandler: com.tencent.mm.sdk.platformtools.MAlarmHandler$IBumper aC
com.tencent.mm.sdk.platformtools.MAlarmHandler: boolean aD
com.tencent.mm.sdk.platformtools.MAlarmHandler: long NEXT_FIRE_INTERVAL
com.tencent.mm.sdk.platformtools.MAlarmHandler: void initAlarmBumper(com.tencent.mm.sdk.platformtools.MAlarmHandler$IBumper)
com.tencent.mm.sdk.platformtools.MAlarmHandler: void finalize()
com.tencent.mm.sdk.platformtools.MAlarmHandler: MAlarmHandler(com.tencent.mm.sdk.platformtools.MAlarmHandler$CallBack,boolean)
com.tencent.mm.sdk.platformtools.MAlarmHandler: long fire()
com.tencent.mm.sdk.platformtools.MAlarmHandler: void startTimer(long)
com.tencent.mm.sdk.platformtools.MAlarmHandler: void stopTimer()
com.tencent.mm.sdk.platformtools.MAlarmHandler: boolean stopped()
com.tencent.mm.sdk.platformtools.MAlarmHandler: void <clinit>()
com.tencent.mm.sdk.platformtools.MAlarmHandler$CallBack
com.tencent.mm.sdk.platformtools.MAlarmHandler$CallBack: boolean onTimerExpired()
com.tencent.mm.sdk.platformtools.MAlarmHandler$IBumper
com.tencent.mm.sdk.platformtools.MAlarmHandler$IBumper: void prepare()
com.tencent.mm.sdk.platformtools.MAlarmHandler$IBumper: void cancel()
com.tencent.mm.sdk.platformtools.MMApplicationContext
com.tencent.mm.sdk.platformtools.MMApplicationContext: android.content.Context R
com.tencent.mm.sdk.platformtools.MMApplicationContext: java.lang.String aE
com.tencent.mm.sdk.platformtools.MMApplicationContext: MMApplicationContext()
com.tencent.mm.sdk.platformtools.MMApplicationContext: void setContext(android.content.Context)
com.tencent.mm.sdk.platformtools.MMApplicationContext: android.content.Context getContext()
com.tencent.mm.sdk.platformtools.MMApplicationContext: java.lang.String getPackageName()
com.tencent.mm.sdk.platformtools.MMApplicationContext: java.lang.String getDefaultPreferencePath()
com.tencent.mm.sdk.platformtools.MMApplicationContext: void <clinit>()
com.tencent.mm.sdk.platformtools.MMEntryLock
com.tencent.mm.sdk.platformtools.MMEntryLock: java.util.Set aF
com.tencent.mm.sdk.platformtools.MMEntryLock: MMEntryLock()
com.tencent.mm.sdk.platformtools.MMEntryLock: boolean lock(java.lang.String)
com.tencent.mm.sdk.platformtools.MMEntryLock: void unlock(java.lang.String)
com.tencent.mm.sdk.platformtools.MMEntryLock: boolean isLocked(java.lang.String)
com.tencent.mm.sdk.platformtools.MMEntryLock: void <clinit>()
com.tencent.mm.sdk.platformtools.MTimerHandler
com.tencent.mm.sdk.platformtools.MTimerHandler: int av
com.tencent.mm.sdk.platformtools.MTimerHandler: int aw
com.tencent.mm.sdk.platformtools.MTimerHandler: boolean aG
com.tencent.mm.sdk.platformtools.MTimerHandler: long aH
com.tencent.mm.sdk.platformtools.MTimerHandler: com.tencent.mm.sdk.platformtools.MTimerHandler$CallBack aI
com.tencent.mm.sdk.platformtools.MTimerHandler: MTimerHandler(com.tencent.mm.sdk.platformtools.MTimerHandler$CallBack,boolean)
com.tencent.mm.sdk.platformtools.MTimerHandler: MTimerHandler(android.os.Looper,com.tencent.mm.sdk.platformtools.MTimerHandler$CallBack,boolean)
com.tencent.mm.sdk.platformtools.MTimerHandler: int d()
com.tencent.mm.sdk.platformtools.MTimerHandler: void finalize()
com.tencent.mm.sdk.platformtools.MTimerHandler: void handleMessage(android.os.Message)
com.tencent.mm.sdk.platformtools.MTimerHandler: void startTimer(long)
com.tencent.mm.sdk.platformtools.MTimerHandler: void stopTimer()
com.tencent.mm.sdk.platformtools.MTimerHandler: boolean stopped()
com.tencent.mm.sdk.platformtools.MTimerHandler$CallBack
com.tencent.mm.sdk.platformtools.MTimerHandler$CallBack: boolean onTimerExpired()
com.tencent.mm.sdk.platformtools.NetStatusUtil
com.tencent.mm.sdk.platformtools.NetStatusUtil: int NON_NETWORK
com.tencent.mm.sdk.platformtools.NetStatusUtil: int WIFI
com.tencent.mm.sdk.platformtools.NetStatusUtil: int UNINET
com.tencent.mm.sdk.platformtools.NetStatusUtil: int UNIWAP
com.tencent.mm.sdk.platformtools.NetStatusUtil: int WAP_3G
com.tencent.mm.sdk.platformtools.NetStatusUtil: int NET_3G
com.tencent.mm.sdk.platformtools.NetStatusUtil: int CMWAP
com.tencent.mm.sdk.platformtools.NetStatusUtil: int CMNET
com.tencent.mm.sdk.platformtools.NetStatusUtil: int CTWAP
com.tencent.mm.sdk.platformtools.NetStatusUtil: int CTNET
com.tencent.mm.sdk.platformtools.NetStatusUtil: int MOBILE
com.tencent.mm.sdk.platformtools.NetStatusUtil: int LTE
com.tencent.mm.sdk.platformtools.NetStatusUtil: int POLICY_NONE
com.tencent.mm.sdk.platformtools.NetStatusUtil: int POLICY_REJECT_METERED_BACKGROUND
com.tencent.mm.sdk.platformtools.NetStatusUtil: int TBACKGROUND_NOT_LIMITED
com.tencent.mm.sdk.platformtools.NetStatusUtil: int TBACKGROUND_PROCESS_LIMITED
com.tencent.mm.sdk.platformtools.NetStatusUtil: int TBACKGROUND_DATA_LIMITED
com.tencent.mm.sdk.platformtools.NetStatusUtil: int TBACKGROUND_WIFI_LIMITED
com.tencent.mm.sdk.platformtools.NetStatusUtil: NetStatusUtil()
com.tencent.mm.sdk.platformtools.NetStatusUtil: void dumpNetStatus(android.content.Context)
com.tencent.mm.sdk.platformtools.NetStatusUtil: boolean isConnected(android.content.Context)
com.tencent.mm.sdk.platformtools.NetStatusUtil: java.lang.String getNetTypeString(android.content.Context)
com.tencent.mm.sdk.platformtools.NetStatusUtil: int getNetType(android.content.Context)
com.tencent.mm.sdk.platformtools.NetStatusUtil: boolean is2G(android.content.Context)
com.tencent.mm.sdk.platformtools.NetStatusUtil: boolean is4G(android.content.Context)
com.tencent.mm.sdk.platformtools.NetStatusUtil: boolean isWap(android.content.Context)
com.tencent.mm.sdk.platformtools.NetStatusUtil: boolean isWap(int)
com.tencent.mm.sdk.platformtools.NetStatusUtil: boolean is2G(int)
com.tencent.mm.sdk.platformtools.NetStatusUtil: boolean is4G(int)
com.tencent.mm.sdk.platformtools.NetStatusUtil: boolean is3G(int)
com.tencent.mm.sdk.platformtools.NetStatusUtil: boolean isMobile(android.content.Context)
com.tencent.mm.sdk.platformtools.NetStatusUtil: boolean isMobile(int)
com.tencent.mm.sdk.platformtools.NetStatusUtil: boolean is3G(android.content.Context)
com.tencent.mm.sdk.platformtools.NetStatusUtil: boolean isWifi(android.content.Context)
com.tencent.mm.sdk.platformtools.NetStatusUtil: boolean isWifi(int)
com.tencent.mm.sdk.platformtools.NetStatusUtil: android.content.Intent a(android.content.Context,java.lang.String)
com.tencent.mm.sdk.platformtools.NetStatusUtil: void startSettingItent(android.content.Context,int)
com.tencent.mm.sdk.platformtools.NetStatusUtil: int getWifiSleeepPolicy(android.content.Context)
com.tencent.mm.sdk.platformtools.NetStatusUtil: boolean isLimited(int)
com.tencent.mm.sdk.platformtools.NetStatusUtil: int getBackgroundLimitType(android.content.Context)
com.tencent.mm.sdk.platformtools.NetStatusUtil: boolean isRestrictBacground(android.content.Context)
com.tencent.mm.sdk.platformtools.NetStatusUtil: boolean isImmediatelyDestroyActivities(android.content.Context)
com.tencent.mm.sdk.platformtools.NetStatusUtil: boolean checkFromXml(int)
com.tencent.mm.sdk.platformtools.NetStatusUtil: boolean runRootCommand()
com.tencent.mm.sdk.platformtools.PhoneUtil
com.tencent.mm.sdk.platformtools.PhoneUtil: java.lang.String CELL_GSM
com.tencent.mm.sdk.platformtools.PhoneUtil: java.lang.String CELL_CDMA
com.tencent.mm.sdk.platformtools.PhoneUtil: int aJ
com.tencent.mm.sdk.platformtools.PhoneUtil: PhoneUtil()
com.tencent.mm.sdk.platformtools.PhoneUtil: java.lang.String getMacXml(java.util.List)
com.tencent.mm.sdk.platformtools.PhoneUtil: java.lang.String getCellXml(java.util.List)
com.tencent.mm.sdk.platformtools.PhoneUtil: void getSignalStrength(android.content.Context)
com.tencent.mm.sdk.platformtools.PhoneUtil: java.util.List getCellInfoList(android.content.Context)
com.tencent.mm.sdk.platformtools.PhoneUtil: void <clinit>()
com.tencent.mm.sdk.platformtools.PhoneUtil$CellInfo
com.tencent.mm.sdk.platformtools.PhoneUtil$CellInfo: int MAX_CID
com.tencent.mm.sdk.platformtools.PhoneUtil$CellInfo: int MAX_LAC
com.tencent.mm.sdk.platformtools.PhoneUtil$CellInfo: java.lang.String mcc
com.tencent.mm.sdk.platformtools.PhoneUtil$CellInfo: java.lang.String mnc
com.tencent.mm.sdk.platformtools.PhoneUtil$CellInfo: java.lang.String lac
com.tencent.mm.sdk.platformtools.PhoneUtil$CellInfo: java.lang.String cellid
com.tencent.mm.sdk.platformtools.PhoneUtil$CellInfo: java.lang.String type
com.tencent.mm.sdk.platformtools.PhoneUtil$CellInfo: java.lang.String stationId
com.tencent.mm.sdk.platformtools.PhoneUtil$CellInfo: java.lang.String networkId
com.tencent.mm.sdk.platformtools.PhoneUtil$CellInfo: java.lang.String systemId
com.tencent.mm.sdk.platformtools.PhoneUtil$CellInfo: java.lang.String dbm
com.tencent.mm.sdk.platformtools.PhoneUtil$CellInfo: PhoneUtil$CellInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.tencent.mm.sdk.platformtools.PhoneUtil$MacInfo
com.tencent.mm.sdk.platformtools.PhoneUtil$MacInfo: java.lang.String mac
com.tencent.mm.sdk.platformtools.PhoneUtil$MacInfo: java.lang.String dbm
com.tencent.mm.sdk.platformtools.PhoneUtil$MacInfo: PhoneUtil$MacInfo(java.lang.String,java.lang.String)
com.tencent.mm.sdk.platformtools.PhoneUtil16Impl
com.tencent.mm.sdk.platformtools.PhoneUtil16Impl: int aK
com.tencent.mm.sdk.platformtools.PhoneUtil16Impl: int aL
com.tencent.mm.sdk.platformtools.PhoneUtil16Impl: android.telephony.TelephonyManager aM
com.tencent.mm.sdk.platformtools.PhoneUtil16Impl: android.telephony.PhoneStateListener aN
com.tencent.mm.sdk.platformtools.PhoneUtil16Impl: PhoneUtil16Impl()
com.tencent.mm.sdk.platformtools.PhoneUtil16Impl: void getSignalStrength(android.content.Context)
com.tencent.mm.sdk.platformtools.PhoneUtil16Impl: java.util.List getCellInfoList(android.content.Context)
com.tencent.mm.sdk.platformtools.PhoneUtil16Impl: int b(int)
com.tencent.mm.sdk.platformtools.PhoneUtil16Impl: android.telephony.TelephonyManager a(com.tencent.mm.sdk.platformtools.PhoneUtil16Impl)
com.tencent.mm.sdk.platformtools.PhoneUtil16Impl: android.telephony.PhoneStateListener b(com.tencent.mm.sdk.platformtools.PhoneUtil16Impl)
com.tencent.mm.sdk.platformtools.PhoneUtil16Impl: void <clinit>()
com.tencent.mm.sdk.platformtools.PhoneUtil16Impl$1
com.tencent.mm.sdk.platformtools.PhoneUtil16Impl$1: com.tencent.mm.sdk.platformtools.PhoneUtil16Impl aO
com.tencent.mm.sdk.platformtools.PhoneUtil16Impl$1: PhoneUtil16Impl$1(com.tencent.mm.sdk.platformtools.PhoneUtil16Impl)
com.tencent.mm.sdk.platformtools.PhoneUtil16Impl$1: void onSignalStrengthChanged(int)
com.tencent.mm.sdk.platformtools.PhoneUtil20Impl
com.tencent.mm.sdk.platformtools.PhoneUtil20Impl: int aK
com.tencent.mm.sdk.platformtools.PhoneUtil20Impl: int aL
com.tencent.mm.sdk.platformtools.PhoneUtil20Impl: android.telephony.TelephonyManager aM
com.tencent.mm.sdk.platformtools.PhoneUtil20Impl: int aP
com.tencent.mm.sdk.platformtools.PhoneUtil20Impl: android.telephony.PhoneStateListener aN
com.tencent.mm.sdk.platformtools.PhoneUtil20Impl: PhoneUtil20Impl()
com.tencent.mm.sdk.platformtools.PhoneUtil20Impl: void getSignalStrength(android.content.Context)
com.tencent.mm.sdk.platformtools.PhoneUtil20Impl: java.util.List getCellInfoList(android.content.Context)
com.tencent.mm.sdk.platformtools.PhoneUtil20Impl: int a(com.tencent.mm.sdk.platformtools.PhoneUtil20Impl)
com.tencent.mm.sdk.platformtools.PhoneUtil20Impl: int c(int)
com.tencent.mm.sdk.platformtools.PhoneUtil20Impl: android.telephony.TelephonyManager b(com.tencent.mm.sdk.platformtools.PhoneUtil20Impl)
com.tencent.mm.sdk.platformtools.PhoneUtil20Impl: android.telephony.PhoneStateListener c(com.tencent.mm.sdk.platformtools.PhoneUtil20Impl)
com.tencent.mm.sdk.platformtools.PhoneUtil20Impl: void <clinit>()
com.tencent.mm.sdk.platformtools.PhoneUtil20Impl$1
com.tencent.mm.sdk.platformtools.PhoneUtil20Impl$1: com.tencent.mm.sdk.platformtools.PhoneUtil20Impl aQ
com.tencent.mm.sdk.platformtools.PhoneUtil20Impl$1: PhoneUtil20Impl$1(com.tencent.mm.sdk.platformtools.PhoneUtil20Impl)
com.tencent.mm.sdk.platformtools.PhoneUtil20Impl$1: void onSignalStrengthsChanged(android.telephony.SignalStrength)
com.tencent.mm.sdk.platformtools.SensorController
com.tencent.mm.sdk.platformtools.SensorController: float aR
com.tencent.mm.sdk.platformtools.SensorController: android.hardware.SensorManager aS
com.tencent.mm.sdk.platformtools.SensorController: float aT
com.tencent.mm.sdk.platformtools.SensorController: float aU
com.tencent.mm.sdk.platformtools.SensorController: com.tencent.mm.sdk.platformtools.SensorController$SensorEventCallBack aV
com.tencent.mm.sdk.platformtools.SensorController: android.hardware.Sensor aW
com.tencent.mm.sdk.platformtools.SensorController: boolean aX
com.tencent.mm.sdk.platformtools.SensorController: boolean aY
com.tencent.mm.sdk.platformtools.SensorController: boolean aZ
com.tencent.mm.sdk.platformtools.SensorController: SensorController(android.content.Context)
com.tencent.mm.sdk.platformtools.SensorController: void setSensorCallBack(com.tencent.mm.sdk.platformtools.SensorController$SensorEventCallBack)
com.tencent.mm.sdk.platformtools.SensorController: void removeSensorCallBack()
com.tencent.mm.sdk.platformtools.SensorController: void onAccuracyChanged(android.hardware.Sensor,int)
com.tencent.mm.sdk.platformtools.SensorController: boolean isSensorEnable()
com.tencent.mm.sdk.platformtools.SensorController: void onSensorChanged(android.hardware.SensorEvent)
com.tencent.mm.sdk.platformtools.SensorController: void onReceive(android.content.Context,android.content.Intent)
com.tencent.mm.sdk.platformtools.SensorController: void <clinit>()
com.tencent.mm.sdk.platformtools.SensorController$SensorEventCallBack
com.tencent.mm.sdk.platformtools.SensorController$SensorEventCallBack: void onSensorEvent(boolean)
com.tencent.mm.sdk.platformtools.SmoothScrollToPosition21below
com.tencent.mm.sdk.platformtools.SmoothScrollToPosition21below: SmoothScrollToPosition21below()
com.tencent.mm.sdk.platformtools.SmoothScrollToPosition21below: void doScroll(android.widget.ListView)
com.tencent.mm.sdk.platformtools.SmoothScrollToPosition21below: void doScroll(android.widget.ListView,int)
com.tencent.mm.sdk.platformtools.SmoothScrollToPosition22
com.tencent.mm.sdk.platformtools.SmoothScrollToPosition22: SmoothScrollToPosition22()
com.tencent.mm.sdk.platformtools.SmoothScrollToPosition22: void doScroll(android.widget.ListView)
com.tencent.mm.sdk.platformtools.SmoothScrollToPosition22: void doScroll(android.widget.ListView,int)
com.tencent.mm.sdk.platformtools.SyncTask
com.tencent.mm.sdk.platformtools.SyncTask: java.lang.Object result
com.tencent.mm.sdk.platformtools.SyncTask: java.lang.Object lock
com.tencent.mm.sdk.platformtools.SyncTask: long ba
com.tencent.mm.sdk.platformtools.SyncTask: long bb
com.tencent.mm.sdk.platformtools.SyncTask: long bc
com.tencent.mm.sdk.platformtools.SyncTask: java.lang.Runnable bd
com.tencent.mm.sdk.platformtools.SyncTask: SyncTask()
com.tencent.mm.sdk.platformtools.SyncTask: SyncTask(long,java.lang.Object)
com.tencent.mm.sdk.platformtools.SyncTask: void setResult(java.lang.Object)
com.tencent.mm.sdk.platformtools.SyncTask: java.lang.Object exec(android.os.Handler)
com.tencent.mm.sdk.platformtools.SyncTask: java.lang.Object run()
com.tencent.mm.sdk.platformtools.SyncTask: long a(com.tencent.mm.sdk.platformtools.SyncTask,long)
com.tencent.mm.sdk.platformtools.SyncTask: long a(com.tencent.mm.sdk.platformtools.SyncTask)
com.tencent.mm.sdk.platformtools.SyncTask$1
com.tencent.mm.sdk.platformtools.SyncTask$1: com.tencent.mm.sdk.platformtools.SyncTask be
com.tencent.mm.sdk.platformtools.SyncTask$1: SyncTask$1(com.tencent.mm.sdk.platformtools.SyncTask)
com.tencent.mm.sdk.platformtools.SyncTask$1: void run()
com.tencent.mm.sdk.platformtools.SystemProperty
com.tencent.mm.sdk.platformtools.SystemProperty: java.util.HashMap bf
com.tencent.mm.sdk.platformtools.SystemProperty: SystemProperty()
com.tencent.mm.sdk.platformtools.SystemProperty: java.lang.String getProperty(java.lang.String)
com.tencent.mm.sdk.platformtools.SystemProperty: void setProperty(java.lang.String,java.lang.String)
com.tencent.mm.sdk.platformtools.SystemProperty: void <clinit>()
com.tencent.mm.sdk.platformtools.TimeLogger
com.tencent.mm.sdk.platformtools.TimeLogger: java.lang.String bg
com.tencent.mm.sdk.platformtools.TimeLogger: java.lang.String bh
com.tencent.mm.sdk.platformtools.TimeLogger: boolean bi
com.tencent.mm.sdk.platformtools.TimeLogger: java.util.ArrayList bj
com.tencent.mm.sdk.platformtools.TimeLogger: java.util.ArrayList bk
com.tencent.mm.sdk.platformtools.TimeLogger: TimeLogger(java.lang.String,java.lang.String)
com.tencent.mm.sdk.platformtools.TimeLogger: void reset(java.lang.String,java.lang.String)
com.tencent.mm.sdk.platformtools.TimeLogger: void reset()
com.tencent.mm.sdk.platformtools.TimeLogger: void addSplit(java.lang.String)
com.tencent.mm.sdk.platformtools.TimeLogger: void dumpToLog()
com.tencent.mm.sdk.platformtools.TrafficStats
com.tencent.mm.sdk.platformtools.TrafficStats: long bl
com.tencent.mm.sdk.platformtools.TrafficStats: long bm
com.tencent.mm.sdk.platformtools.TrafficStats: long bn
com.tencent.mm.sdk.platformtools.TrafficStats: long bo
com.tencent.mm.sdk.platformtools.TrafficStats: long bp
com.tencent.mm.sdk.platformtools.TrafficStats: long bq
com.tencent.mm.sdk.platformtools.TrafficStats: long br
com.tencent.mm.sdk.platformtools.TrafficStats: long bs
com.tencent.mm.sdk.platformtools.TrafficStats: java.lang.String DEV_FILE
com.tencent.mm.sdk.platformtools.TrafficStats: java.lang.String GPRSLINE
com.tencent.mm.sdk.platformtools.TrafficStats: java.lang.String WIFILINE
com.tencent.mm.sdk.platformtools.TrafficStats: TrafficStats()
com.tencent.mm.sdk.platformtools.TrafficStats: long getWifiTx(long)
com.tencent.mm.sdk.platformtools.TrafficStats: long getWifiRx(long)
com.tencent.mm.sdk.platformtools.TrafficStats: long getMobileTx(long)
com.tencent.mm.sdk.platformtools.TrafficStats: long getMobileRx(long)
com.tencent.mm.sdk.platformtools.TrafficStats: long updateWifiTx(long)
com.tencent.mm.sdk.platformtools.TrafficStats: long updateWifiRx(long)
com.tencent.mm.sdk.platformtools.TrafficStats: long updateMobileTx(long)
com.tencent.mm.sdk.platformtools.TrafficStats: long updateMobileRx(long)
com.tencent.mm.sdk.platformtools.TrafficStats: void reset()
com.tencent.mm.sdk.platformtools.TrafficStats: void update()
com.tencent.mm.sdk.platformtools.Util
com.tencent.mm.sdk.platformtools.Util: int MAX_DECODE_PICTURE_SIZE
com.tencent.mm.sdk.platformtools.Util: java.lang.String PHOTO_DEFAULT_EXT
com.tencent.mm.sdk.platformtools.Util: long MILLSECONDS_OF_SECOND
com.tencent.mm.sdk.platformtools.Util: long MILLSECONDS_OF_MINUTE
com.tencent.mm.sdk.platformtools.Util: long MILLSECONDS_OF_HOUR
com.tencent.mm.sdk.platformtools.Util: long MILLSECONDS_OF_DAY
com.tencent.mm.sdk.platformtools.Util: long SECOND_OF_MINUTE
com.tencent.mm.sdk.platformtools.Util: long MINUTE_OF_HOUR
com.tencent.mm.sdk.platformtools.Util: long MAX_32BIT_VALUE
com.tencent.mm.sdk.platformtools.Util: int MIN_ACCOUNT_LENGTH
com.tencent.mm.sdk.platformtools.Util: int MAX_ACCOUNT_LENGTH
com.tencent.mm.sdk.platformtools.Util: int MIN_PASSWORD_LENGTH
com.tencent.mm.sdk.platformtools.Util: int MAX_PASSWORD_LENGTH
com.tencent.mm.sdk.platformtools.Util: int BIT_OF_KB
com.tencent.mm.sdk.platformtools.Util: int BIT_OF_MB
com.tencent.mm.sdk.platformtools.Util: int BYTE_OF_KB
com.tencent.mm.sdk.platformtools.Util: int BYTE_OF_MB
com.tencent.mm.sdk.platformtools.Util: int MASK_4BIT
com.tencent.mm.sdk.platformtools.Util: int MASK_8BIT
com.tencent.mm.sdk.platformtools.Util: int MASK_16BIT
com.tencent.mm.sdk.platformtools.Util: int MASK_32BIT
com.tencent.mm.sdk.platformtools.Util: int BEGIN_TIME
com.tencent.mm.sdk.platformtools.Util: int END_TIME
com.tencent.mm.sdk.platformtools.Util: int DAY
com.tencent.mm.sdk.platformtools.Util: java.lang.String TAIWAN
com.tencent.mm.sdk.platformtools.Util: java.lang.String HONGKONG
com.tencent.mm.sdk.platformtools.Util: java.lang.String CHINA
com.tencent.mm.sdk.platformtools.Util: java.lang.String ENGLISH
com.tencent.mm.sdk.platformtools.Util: java.lang.String LANGUAGE_DEFAULT
com.tencent.mm.sdk.platformtools.Util: long[] bt
com.tencent.mm.sdk.platformtools.Util: java.util.TimeZone GMT
com.tencent.mm.sdk.platformtools.Util: char[] bu
com.tencent.mm.sdk.platformtools.Util: char[] bv
com.tencent.mm.sdk.platformtools.Util: java.lang.String[] bw
com.tencent.mm.sdk.platformtools.Util: Util()
com.tencent.mm.sdk.platformtools.Util: java.lang.String escapeSqlValue(java.lang.String)
com.tencent.mm.sdk.platformtools.Util: java.lang.String listToString(java.util.List,java.lang.String)
com.tencent.mm.sdk.platformtools.Util: java.util.List stringsToList(java.lang.String[])
com.tencent.mm.sdk.platformtools.Util: int getIntRandom(int,int)
com.tencent.mm.sdk.platformtools.Util: boolean isDayTimeNow()
com.tencent.mm.sdk.platformtools.Util: boolean isNightTime(int,int,int)
com.tencent.mm.sdk.platformtools.Util: java.lang.String getTimeZoneOffset()
com.tencent.mm.sdk.platformtools.Util: java.lang.String getTimeZone()
com.tencent.mm.sdk.platformtools.Util: java.lang.String getTimeZoneDef()
com.tencent.mm.sdk.platformtools.Util: java.lang.String formatUnixTime(long)
com.tencent.mm.sdk.platformtools.Util: boolean isChinese(char)
com.tencent.mm.sdk.platformtools.Util: boolean isAlpha(char)
com.tencent.mm.sdk.platformtools.Util: boolean isNum(char)
com.tencent.mm.sdk.platformtools.Util: boolean isValidQQNum(java.lang.String)
com.tencent.mm.sdk.platformtools.Util: boolean isValidEmail(java.lang.String)
com.tencent.mm.sdk.platformtools.Util: byte[] bmpToByteArray(android.graphics.Bitmap,boolean)
com.tencent.mm.sdk.platformtools.Util: boolean isValidAccount(java.lang.String)
com.tencent.mm.sdk.platformtools.Util: boolean isValidPassword(java.lang.String)
com.tencent.mm.sdk.platformtools.Util: android.graphics.BitmapFactory$Options getImageOptions(java.lang.String)
com.tencent.mm.sdk.platformtools.Util: void saveBitmapToImage(android.graphics.Bitmap,int,android.graphics.Bitmap$CompressFormat,java.lang.String,java.lang.String,boolean)
com.tencent.mm.sdk.platformtools.Util: void saveBitmapToImage(android.graphics.Bitmap,int,android.graphics.Bitmap$CompressFormat,java.lang.String,boolean)
com.tencent.mm.sdk.platformtools.Util: android.graphics.Bitmap getRoundedCornerBitmap(android.graphics.Bitmap,boolean,float)
com.tencent.mm.sdk.platformtools.Util: java.lang.String getSizeKB(long)
com.tencent.mm.sdk.platformtools.Util: java.lang.String getSizeMB(long)
com.tencent.mm.sdk.platformtools.Util: java.lang.String dumpArray(java.lang.Object[])
com.tencent.mm.sdk.platformtools.Util: java.lang.String dumpHex(byte[])
com.tencent.mm.sdk.platformtools.Util: android.content.Intent getInstallPackIntent(java.lang.String,android.content.Context)
com.tencent.mm.sdk.platformtools.Util: void installPack(java.lang.String,android.content.Context)
com.tencent.mm.sdk.platformtools.Util: void shake(android.content.Context,boolean)
com.tencent.mm.sdk.platformtools.Util: android.media.MediaPlayer playSound(android.content.Context,int,android.media.MediaPlayer$OnCompletionListener)
com.tencent.mm.sdk.platformtools.Util: void playSound(android.content.Context,int)
com.tencent.mm.sdk.platformtools.Util: long nowSecond()
com.tencent.mm.sdk.platformtools.Util: java.lang.String formatSecToMin(int)
com.tencent.mm.sdk.platformtools.Util: long nowMilliSecond()
com.tencent.mm.sdk.platformtools.Util: long secondsToNow(long)
com.tencent.mm.sdk.platformtools.Util: long milliSecondsToNow(long)
com.tencent.mm.sdk.platformtools.Util: long ticksToNow(long)
com.tencent.mm.sdk.platformtools.Util: long currentTicks()
com.tencent.mm.sdk.platformtools.Util: long currentDayInMills()
com.tencent.mm.sdk.platformtools.Util: long currentWeekInMills()
com.tencent.mm.sdk.platformtools.Util: long currentMonthInMills()
com.tencent.mm.sdk.platformtools.Util: long currentYearInMills()
com.tencent.mm.sdk.platformtools.Util: int getSystemVersion(android.content.Context,int)
com.tencent.mm.sdk.platformtools.Util: java.lang.String getDeviceId(android.content.Context)
com.tencent.mm.sdk.platformtools.Util: java.lang.String getLine1Number(android.content.Context)
com.tencent.mm.sdk.platformtools.Util: boolean isLockScreen(android.content.Context)
com.tencent.mm.sdk.platformtools.Util: boolean isTopActivity(android.content.Context)
com.tencent.mm.sdk.platformtools.Util: boolean isServiceRunning(android.content.Context,java.lang.String)
com.tencent.mm.sdk.platformtools.Util: boolean isProcessRunning(android.content.Context,java.lang.String)
com.tencent.mm.sdk.platformtools.Util: java.lang.String getTopActivityName(android.content.Context)
com.tencent.mm.sdk.platformtools.Util: boolean isTopApplication(android.content.Context)
com.tencent.mm.sdk.platformtools.Util: boolean isIntentAvailable(android.content.Context,android.content.Intent)
com.tencent.mm.sdk.platformtools.Util: void freeBitmapMap(java.util.Map)
com.tencent.mm.sdk.platformtools.Util: void selectPicture(android.content.Context,int)
com.tencent.mm.sdk.platformtools.Util: int nullAsNil(java.lang.Integer)
com.tencent.mm.sdk.platformtools.Util: long nullAsNil(java.lang.Long)
com.tencent.mm.sdk.platformtools.Util: java.lang.String nullAsNil(java.lang.String)
com.tencent.mm.sdk.platformtools.Util: boolean nullAsTrue(java.lang.Boolean)
com.tencent.mm.sdk.platformtools.Util: boolean nullAsFalse(java.lang.Boolean)
com.tencent.mm.sdk.platformtools.Util: int nullAs(java.lang.Integer,int)
com.tencent.mm.sdk.platformtools.Util: long nullAs(java.lang.Long,long)
com.tencent.mm.sdk.platformtools.Util: boolean nullAs(java.lang.Boolean,boolean)
com.tencent.mm.sdk.platformtools.Util: java.lang.String nullAs(java.lang.String,java.lang.String)
com.tencent.mm.sdk.platformtools.Util: int nullAsInt(java.lang.Object,int)
com.tencent.mm.sdk.platformtools.Util: boolean isNullOrNil(java.lang.String)
com.tencent.mm.sdk.platformtools.Util: boolean isNullOrNil(byte[])
com.tencent.mm.sdk.platformtools.Util: int getInt(java.lang.String,int)
com.tencent.mm.sdk.platformtools.Util: long getLong(java.lang.String,long)
com.tencent.mm.sdk.platformtools.Util: int getHex(java.lang.String,int)
com.tencent.mm.sdk.platformtools.Util: java.util.Map parseXml(java.lang.String,java.lang.String,java.lang.String)
com.tencent.mm.sdk.platformtools.Util: void a(java.util.Map,java.lang.String,org.w3c.dom.Node,int)
com.tencent.mm.sdk.platformtools.Util: void transClickToSelect(android.view.View,android.view.View)
com.tencent.mm.sdk.platformtools.Util: java.lang.String getCutPasswordMD5(java.lang.String)
com.tencent.mm.sdk.platformtools.Util: java.lang.String getFullPasswordMD5(java.lang.String)
com.tencent.mm.sdk.platformtools.Util: org.w3c.dom.Element getRootElementFromXML(byte[])
com.tencent.mm.sdk.platformtools.Util: java.lang.String convertStreamToString(java.io.InputStream)
com.tencent.mm.sdk.platformtools.Util: java.lang.String encodeHexString(byte[])
com.tencent.mm.sdk.platformtools.Util: byte[] decodeHexString(java.lang.String)
com.tencent.mm.sdk.platformtools.Util: int guessHttpSendLength(int)
com.tencent.mm.sdk.platformtools.Util: int guessHttpRecvLength(int)
com.tencent.mm.sdk.platformtools.Util: int guessHttpContinueRecvLength(int)
com.tencent.mm.sdk.platformtools.Util: int guessTcpConnectLength()
com.tencent.mm.sdk.platformtools.Util: int guessTcpDisconnectLength()
com.tencent.mm.sdk.platformtools.Util: int guessTcpSendLength(int)
com.tencent.mm.sdk.platformtools.Util: int guessTcpRecvLength(int)
com.tencent.mm.sdk.platformtools.Util: int[] splitToIntArray(java.lang.String)
com.tencent.mm.sdk.platformtools.Util: int UnZipFolder(java.lang.String,java.lang.String)
com.tencent.mm.sdk.platformtools.Util: java.lang.String getStack()
com.tencent.mm.sdk.platformtools.Util: boolean checkSDCardFull()
com.tencent.mm.sdk.platformtools.Util: java.lang.String GetHostIp()
com.tencent.mm.sdk.platformtools.Util: boolean checkPermission(android.content.Context,java.lang.String)
com.tencent.mm.sdk.platformtools.Util: boolean jump(android.content.Context,java.lang.String)
com.tencent.mm.sdk.platformtools.Util: java.lang.String escapeStringForXml(java.lang.String)
com.tencent.mm.sdk.platformtools.Util: java.lang.String processXml(java.lang.String)
com.tencent.mm.sdk.platformtools.Util: java.lang.String expandEntities(java.lang.String)
com.tencent.mm.sdk.platformtools.Util: int a(char[],int,int)
com.tencent.mm.sdk.platformtools.Util: boolean isImgFile(java.lang.String)
com.tencent.mm.sdk.platformtools.Util: java.lang.String mapToXml(java.lang.String,java.util.LinkedHashMap)
com.tencent.mm.sdk.platformtools.Util: java.util.Map parseIni(java.lang.String)
com.tencent.mm.sdk.platformtools.Util: void <clinit>()
com.tencent.mm.sdk.platformtools.Util$1
com.tencent.mm.sdk.platformtools.Util$1: Util$1()
com.tencent.mm.sdk.platformtools.Util$1: void onCompletion(android.media.MediaPlayer)
com.tencent.mm.sdk.platformtools.Util$2
com.tencent.mm.sdk.platformtools.Util$2: android.view.View bx
com.tencent.mm.sdk.platformtools.Util$2: android.view.View by
com.tencent.mm.sdk.platformtools.Util$2: Util$2(android.view.View,android.view.View)
com.tencent.mm.sdk.platformtools.Util$2: boolean onTouch(android.view.View,android.view.MotionEvent)
com.tencent.mm.sdk.platformtools.package-info
com.tencent.mm.sdk.plugin.IMMPluginAPI
com.tencent.mm.sdk.plugin.IMMPluginAPI: java.lang.String getPluginKey(java.lang.String)
com.tencent.mm.sdk.plugin.IMMPluginAPI: boolean isPluginInstalled(java.lang.String)
com.tencent.mm.sdk.plugin.IMMPluginAPI: boolean installPlugin(java.lang.String)
com.tencent.mm.sdk.plugin.IMMPluginAPI: com.tencent.mm.sdk.plugin.Profile getCurrentProfile(java.lang.String)
com.tencent.mm.sdk.plugin.IMMPluginAPI: void createQRCodeController(java.lang.String)
com.tencent.mm.sdk.plugin.IMMPluginAPI: void createQRCodeController(java.lang.String,com.tencent.mm.sdk.channel.MMessage$CallBack)
com.tencent.mm.sdk.plugin.IMMPluginAPI: void createQRCodeController(java.lang.String,com.tencent.mm.sdk.channel.MMessage$CallBack,java.lang.String)
com.tencent.mm.sdk.plugin.IMMPluginAPI: boolean registerQRCodePattern(java.lang.String,com.tencent.mm.sdk.channel.MMessage$CallBack,java.lang.String)
com.tencent.mm.sdk.plugin.IMMPluginAPI: void jumpToSettingView(java.lang.String,java.lang.String)
com.tencent.mm.sdk.plugin.IMMPluginAPI: void createMsgController(java.lang.String)
com.tencent.mm.sdk.plugin.IMMPluginAPI: boolean registerPattern(java.lang.String,com.tencent.mm.sdk.channel.MMessage$CallBack,java.lang.String)
com.tencent.mm.sdk.plugin.IMMPluginAPI: void jumpToChattingUI(java.lang.String,java.lang.String)
com.tencent.mm.sdk.plugin.IMMPluginAPI: void jumpToBindQQ(java.lang.String)
com.tencent.mm.sdk.plugin.IMMPluginAPI: void jumpToBindMobile(java.lang.String)
com.tencent.mm.sdk.plugin.IMMPluginAPI: void jumpToBindEmail(java.lang.String)
com.tencent.mm.sdk.plugin.IMMPluginAPI: void release()
com.tencent.mm.sdk.plugin.IMMPluginAPI: boolean sendMsgNotify(java.lang.String,java.lang.String,int,java.lang.String,java.lang.Class)
com.tencent.mm.sdk.plugin.IMMPluginAPI: boolean registerAutoMsg(java.lang.String,java.lang.String)
com.tencent.mm.sdk.plugin.IMMPluginAPI: boolean unregisterAutoMsg(java.lang.String,java.lang.String)
com.tencent.mm.sdk.plugin.IMMPluginAPI: boolean appendNetStat(int,int,int)
com.tencent.mm.sdk.plugin.MMPluginAPIImpl
com.tencent.mm.sdk.plugin.MMPluginAPIImpl: android.content.Context R
com.tencent.mm.sdk.plugin.MMPluginAPIImpl: com.tencent.mm.sdk.channel.MMessage$Receiver bz
com.tencent.mm.sdk.plugin.MMPluginAPIImpl: java.lang.String aE
com.tencent.mm.sdk.plugin.MMPluginAPIImpl: java.lang.String[] columns
com.tencent.mm.sdk.plugin.MMPluginAPIImpl: MMPluginAPIImpl(android.content.Context)
com.tencent.mm.sdk.plugin.MMPluginAPIImpl: void release()
com.tencent.mm.sdk.plugin.MMPluginAPIImpl: java.lang.Object c(java.lang.String)
com.tencent.mm.sdk.plugin.MMPluginAPIImpl: boolean registerAutoMsg(java.lang.String,java.lang.String)
com.tencent.mm.sdk.plugin.MMPluginAPIImpl: boolean unregisterAutoMsg(java.lang.String,java.lang.String)
com.tencent.mm.sdk.plugin.MMPluginAPIImpl: boolean sendMsgNotify(java.lang.String,java.lang.String,int,java.lang.String,java.lang.Class)
com.tencent.mm.sdk.plugin.MMPluginAPIImpl: java.lang.String getPluginKey(java.lang.String)
com.tencent.mm.sdk.plugin.MMPluginAPIImpl: boolean isPluginInstalled(java.lang.String)
com.tencent.mm.sdk.plugin.MMPluginAPIImpl: boolean installPlugin(java.lang.String)
com.tencent.mm.sdk.plugin.MMPluginAPIImpl: void a(java.lang.String,java.lang.String,android.content.Intent)
com.tencent.mm.sdk.plugin.MMPluginAPIImpl: void createQRCodeController(java.lang.String)
com.tencent.mm.sdk.plugin.MMPluginAPIImpl: void createQRCodeController(java.lang.String,com.tencent.mm.sdk.channel.MMessage$CallBack)
com.tencent.mm.sdk.plugin.MMPluginAPIImpl: void createQRCodeController(java.lang.String,com.tencent.mm.sdk.channel.MMessage$CallBack,java.lang.String)
com.tencent.mm.sdk.plugin.MMPluginAPIImpl: boolean registerQRCodePattern(java.lang.String,com.tencent.mm.sdk.channel.MMessage$CallBack,java.lang.String)
com.tencent.mm.sdk.plugin.MMPluginAPIImpl: void jumpToSettingView(java.lang.String,java.lang.String)
com.tencent.mm.sdk.plugin.MMPluginAPIImpl: void jumpToChattingUI(java.lang.String,java.lang.String)
com.tencent.mm.sdk.plugin.MMPluginAPIImpl: com.tencent.mm.sdk.plugin.Profile getCurrentProfile(java.lang.String)
com.tencent.mm.sdk.plugin.MMPluginAPIImpl: void jumpToBindQQ(java.lang.String)
com.tencent.mm.sdk.plugin.MMPluginAPIImpl: void jumpToBindMobile(java.lang.String)
com.tencent.mm.sdk.plugin.MMPluginAPIImpl: void jumpToBindEmail(java.lang.String)
com.tencent.mm.sdk.plugin.MMPluginAPIImpl: void createMsgController(java.lang.String)
com.tencent.mm.sdk.plugin.MMPluginAPIImpl: boolean registerPattern(java.lang.String,com.tencent.mm.sdk.channel.MMessage$CallBack,java.lang.String)
com.tencent.mm.sdk.plugin.MMPluginAPIImpl: boolean appendNetStat(int,int,int)
com.tencent.mm.sdk.plugin.MMPluginAPIImpl: void <clinit>()
com.tencent.mm.sdk.plugin.MMPluginMsg
com.tencent.mm.sdk.plugin.MMPluginMsg: long msgClientId
com.tencent.mm.sdk.plugin.MMPluginMsg: java.lang.String content
com.tencent.mm.sdk.plugin.MMPluginMsg: java.lang.String ACTION_AUTO_MSG
com.tencent.mm.sdk.plugin.MMPluginMsg: java.lang.String RECV_PKG
com.tencent.mm.sdk.plugin.MMPluginMsg: java.lang.String RECV_MSG
com.tencent.mm.sdk.plugin.MMPluginMsg: java.lang.String RECV_THUMB
com.tencent.mm.sdk.plugin.MMPluginMsg: java.lang.String SEND_ID
com.tencent.mm.sdk.plugin.MMPluginMsg: java.lang.String SEND_ERR_TYPE
com.tencent.mm.sdk.plugin.MMPluginMsg: java.lang.String SEND_ERR_CODE
com.tencent.mm.sdk.plugin.MMPluginMsg: java.lang.String TYPE
com.tencent.mm.sdk.plugin.MMPluginMsg: int TYPE_SEND_RET
com.tencent.mm.sdk.plugin.MMPluginMsg: int TYPE_RECV_MSG
com.tencent.mm.sdk.plugin.MMPluginMsg: MMPluginMsg()
com.tencent.mm.sdk.plugin.MMPluginMsg: com.tencent.mm.sdk.openapi.WXAppExtendObject pluginMsgToWXAppExtendObject(com.tencent.mm.sdk.plugin.MMPluginMsg)
com.tencent.mm.sdk.plugin.MMPluginMsg: com.tencent.mm.sdk.plugin.MMPluginMsg WXAppExtentObjectToPluginMsg(com.tencent.mm.sdk.openapi.WXAppExtendObject)
com.tencent.mm.sdk.plugin.MMPluginMsg: long sendMessage(android.content.Context,java.lang.String)
com.tencent.mm.sdk.plugin.MMPluginMsg$ReceiverHelper
com.tencent.mm.sdk.plugin.MMPluginMsg$ReceiverHelper: int type
com.tencent.mm.sdk.plugin.MMPluginMsg$ReceiverHelper: android.content.Intent intent
com.tencent.mm.sdk.plugin.MMPluginMsg$ReceiverHelper: MMPluginMsg$ReceiverHelper(android.content.Intent)
com.tencent.mm.sdk.plugin.MMPluginMsg$ReceiverHelper: boolean isSendRet()
com.tencent.mm.sdk.plugin.MMPluginMsg$ReceiverHelper: boolean isRecvNew()
com.tencent.mm.sdk.plugin.MMPluginMsg$ReceiverHelper: java.lang.String getMsgContent()
com.tencent.mm.sdk.plugin.MMPluginMsg$ReceiverHelper: java.lang.Integer getSendErrCode()
com.tencent.mm.sdk.plugin.MMPluginMsg$ReceiverHelper: java.lang.Integer getSendErrType()
com.tencent.mm.sdk.plugin.MMPluginMsg$ReceiverHelper: java.lang.Long getSendMsgId()
com.tencent.mm.sdk.plugin.MMPluginOAuth
com.tencent.mm.sdk.plugin.MMPluginOAuth: com.tencent.mm.sdk.plugin.MMPluginOAuth$IResult bA
com.tencent.mm.sdk.plugin.MMPluginOAuth: android.content.Context R
com.tencent.mm.sdk.plugin.MMPluginOAuth: java.lang.String bB
com.tencent.mm.sdk.plugin.MMPluginOAuth: java.lang.String bC
com.tencent.mm.sdk.plugin.MMPluginOAuth: android.os.Handler handler
com.tencent.mm.sdk.plugin.MMPluginOAuth: MMPluginOAuth(android.content.Context,com.tencent.mm.sdk.plugin.MMPluginOAuth$IResult)
com.tencent.mm.sdk.plugin.MMPluginOAuth: java.lang.String getAccessToken()
com.tencent.mm.sdk.plugin.MMPluginOAuth: java.lang.String getRequestToken()
com.tencent.mm.sdk.plugin.MMPluginOAuth: void start()
com.tencent.mm.sdk.plugin.MMPluginOAuth: boolean start(android.os.Handler)
com.tencent.mm.sdk.plugin.MMPluginOAuth: java.lang.String a(com.tencent.mm.sdk.plugin.MMPluginOAuth)
com.tencent.mm.sdk.plugin.MMPluginOAuth: void a(com.tencent.mm.sdk.plugin.MMPluginOAuth,java.lang.String)
com.tencent.mm.sdk.plugin.MMPluginOAuth: com.tencent.mm.sdk.plugin.MMPluginOAuth$IResult b(com.tencent.mm.sdk.plugin.MMPluginOAuth)
com.tencent.mm.sdk.plugin.MMPluginOAuth$1
com.tencent.mm.sdk.plugin.MMPluginOAuth$1: com.tencent.mm.sdk.plugin.MMPluginOAuth bD
com.tencent.mm.sdk.plugin.MMPluginOAuth$1: MMPluginOAuth$1(com.tencent.mm.sdk.plugin.MMPluginOAuth)
com.tencent.mm.sdk.plugin.MMPluginOAuth$1: void run()
com.tencent.mm.sdk.plugin.MMPluginOAuth$IResult
com.tencent.mm.sdk.plugin.MMPluginOAuth$IResult: void onResult(com.tencent.mm.sdk.plugin.MMPluginOAuth)
com.tencent.mm.sdk.plugin.MMPluginOAuth$IResult: void onSessionTimeOut()
com.tencent.mm.sdk.plugin.MMPluginOAuth$Receiver
com.tencent.mm.sdk.plugin.MMPluginOAuth$Receiver: java.util.Map aA
com.tencent.mm.sdk.plugin.MMPluginOAuth$Receiver: com.tencent.mm.sdk.plugin.MMPluginOAuth bE
com.tencent.mm.sdk.plugin.MMPluginOAuth$Receiver: MMPluginOAuth$Receiver()
com.tencent.mm.sdk.plugin.MMPluginOAuth$Receiver: MMPluginOAuth$Receiver(com.tencent.mm.sdk.plugin.MMPluginOAuth)
com.tencent.mm.sdk.plugin.MMPluginOAuth$Receiver: void onReceive(android.content.Context,android.content.Intent)
com.tencent.mm.sdk.plugin.MMPluginOAuth$Receiver: void register(java.lang.String,com.tencent.mm.sdk.plugin.MMPluginOAuth)
com.tencent.mm.sdk.plugin.MMPluginOAuth$Receiver: void unregister(java.lang.String)
com.tencent.mm.sdk.plugin.MMPluginOAuth$Receiver: void <clinit>()
com.tencent.mm.sdk.plugin.MMPluginOAuth$Receiver$1
com.tencent.mm.sdk.plugin.MMPluginOAuth$Receiver$1: com.tencent.mm.sdk.plugin.MMPluginOAuth bF
com.tencent.mm.sdk.plugin.MMPluginOAuth$Receiver$1: java.lang.String bG
com.tencent.mm.sdk.plugin.MMPluginOAuth$Receiver$1: com.tencent.mm.sdk.plugin.MMPluginOAuth$Receiver bH
com.tencent.mm.sdk.plugin.MMPluginOAuth$Receiver$1: MMPluginOAuth$Receiver$1(com.tencent.mm.sdk.plugin.MMPluginOAuth$Receiver,com.tencent.mm.sdk.plugin.MMPluginOAuth,java.lang.String)
com.tencent.mm.sdk.plugin.MMPluginOAuth$Receiver$1: void run()
com.tencent.mm.sdk.plugin.MMPluginProviderConstants
com.tencent.mm.sdk.plugin.MMPluginProviderConstants: java.lang.String AUTHORITY
com.tencent.mm.sdk.plugin.MMPluginProviderConstants: int TYPE_UNKNOWN
com.tencent.mm.sdk.plugin.MMPluginProviderConstants: int TYPE_INT
com.tencent.mm.sdk.plugin.MMPluginProviderConstants: int TYPE_LONG
com.tencent.mm.sdk.plugin.MMPluginProviderConstants: int TYPE_STRING
com.tencent.mm.sdk.plugin.MMPluginProviderConstants: int TYPE_BOOLEAN
com.tencent.mm.sdk.plugin.MMPluginProviderConstants: int TYPE_FLOAT
com.tencent.mm.sdk.plugin.MMPluginProviderConstants: int TYPE_DOUBLE
com.tencent.mm.sdk.plugin.MMPluginProviderConstants: java.lang.String PLUGIN_PACKAGE_PATTERN
com.tencent.mm.sdk.plugin.MMPluginProviderConstants: MMPluginProviderConstants()
com.tencent.mm.sdk.plugin.MMPluginProviderConstants$OAuth
com.tencent.mm.sdk.plugin.MMPluginProviderConstants$OAuth: android.net.Uri CONTENT_URI
com.tencent.mm.sdk.plugin.MMPluginProviderConstants$OAuth: java.lang.String API_KEY
com.tencent.mm.sdk.plugin.MMPluginProviderConstants$OAuth: java.lang.String REQUEST_TOKEN
com.tencent.mm.sdk.plugin.MMPluginProviderConstants$OAuth: java.lang.String ACCESS_TOKEN
com.tencent.mm.sdk.plugin.MMPluginProviderConstants$OAuth: java.lang.String SECRET
com.tencent.mm.sdk.plugin.MMPluginProviderConstants$OAuth: java.lang.String ACTION_REQUEST_TOKEN
com.tencent.mm.sdk.plugin.MMPluginProviderConstants$OAuth: MMPluginProviderConstants$OAuth()
com.tencent.mm.sdk.plugin.MMPluginProviderConstants$OAuth: void <clinit>()
com.tencent.mm.sdk.plugin.MMPluginProviderConstants$PluginDB
com.tencent.mm.sdk.plugin.MMPluginProviderConstants$PluginDB: android.net.Uri CONTENT_URI
com.tencent.mm.sdk.plugin.MMPluginProviderConstants$PluginDB: java.lang.String KEY
com.tencent.mm.sdk.plugin.MMPluginProviderConstants$PluginDB: java.lang.String TYPE
com.tencent.mm.sdk.plugin.MMPluginProviderConstants$PluginDB: java.lang.String VALUE
com.tencent.mm.sdk.plugin.MMPluginProviderConstants$PluginDB: MMPluginProviderConstants$PluginDB()
com.tencent.mm.sdk.plugin.MMPluginProviderConstants$PluginDB: void <clinit>()
com.tencent.mm.sdk.plugin.MMPluginProviderConstants$PluginIntent
com.tencent.mm.sdk.plugin.MMPluginProviderConstants$PluginIntent: java.lang.String AUTH_KEY
com.tencent.mm.sdk.plugin.MMPluginProviderConstants$PluginIntent: java.lang.String NAME
com.tencent.mm.sdk.plugin.MMPluginProviderConstants$PluginIntent: java.lang.String PACKAGE
com.tencent.mm.sdk.plugin.MMPluginProviderConstants$PluginIntent: java.lang.String REQUEST_TOKEN
com.tencent.mm.sdk.plugin.MMPluginProviderConstants$PluginIntent: java.lang.String ACCESS_TOKEN
com.tencent.mm.sdk.plugin.MMPluginProviderConstants$PluginIntent: java.lang.String PERMISSIONS
com.tencent.mm.sdk.plugin.MMPluginProviderConstants$PluginIntent: java.lang.String ACTION_REQUEST_TOKEN
com.tencent.mm.sdk.plugin.MMPluginProviderConstants$PluginIntent: java.lang.String ACTION_RESPONSE
com.tencent.mm.sdk.plugin.MMPluginProviderConstants$PluginIntent: java.lang.String ACTION_QRCODE_SCANNED
com.tencent.mm.sdk.plugin.MMPluginProviderConstants$PluginIntent: java.lang.String PLUGIN_PACKAGE_PATTERN
com.tencent.mm.sdk.plugin.MMPluginProviderConstants$PluginIntent: java.lang.String APP_PACKAGE_PATTERN
com.tencent.mm.sdk.plugin.MMPluginProviderConstants$PluginIntent: MMPluginProviderConstants$PluginIntent()
com.tencent.mm.sdk.plugin.MMPluginProviderConstants$Resolver
com.tencent.mm.sdk.plugin.MMPluginProviderConstants$Resolver: MMPluginProviderConstants$Resolver()
com.tencent.mm.sdk.plugin.MMPluginProviderConstants$Resolver: int getType(java.lang.Object)
com.tencent.mm.sdk.plugin.MMPluginProviderConstants$Resolver: boolean unresolveObj(android.content.ContentValues,java.lang.Object)
com.tencent.mm.sdk.plugin.MMPluginProviderConstants$Resolver: java.lang.Object resolveObj(int,java.lang.String)
com.tencent.mm.sdk.plugin.MMPluginProviderConstants$SharedPref
com.tencent.mm.sdk.plugin.MMPluginProviderConstants$SharedPref: android.net.Uri CONTENT_URI
com.tencent.mm.sdk.plugin.MMPluginProviderConstants$SharedPref: java.lang.String KEY
com.tencent.mm.sdk.plugin.MMPluginProviderConstants$SharedPref: java.lang.String TYPE
com.tencent.mm.sdk.plugin.MMPluginProviderConstants$SharedPref: java.lang.String VALUE
com.tencent.mm.sdk.plugin.MMPluginProviderConstants$SharedPref: MMPluginProviderConstants$SharedPref()
com.tencent.mm.sdk.plugin.MMPluginProviderConstants$SharedPref: void <clinit>()
com.tencent.mm.sdk.plugin.MMPluginUtil
com.tencent.mm.sdk.plugin.MMPluginUtil: MMPluginUtil()
com.tencent.mm.sdk.plugin.MMPluginUtil: com.tencent.mm.sdk.plugin.IMMPluginAPI queryPluginMgr(android.content.Context)
com.tencent.mm.sdk.plugin.Profile
com.tencent.mm.sdk.plugin.Profile: java.lang.reflect.Field[] p
com.tencent.mm.sdk.plugin.Profile: android.net.Uri CONTENT_URI
com.tencent.mm.sdk.plugin.Profile: java.lang.String[] columns
com.tencent.mm.sdk.plugin.Profile: java.lang.String field_username
com.tencent.mm.sdk.plugin.Profile: long field_bindqq
com.tencent.mm.sdk.plugin.Profile: java.lang.String field_bindmobile
com.tencent.mm.sdk.plugin.Profile: java.lang.String field_bindemail
com.tencent.mm.sdk.plugin.Profile: java.lang.String field_alias
com.tencent.mm.sdk.plugin.Profile: java.lang.String field_nickname
com.tencent.mm.sdk.plugin.Profile: java.lang.String field_signature
com.tencent.mm.sdk.plugin.Profile: java.lang.String field_province
com.tencent.mm.sdk.plugin.Profile: java.lang.String field_city
com.tencent.mm.sdk.plugin.Profile: java.lang.String field_weibo
com.tencent.mm.sdk.plugin.Profile: java.lang.String field_avatar
com.tencent.mm.sdk.plugin.Profile: Profile()
com.tencent.mm.sdk.plugin.Profile: java.lang.reflect.Field[] fields()
com.tencent.mm.sdk.plugin.Profile: void <clinit>()
com.tencent.mm.sdk.plugin.package-info
com.tencent.mm.sdk.storage.ContentProviderDB
com.tencent.mm.sdk.storage.ContentProviderDB: android.content.Context R
com.tencent.mm.sdk.storage.ContentProviderDB: ContentProviderDB(android.content.Context)
com.tencent.mm.sdk.storage.ContentProviderDB: android.net.Uri getUriFromTable(java.lang.String)
com.tencent.mm.sdk.storage.ContentProviderDB: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)
com.tencent.mm.sdk.storage.ContentProviderDB: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])
com.tencent.mm.sdk.storage.ContentProviderDB: boolean execSQL(java.lang.String,java.lang.String)
com.tencent.mm.sdk.storage.ContentProviderDB: long insert(java.lang.String,java.lang.String,android.content.ContentValues)
com.tencent.mm.sdk.storage.ContentProviderDB: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])
com.tencent.mm.sdk.storage.ContentProviderDB: long replace(java.lang.String,java.lang.String,android.content.ContentValues)
com.tencent.mm.sdk.storage.ContentProviderDB: int delete(java.lang.String,java.lang.String,java.lang.String[])
com.tencent.mm.sdk.storage.CursorFieldHelper
com.tencent.mm.sdk.storage.CursorFieldHelper: java.util.Map bI
com.tencent.mm.sdk.storage.CursorFieldHelper: java.util.Map bJ
com.tencent.mm.sdk.storage.CursorFieldHelper: java.util.Map bK
com.tencent.mm.sdk.storage.CursorFieldHelper: CursorFieldHelper()
com.tencent.mm.sdk.storage.CursorFieldHelper: java.lang.String type(java.lang.Class)
com.tencent.mm.sdk.storage.CursorFieldHelper: java.lang.reflect.Method get(java.lang.Class,boolean)
com.tencent.mm.sdk.storage.CursorFieldHelper: void keep_setBlob(java.lang.reflect.Field,java.lang.Object,android.database.Cursor,int)
com.tencent.mm.sdk.storage.CursorFieldHelper: void keep_getBlob(java.lang.reflect.Field,java.lang.Object,android.content.ContentValues)
com.tencent.mm.sdk.storage.CursorFieldHelper: void keep_setShort(java.lang.reflect.Field,java.lang.Object,android.database.Cursor,int)
com.tencent.mm.sdk.storage.CursorFieldHelper: void keep_getShort(java.lang.reflect.Field,java.lang.Object,android.content.ContentValues)
com.tencent.mm.sdk.storage.CursorFieldHelper: void keep_setBoolean(java.lang.reflect.Field,java.lang.Object,android.database.Cursor,int)
com.tencent.mm.sdk.storage.CursorFieldHelper: void keep_getBoolean(java.lang.reflect.Field,java.lang.Object,android.content.ContentValues)
com.tencent.mm.sdk.storage.CursorFieldHelper: void keep_setInt(java.lang.reflect.Field,java.lang.Object,android.database.Cursor,int)
com.tencent.mm.sdk.storage.CursorFieldHelper: void keep_getInt(java.lang.reflect.Field,java.lang.Object,android.content.ContentValues)
com.tencent.mm.sdk.storage.CursorFieldHelper: void keep_setFloat(java.lang.reflect.Field,java.lang.Object,android.database.Cursor,int)
com.tencent.mm.sdk.storage.CursorFieldHelper: void keep_getFloat(java.lang.reflect.Field,java.lang.Object,android.content.ContentValues)
com.tencent.mm.sdk.storage.CursorFieldHelper: void keep_setDouble(java.lang.reflect.Field,java.lang.Object,android.database.Cursor,int)
com.tencent.mm.sdk.storage.CursorFieldHelper: void keep_getDouble(java.lang.reflect.Field,java.lang.Object,android.content.ContentValues)
com.tencent.mm.sdk.storage.CursorFieldHelper: void keep_setLong(java.lang.reflect.Field,java.lang.Object,android.database.Cursor,int)
com.tencent.mm.sdk.storage.CursorFieldHelper: void keep_getLong(java.lang.reflect.Field,java.lang.Object,android.content.ContentValues)
com.tencent.mm.sdk.storage.CursorFieldHelper: void keep_setString(java.lang.reflect.Field,java.lang.Object,android.database.Cursor,int)
com.tencent.mm.sdk.storage.CursorFieldHelper: void keep_getString(java.lang.reflect.Field,java.lang.Object,android.content.ContentValues)
com.tencent.mm.sdk.storage.CursorFieldHelper: void <clinit>()
com.tencent.mm.sdk.storage.ISQLiteDatabase
com.tencent.mm.sdk.storage.ISQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)
com.tencent.mm.sdk.storage.ISQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])
com.tencent.mm.sdk.storage.ISQLiteDatabase: boolean execSQL(java.lang.String,java.lang.String)
com.tencent.mm.sdk.storage.ISQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)
com.tencent.mm.sdk.storage.ISQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])
com.tencent.mm.sdk.storage.ISQLiteDatabase: long replace(java.lang.String,java.lang.String,android.content.ContentValues)
com.tencent.mm.sdk.storage.ISQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])
com.tencent.mm.sdk.storage.MAutoDBItem
com.tencent.mm.sdk.storage.MAutoDBItem: java.lang.String SYSTEM_ROWID_FIELD
com.tencent.mm.sdk.storage.MAutoDBItem: long systemRowid
com.tencent.mm.sdk.storage.MAutoDBItem: MAutoDBItem()
com.tencent.mm.sdk.storage.MAutoDBItem: java.lang.reflect.Field[] fields()
com.tencent.mm.sdk.storage.MAutoDBItem: java.lang.reflect.Field[] getValidFields(java.lang.Class)
com.tencent.mm.sdk.storage.MAutoDBItem: void convertFrom(android.database.Cursor)
com.tencent.mm.sdk.storage.MAutoDBItem: android.content.ContentValues convertTo()
com.tencent.mm.sdk.storage.MAutoDBItem: android.database.Cursor getCursorForProjection(android.content.ContentValues,java.lang.String[])
com.tencent.mm.sdk.storage.MAutoDBItem: java.util.Map identify(java.lang.reflect.Field[],java.lang.StringBuilder,java.lang.String)
com.tencent.mm.sdk.storage.MAutoDBItem: java.lang.String[] getFullColumns(java.lang.reflect.Field[])
com.tencent.mm.sdk.storage.MAutoDBItem: boolean checkIOEqual(android.content.ContentValues,android.database.Cursor)
com.tencent.mm.sdk.storage.MAutoStorage
com.tencent.mm.sdk.storage.MAutoStorage: com.tencent.mm.sdk.storage.ISQLiteDatabase P
com.tencent.mm.sdk.storage.MAutoStorage: java.lang.String bL
com.tencent.mm.sdk.storage.MAutoStorage: java.lang.String[] columns
com.tencent.mm.sdk.storage.MAutoStorage: java.lang.String getTableName()
com.tencent.mm.sdk.storage.MAutoStorage: java.lang.String getPrimaryKey()
com.tencent.mm.sdk.storage.MAutoStorage: java.lang.String[] getColumns()
com.tencent.mm.sdk.storage.MAutoStorage: MAutoStorage(com.tencent.mm.sdk.storage.ISQLiteDatabase)
com.tencent.mm.sdk.storage.MAutoStorage: java.util.List getCreateSQLs(java.lang.reflect.Field[],java.lang.String,java.lang.String,java.lang.String[])
com.tencent.mm.sdk.storage.MAutoStorage: java.util.List getUpdateSQLs(java.lang.reflect.Field[],java.lang.String,com.tencent.mm.sdk.storage.ISQLiteDatabase)
com.tencent.mm.sdk.storage.MAutoStorage: boolean insert(com.tencent.mm.sdk.storage.MAutoDBItem)
com.tencent.mm.sdk.storage.MAutoStorage: boolean delete(com.tencent.mm.sdk.storage.MAutoDBItem,java.lang.String[])
com.tencent.mm.sdk.storage.MAutoStorage: boolean delete(long)
com.tencent.mm.sdk.storage.MAutoStorage: boolean get(long,com.tencent.mm.sdk.storage.MAutoDBItem)
com.tencent.mm.sdk.storage.MAutoStorage: boolean get(com.tencent.mm.sdk.storage.MAutoDBItem,java.lang.String[])
com.tencent.mm.sdk.storage.MAutoStorage: boolean update(long,com.tencent.mm.sdk.storage.MAutoDBItem)
com.tencent.mm.sdk.storage.MAutoStorage: boolean update(com.tencent.mm.sdk.storage.MAutoDBItem,java.lang.String[])
com.tencent.mm.sdk.storage.MAutoStorage: boolean replace(com.tencent.mm.sdk.storage.MAutoDBItem)
com.tencent.mm.sdk.storage.MAutoStorage: boolean a(android.content.ContentValues)
com.tencent.mm.sdk.storage.MAutoStorage: android.database.Cursor getAll()
com.tencent.mm.sdk.storage.MAutoStorage: int getCount()
com.tencent.mm.sdk.storage.MAutoStorage: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])
com.tencent.mm.sdk.storage.MAutoStorage: java.lang.StringBuilder a(android.content.ContentValues,java.lang.String[])
com.tencent.mm.sdk.storage.MAutoStorage: java.lang.String[] a(java.lang.String[],android.content.ContentValues)
com.tencent.mm.sdk.storage.MAutoStorage: void d(java.lang.String)
com.tencent.mm.sdk.storage.MAutoStorage: void e(java.lang.String)
com.tencent.mm.sdk.storage.MDBItem
com.tencent.mm.sdk.storage.MDBItem: void convertFrom(android.database.Cursor)
com.tencent.mm.sdk.storage.MDBItem: android.content.ContentValues convertTo()
com.tencent.mm.sdk.storage.MStorage
com.tencent.mm.sdk.storage.MStorage: com.tencent.mm.sdk.storage.MStorageEvent bM
com.tencent.mm.sdk.storage.MStorage: com.tencent.mm.sdk.storage.MStorageEvent bN
com.tencent.mm.sdk.storage.MStorage: MStorage()
com.tencent.mm.sdk.storage.MStorage: void lock()
com.tencent.mm.sdk.storage.MStorage: void unlock()
com.tencent.mm.sdk.storage.MStorage: void add(com.tencent.mm.sdk.storage.MStorage$IOnStorageChange)
com.tencent.mm.sdk.storage.MStorage: void addLoadedListener(com.tencent.mm.sdk.storage.MStorage$IOnStorageLoaded)
com.tencent.mm.sdk.storage.MStorage: void remove(com.tencent.mm.sdk.storage.MStorage$IOnStorageChange)
com.tencent.mm.sdk.storage.MStorage: void removeLoadedListener(com.tencent.mm.sdk.storage.MStorage$IOnStorageLoaded)
com.tencent.mm.sdk.storage.MStorage: void doNotify()
com.tencent.mm.sdk.storage.MStorage: void doNotify(java.lang.String)
com.tencent.mm.sdk.storage.MStorage: void a(com.tencent.mm.sdk.storage.MStorage$IOnStorageChange,java.lang.String)
com.tencent.mm.sdk.storage.MStorage: void a(com.tencent.mm.sdk.storage.MStorage$IOnStorageLoaded)
com.tencent.mm.sdk.storage.MStorage$1
com.tencent.mm.sdk.storage.MStorage$1: com.tencent.mm.sdk.storage.MStorage bO
com.tencent.mm.sdk.storage.MStorage$1: MStorage$1(com.tencent.mm.sdk.storage.MStorage)
com.tencent.mm.sdk.storage.MStorage$1: void processEvent(java.lang.Object,java.lang.Object)
com.tencent.mm.sdk.storage.MStorage$2
com.tencent.mm.sdk.storage.MStorage$2: com.tencent.mm.sdk.storage.MStorage bO
com.tencent.mm.sdk.storage.MStorage$2: MStorage$2(com.tencent.mm.sdk.storage.MStorage)
com.tencent.mm.sdk.storage.MStorage$2: void processEvent(java.lang.Object,java.lang.Object)
com.tencent.mm.sdk.storage.MStorage$IOnStorageChange
com.tencent.mm.sdk.storage.MStorage$IOnStorageChange: void onNotifyChange(java.lang.String)
com.tencent.mm.sdk.storage.MStorage$IOnStorageLoaded
com.tencent.mm.sdk.storage.MStorage$IOnStorageLoaded: void onNotifyLoaded()
com.tencent.mm.sdk.storage.MStorageEvent
com.tencent.mm.sdk.storage.MStorageEvent: int bP
com.tencent.mm.sdk.storage.MStorageEvent: java.util.Hashtable bQ
com.tencent.mm.sdk.storage.MStorageEvent: java.util.concurrent.CopyOnWriteArraySet bR
com.tencent.mm.sdk.storage.MStorageEvent: MStorageEvent()
com.tencent.mm.sdk.storage.MStorageEvent: void lock()
com.tencent.mm.sdk.storage.MStorageEvent: void unlock()
com.tencent.mm.sdk.storage.MStorageEvent: boolean isLocked()
com.tencent.mm.sdk.storage.MStorageEvent: void add(java.lang.Object,android.os.Looper)
com.tencent.mm.sdk.storage.MStorageEvent: boolean event(java.lang.Object)
com.tencent.mm.sdk.storage.MStorageEvent: void remove(java.lang.Object)
com.tencent.mm.sdk.storage.MStorageEvent: void removeAll()
com.tencent.mm.sdk.storage.MStorageEvent: void doNotify()
com.tencent.mm.sdk.storage.MStorageEvent: void e()
com.tencent.mm.sdk.storage.MStorageEvent: void processEvent(java.lang.Object,java.lang.Object)
com.tencent.mm.sdk.storage.MStorageEvent$1
com.tencent.mm.sdk.storage.MStorageEvent$1: java.lang.Object bS
com.tencent.mm.sdk.storage.MStorageEvent$1: java.lang.Object bT
com.tencent.mm.sdk.storage.MStorageEvent$1: com.tencent.mm.sdk.storage.MStorageEvent bU
com.tencent.mm.sdk.storage.MStorageEvent$1: MStorageEvent$1(com.tencent.mm.sdk.storage.MStorageEvent,java.lang.Object,java.lang.Object)
com.tencent.mm.sdk.storage.MStorageEvent$1: void run()
com.tencent.mm.sdk.storage.package-info
com.umeng.analytics.Gender: com.umeng.analytics.Gender[] values()
com.umeng.analytics.Gender: com.umeng.analytics.Gender valueOf(java.lang.String)
com.umeng.analytics.onlineconfig.b: b(org.json.JSONObject)
com.umeng.analytics.social.UMPlatformData$GENDER: com.umeng.analytics.social.UMPlatformData$GENDER[] values()
com.umeng.analytics.social.UMPlatformData$GENDER: com.umeng.analytics.social.UMPlatformData$GENDER valueOf(java.lang.String)
com.umeng.analytics.social.UMPlatformData$UMedia: com.umeng.analytics.social.UMPlatformData$UMedia[] values()
com.umeng.analytics.social.UMPlatformData$UMedia: com.umeng.analytics.social.UMPlatformData$UMedia valueOf(java.lang.String)
com.umeng.message.NotificationProxyBroadcastReceiver
com.umeng.message.NotificationProxyBroadcastReceiver: NotificationProxyBroadcastReceiver()
com.umeng.message.RegistrationReceiver
com.umeng.message.RegistrationReceiver: RegistrationReceiver()
com.umeng.message.UmengBaseIntentService
com.umeng.message.UmengBaseIntentService: UmengBaseIntentService()
com.umeng.message.UmengBroadcastReceiver
com.umeng.message.UmengBroadcastReceiver: UmengBroadcastReceiver()
com.umeng.message.UmengDownloadResourceService
com.umeng.message.UmengDownloadResourceService: UmengDownloadResourceService()
com.umeng.message.UmengIntentService
com.umeng.message.UmengIntentService: UmengIntentService()
com.umeng.message.UmengService
com.umeng.message.UmengService: UmengService()
com.umeng.message.entity.UMessage: UMessage(org.json.JSONObject)
com.umeng.message.proguard.aj: com.umeng.message.proguard.aj[] values()
com.umeng.message.proguard.aj: com.umeng.message.proguard.aj valueOf(java.lang.String)
com.umeng.message.tag.TagManager$Result: TagManager$Result(org.json.JSONObject)
com.umeng.update.UpdateDialogActivity
com.umeng.update.UpdateDialogActivity: UpdateDialogActivity()
com.umeng.update.UpdateResponse: UpdateResponse(org.json.JSONObject)
com.umeng.update.net.DownloadingService
com.umeng.update.net.DownloadingService: DownloadingService()
com.umeng.update.net.i: i(org.json.JSONObject)
com.umeng.update.net.i$a: com.umeng.update.net.i$a[] values()
com.umeng.update.net.i$a: com.umeng.update.net.i$a valueOf(java.lang.String)
com.umeng.update.net.j$b: com.umeng.update.net.j$b[] values()
com.umeng.update.net.j$b: com.umeng.update.net.j$b valueOf(java.lang.String)
com.umeng.update.util.DeltaUpdate
com.umeng.update.util.DeltaUpdate: int bspatch(java.lang.String,java.lang.String,java.lang.String)
com.yuning.Service.BluetoothLeService
com.yuning.Service.BluetoothLeService: BluetoothLeService()
com.yuning.Service.MusicPlayService
com.yuning.Service.MusicPlayService: MusicPlayService()
com.yuning.Service.voicesensorservice
com.yuning.Service.voicesensorservice: voicesensorservice()
com.yuning.activity.Aitalkmode
com.yuning.activity.Aitalkmode: Aitalkmode()
com.yuning.activity.BaseActivity
com.yuning.activity.BaseActivity: java.lang.String TAG
com.yuning.activity.BaseActivity: int GATT_WRITE_COMMON_TIMEOUT
com.yuning.activity.BaseActivity: com.yuning.Service.BluetoothLeService mBluetoothLeService
com.yuning.activity.BaseActivity: boolean mConnected
com.yuning.activity.BaseActivity: boolean mNeedPair
com.yuning.activity.BaseActivity: android.bluetooth.BluetoothGattCharacteristic mNotifyCharacteristic
com.yuning.activity.BaseActivity: android.bluetooth.BluetoothGattCharacteristic mSelecedCharacteristic
com.yuning.activity.BaseActivity: java.lang.String BASIC_MODE_VOICE_TYPE
com.yuning.activity.BaseActivity: java.lang.String CLASSIC_MODE_INDEX
com.yuning.activity.BaseActivity: java.lang.String CUSTOMDRAW_MODE_DATA
com.yuning.activity.BaseActivity: java.lang.String UMENG_APK_VERSION
com.yuning.activity.BaseActivity: java.lang.String MUSIC_COUNT
com.yuning.activity.BaseActivity: java.lang.String MUSIC_INFO_PREFIX
com.yuning.activity.BaseActivity: java.lang.String VIDEO_COUNT
com.yuning.activity.BaseActivity: java.lang.String VIDEO_INFO_PREFIX
com.yuning.activity.BaseActivity: java.lang.String REMOTE_COUNT
com.yuning.activity.BaseActivity: java.lang.String REMOTE_INFO_PREFIX
com.yuning.activity.BaseActivity: java.lang.String PASSWORD
com.yuning.activity.BaseActivity: java.lang.String PASSWORD_STATUS
com.yuning.activity.BaseActivity: java.lang.String PASSWORD_WRONG_INPUTS
com.yuning.activity.BaseActivity: java.lang.String PASSWORD_WRONG_TIME
com.yuning.activity.BaseActivity: android.content.BroadcastReceiver mGattUpdateReceiver
com.yuning.activity.BaseActivity: void <clinit>()
com.yuning.activity.BaseActivity: BaseActivity()
com.yuning.activity.BaseActivity: boolean isConnect()
com.yuning.activity.BaseActivity: void setConnectStatus(boolean)
com.yuning.activity.BaseActivity: void onCreate(android.os.Bundle)
com.yuning.activity.BaseActivity: void onDestroy()
com.yuning.activity.BaseActivity: boolean sendData(byte[])
com.yuning.activity.BaseActivity: boolean getBoolData(java.lang.String)
com.yuning.activity.BaseActivity: int getIntData(java.lang.String)
com.yuning.activity.BaseActivity: long getLongData(java.lang.String)
com.yuning.activity.BaseActivity: java.lang.String getStrData(java.lang.String)
com.yuning.activity.BaseActivity: java.lang.String readBluetoothMAC()
com.yuning.activity.BaseActivity: void saveBluetoothMAC(java.lang.String)
com.yuning.activity.BaseActivity: java.util.ArrayList readBluetoothMACList()
com.yuning.activity.BaseActivity: void BluetoothMACListAdd(java.lang.String)
com.yuning.activity.BaseActivity: void BluetoothMACListClean()
com.yuning.activity.BaseActivity: void BluetoothHistoryClean()
com.yuning.activity.BaseActivity: void cleanSPMusicInfo()
com.yuning.activity.BaseActivity: void cleanSPVideoInfo()
com.yuning.activity.BaseActivity: void cleanSPRemoteInfo()
com.yuning.activity.BaseActivity: void saveBoolData(java.lang.String,boolean)
com.yuning.activity.BaseActivity: void saveStrData(java.lang.String,java.lang.String)
com.yuning.activity.BaseActivity: void saveIntData(java.lang.String,int)
com.yuning.activity.BaseActivity: void saveLongData(java.lang.String,long)
com.yuning.activity.BaseActivity: void selectGattServices(java.util.List)
com.yuning.activity.BaseActivity: void removeGattServices(java.util.List)
com.yuning.activity.BaseActivity: android.content.IntentFilter makeGattUpdateIntentFilter()
com.yuning.activity.BaseActivity: void updateConnectionState(boolean)
com.yuning.activity.BaseActivity: void disconnectCallBack()
com.yuning.activity.BaseActivity: void response(java.lang.String)
com.yuning.activity.BaseActivity: void writeReponse(java.lang.String,boolean)
com.yuning.activity.BaseActivity: void updatePairStatus(boolean)
com.yuning.activity.BaseActivity: void runPairCmdThread(boolean)
com.yuning.activity.BaseActivity: void updatezhendongLevel(int)
com.yuning.activity.BaseActivity: void updateBatteryLevel(int)
com.yuning.activity.BaseActivity: void discoveredService()
com.yuning.activity.BaseActivity: boolean hasNewVersion(android.app.Activity)
com.yuning.activity.BaseActivity: void access$0(com.yuning.activity.BaseActivity,java.util.List)
com.yuning.activity.BaseActivity: void access$1(com.yuning.activity.BaseActivity,java.lang.String,boolean)
com.yuning.activity.BaseModeActivity
com.yuning.activity.BaseModeActivity: java.lang.String TAG
com.yuning.activity.BaseModeActivity: com.yuning.ui.CustomDialog mOPenDevicesDialog
com.yuning.activity.BaseModeActivity: boolean mbHasTitle
com.yuning.activity.BaseModeActivity: android.view.View mTipsLayout
com.yuning.activity.BaseModeActivity: int MAX_MASSAGE_LEVEL
com.yuning.activity.BaseModeActivity: byte[] mCMDStop
com.yuning.activity.BaseModeActivity: byte[] mCMDClassicLevel
com.yuning.activity.BaseModeActivity: byte[] mCMDFunLevel
com.yuning.activity.BaseModeActivity: byte[] mCMDBasicLevel
com.yuning.activity.BaseModeActivity: byte[] mCMDModeLevel
com.yuning.activity.BaseModeActivity: boolean WAIT_NO_RESPONSE
com.yuning.activity.BaseModeActivity: void <clinit>()
com.yuning.activity.BaseModeActivity: BaseModeActivity()
com.yuning.activity.BaseModeActivity: void onCreate(android.os.Bundle)
com.yuning.activity.BaseModeActivity: void onDestroy()
com.yuning.activity.BaseModeActivity: void onCreate(android.os.Bundle,boolean)
com.yuning.activity.BaseModeActivity: void initTitleBar(int,int,int,android.view.View$OnClickListener)
com.yuning.activity.BaseModeActivity: void setRightImageItem(int,android.view.View$OnClickListener)
com.yuning.activity.BaseModeActivity: void setRightButtonItem(int,android.view.View$OnClickListener)
com.yuning.activity.BaseModeActivity: void showTipsLayoutAnimation(int)
com.yuning.activity.BaseModeActivity: void showOpenDeviceDialog()
com.yuning.activity.BaseModeActivity: void keepScreenOn(boolean)
com.yuning.activity.BaseModeActivity: boolean setClassicLevelMode(int)
com.yuning.activity.BaseModeActivity: void setFunLevelMode(int)
com.yuning.activity.BaseModeActivity: boolean setBasicLevelMode(int)
com.yuning.activity.BaseModeActivity: boolean setModeLevelMode(int)
com.yuning.activity.BaseModeActivity: void stopVibration()
com.yuning.activity.BaseModeActivity: android.view.View access$0(com.yuning.activity.BaseModeActivity)
com.yuning.activity.BaseModeActivity: com.yuning.ui.CustomDialog access$1(com.yuning.activity.BaseModeActivity)
com.yuning.activity.BasicMode
com.yuning.activity.BasicMode: BasicMode()
com.yuning.activity.BasicVoiceMode
com.yuning.activity.BasicVoiceMode: BasicVoiceMode()
com.yuning.activity.ClassicCustomMode
com.yuning.activity.ClassicCustomMode: ClassicCustomMode()
com.yuning.activity.ClassicCustomMode: void onBtnClick_Array(android.view.View)
com.yuning.activity.ClassicCustomMode: void onBtnStartPauseClick(android.view.View)
com.yuning.activity.ClassicMode
com.yuning.activity.ClassicMode: ClassicMode()
com.yuning.activity.ClassicMode: void onBtnClick_Array(android.view.View)
com.yuning.activity.CustomDrawMode
com.yuning.activity.CustomDrawMode: CustomDrawMode()
com.yuning.activity.CustomDrawMode: void onBtnStart(android.view.View)
com.yuning.activity.DanceMode
com.yuning.activity.DanceMode: DanceMode()
com.yuning.activity.FileActivity
com.yuning.activity.FileActivity: FileActivity()
com.yuning.activity.FileActivity: void onConfirm(android.view.View)
com.yuning.activity.FwUpdateActivity
com.yuning.activity.FwUpdateActivity: FwUpdateActivity()
com.yuning.activity.FwUpdateActivity: void onLoadCustom(android.view.View)
com.yuning.activity.FwUpdateActivity$LOADRESULT: com.yuning.activity.FwUpdateActivity$LOADRESULT[] values()
com.yuning.activity.FwUpdateActivity$LOADRESULT: com.yuning.activity.FwUpdateActivity$LOADRESULT valueOf(java.lang.String)
com.yuning.activity.LauncherActivity
com.yuning.activity.LauncherActivity: LauncherActivity()
com.yuning.activity.MainActivity
com.yuning.activity.MainActivity: MainActivity()
com.yuning.activity.MainActivity: void onBtnScan(android.view.View)
com.yuning.activity.MainActivity: void disconnectDevice(android.view.View)
com.yuning.activity.MainActivity: void onBtnEnterSet(android.view.View)
com.yuning.activity.MainActivity: void onEnterRemoteMode(android.view.View)
com.yuning.activity.MainActivity: void onEnterBasicMode(android.view.View)
com.yuning.activity.MainActivity: void onEnterClassicMode(android.view.View)
com.yuning.activity.MainActivity: void onEnterEntertainmentMode(android.view.View)
com.yuning.activity.MainActivity: void onEnterPersonalMode(android.view.View)
com.yuning.activity.MainActivity: void onEnterShopping(android.view.View)
com.yuning.activity.MusicAdd
com.yuning.activity.MusicAdd: MusicAdd()
com.yuning.activity.MusicMode
com.yuning.activity.MusicMode: MusicMode()
com.yuning.activity.MusicMode$MusicOperState: com.yuning.activity.MusicMode$MusicOperState[] values()
com.yuning.activity.MusicMode$MusicOperState: com.yuning.activity.MusicMode$MusicOperState valueOf(java.lang.String)
com.yuning.activity.MusicMode$PhoneStateChangedReceiver
com.yuning.activity.Password
com.yuning.activity.Password: Password()
com.yuning.activity.Password: void onPasswordStatus(android.view.View)
com.yuning.activity.Password: void onPasswordChange(android.view.View)
com.yuning.activity.Password$PasswordType: com.yuning.activity.Password$PasswordType[] values()
com.yuning.activity.Password$PasswordType: com.yuning.activity.Password$PasswordType valueOf(java.lang.String)
com.yuning.activity.PasswordProcess
com.yuning.activity.PasswordProcess: PasswordProcess()
com.yuning.activity.SetMode
com.yuning.activity.SetMode: SetMode()
com.yuning.activity.SetMode: void onPassword(android.view.View)
com.yuning.activity.SetMode: void onSelectFW(android.view.View)
com.yuning.activity.SetMode: void onAPPcheck(android.view.View)
com.yuning.activity.SetMode: void onDeviceClear(android.view.View)
com.yuning.activity.SetMode: void onHistoryClear(android.view.View)
com.yuning.activity.ShoppingActivity
com.yuning.activity.ShoppingActivity: ShoppingActivity()
com.yuning.activity.SingMode
com.yuning.activity.SingMode: SingMode()
com.yuning.activity.VersionActivity
com.yuning.activity.VersionActivity: VersionActivity()
com.yuning.activity.VideoAdd
com.yuning.activity.VideoAdd: VideoAdd()
com.yuning.activity.VideoMode
com.yuning.activity.VideoMode: VideoMode()
com.yuning.activity.VoicectrlYuanchengMode
com.yuning.activity.VoicectrlYuanchengMode: VoicectrlYuanchengMode()
com.yuning.activity.yaoyiyaomode
com.yuning.activity.yaoyiyaomode: yaoyiyaomode()
com.yuning.activity.zhendongmode
com.yuning.activity.zhendongmode: void onBtnStart(android.view.View)
com.yuning.activity.zhendongmode: void onBtnClick_Array(android.view.View)
com.yuning.game.DownlaodReceive
com.yuning.game.DownlaodReceive: DownlaodReceive()
com.yuning.game.GameMode
com.yuning.game.GameMode: GameMode()
com.yuning.game.GameService
com.yuning.game.GameService: GameService()
com.yuning.game.model.Apk
com.yuning.game.model.Apk: long serialVersionUID
com.yuning.game.model.Apk: int id
com.yuning.game.model.Apk: int version_code
com.yuning.game.model.Apk: long size
com.yuning.game.model.Apk: int download_type
com.yuning.game.model.Apk: java.lang.String version_name
com.yuning.game.model.Apk: java.lang.String icon_url
com.yuning.game.model.Apk: java.lang.String img_url
com.yuning.game.model.Apk: java.lang.String download_url
com.yuning.game.model.Apk: java.lang.String name
com.yuning.game.model.Apk: java.lang.String des
com.yuning.game.model.Apk: java.lang.String packagename
com.yuning.game.model.Apk: java.lang.String modifydate
com.yuning.game.model.Apk: com.lidroid.xutils.http.HttpHandler$State state
com.yuning.game.model.Apk: Apk()
com.yuning.game.model.Apk: java.lang.String toString()
com.yuning.game.model.MyDownloadInfo
com.yuning.game.model.MyDownloadInfo: int app_id
com.yuning.game.model.MyDownloadInfo: com.yuning.game.model.Apk apk
com.yuning.game.model.MyDownloadInfo: MyDownloadInfo()
com.yuning.game.model.MyDownloadInfo: MyDownloadInfo(com.yuning.game.model.Apk)
com.yuning.lovercommon.R$anim
com.yuning.lovercommon.R$anim: int ai_talk_voice_line_list
com.yuning.lovercommon.R$anim: int music_card_anim
com.yuning.lovercommon.R$array
com.yuning.lovercommon.R$array: int asr_orders_array
com.yuning.lovercommon.R$attr
com.yuning.lovercommon.R$attr: int childSize
com.yuning.lovercommon.R$attr: int fromDegrees
com.yuning.lovercommon.R$attr: int progressDrawable
com.yuning.lovercommon.R$attr: int thumb
com.yuning.lovercommon.R$attr: int toDegrees
com.yuning.lovercommon.R$color
com.yuning.lovercommon.R$color: int ai_talk_stop_text_color_normal
com.yuning.lovercommon.R$color: int black
com.yuning.lovercommon.R$color: int blue
com.yuning.lovercommon.R$color: int class_mode_text
com.yuning.lovercommon.R$color: int content_color
com.yuning.lovercommon.R$color: int custom_draw_mode_text_color
com.yuning.lovercommon.R$color: int dance_help_color
com.yuning.lovercommon.R$color: int dark_grey
com.yuning.lovercommon.R$color: int deep_pink
com.yuning.lovercommon.R$color: int fw_update_btn_color
com.yuning.lovercommon.R$color: int fw_update_help_color
com.yuning.lovercommon.R$color: int gray
com.yuning.lovercommon.R$color: int grey
com.yuning.lovercommon.R$color: int item_text_color
com.yuning.lovercommon.R$color: int list_backgroud_color
com.yuning.lovercommon.R$color: int password_disable
com.yuning.lovercommon.R$color: int password_enalbe
com.yuning.lovercommon.R$color: int pink
com.yuning.lovercommon.R$color: int pink_tips
com.yuning.lovercommon.R$color: int set_mode_item_text_color
com.yuning.lovercommon.R$color: int shopping_text
com.yuning.lovercommon.R$color: int title_color
com.yuning.lovercommon.R$color: int trans
com.yuning.lovercommon.R$color: int trans_dark_grey
com.yuning.lovercommon.R$color: int trans_white
com.yuning.lovercommon.R$color: int video_mode_list_item_color
com.yuning.lovercommon.R$color: int voice_ctr_help_color
com.yuning.lovercommon.R$color: int white
com.yuning.lovercommon.R$color: int zhendong_custom_help_color
com.yuning.lovercommon.R$dimen
com.yuning.lovercommon.R$dimen: int activity_horizontal_margin
com.yuning.lovercommon.R$dimen: int activity_vertical_margin
com.yuning.lovercommon.R$dimen: int ai_talk_text_margin
com.yuning.lovercommon.R$dimen: int arc_menu_child_size
com.yuning.lovercommon.R$dimen: int battery_mode_item_text_size
com.yuning.lovercommon.R$dimen: int big_cell_height
com.yuning.lovercommon.R$dimen: int big_cell_width
com.yuning.lovercommon.R$dimen: int custom_draw_mode_text_size
com.yuning.lovercommon.R$dimen: int dance_mode_help_text_size
com.yuning.lovercommon.R$dimen: int dialog_title_height
com.yuning.lovercommon.R$dimen: int icon_padding
com.yuning.lovercommon.R$dimen: int item_padding_left
com.yuning.lovercommon.R$dimen: int item_padding_top
com.yuning.lovercommon.R$dimen: int item_text_size
com.yuning.lovercommon.R$dimen: int layout_margin
com.yuning.lovercommon.R$dimen: int main_connect_state_text_size
com.yuning.lovercommon.R$dimen: int main_mode_layout_margin
com.yuning.lovercommon.R$dimen: int music_mode_name_text_size
com.yuning.lovercommon.R$dimen: int screen_height
com.yuning.lovercommon.R$dimen: int screen_width
com.yuning.lovercommon.R$dimen: int set_mode_item_height
com.yuning.lovercommon.R$dimen: int set_mode_item_text_size
com.yuning.lovercommon.R$dimen: int set_mode_item_text_size_small
com.yuning.lovercommon.R$dimen: int small_cell_height
com.yuning.lovercommon.R$dimen: int small_cell_width
com.yuning.lovercommon.R$dimen: int tab_height
com.yuning.lovercommon.R$dimen: int tab_icon_text_size
com.yuning.lovercommon.R$dimen: int tab_text_padding
com.yuning.lovercommon.R$dimen: int text_size_large
com.yuning.lovercommon.R$dimen: int text_size_medium
com.yuning.lovercommon.R$dimen: int text_size_small
com.yuning.lovercommon.R$dimen: int title_bar_height
com.yuning.lovercommon.R$dimen: int video_mode_list_item_name_text_size
com.yuning.lovercommon.R$dimen: int video_mode_list_item_time_text_size
com.yuning.lovercommon.R$dimen: int video_mode_time_text_size
com.yuning.lovercommon.R$dimen: int visualizer_view_heigh
com.yuning.lovercommon.R$dimen: int visualizer_view_width
com.yuning.lovercommon.R$dimen: int voicectr_yuancheng_info_text_size
com.yuning.lovercommon.R$dimen: int yaoyiyao_item_text_size
com.yuning.lovercommon.R$dimen: int zhendong_item_text_size
com.yuning.lovercommon.R$drawable
com.yuning.lovercommon.R$drawable: int ai_talk_icon_less_normal
com.yuning.lovercommon.R$drawable: int ai_talk_icon_less_pressed
com.yuning.lovercommon.R$drawable: int ai_talk_icon_more_normal
com.yuning.lovercommon.R$drawable: int ai_talk_icon_more_pressed
com.yuning.lovercommon.R$drawable: int ai_talk_icon_next_normal
com.yuning.lovercommon.R$drawable: int ai_talk_icon_next_pressed
com.yuning.lovercommon.R$drawable: int ai_talk_icon_prev_normal
com.yuning.lovercommon.R$drawable: int ai_talk_icon_prev_pressed
com.yuning.lovercommon.R$drawable: int ai_talk_less_selector
com.yuning.lovercommon.R$drawable: int ai_talk_main_bg
com.yuning.lovercommon.R$drawable: int ai_talk_mike
com.yuning.lovercommon.R$drawable: int ai_talk_more_selector
com.yuning.lovercommon.R$drawable: int ai_talk_next_selector
com.yuning.lovercommon.R$drawable: int ai_talk_prev_selector
com.yuning.lovercommon.R$drawable: int ai_talk_start_normal
com.yuning.lovercommon.R$drawable: int ai_talk_start_pressed
com.yuning.lovercommon.R$drawable: int ai_talk_stop_bg
com.yuning.lovercommon.R$drawable: int ai_talk_voice_line
com.yuning.lovercommon.R$drawable: int ai_talk_voice_line01
com.yuning.lovercommon.R$drawable: int ai_talk_voice_line02
com.yuning.lovercommon.R$drawable: int ai_talk_voice_line03
com.yuning.lovercommon.R$drawable: int ai_talk_voice_line04
com.yuning.lovercommon.R$drawable: int ai_talk_voice_line05
com.yuning.lovercommon.R$drawable: int ai_talk_voice_line06
com.yuning.lovercommon.R$drawable: int ai_talk_voice_line07
com.yuning.lovercommon.R$drawable: int ai_talk_voice_line08
com.yuning.lovercommon.R$drawable: int ai_talk_voice_line09
com.yuning.lovercommon.R$drawable: int ai_talk_voice_line10
com.yuning.lovercommon.R$drawable: int ai_talk_voice_line11
com.yuning.lovercommon.R$drawable: int ai_talk_voice_line12
com.yuning.lovercommon.R$drawable: int ai_talk_voice_line13
com.yuning.lovercommon.R$drawable: int anychat_background
com.yuning.lovercommon.R$drawable: int anychat_btn_login_01
com.yuning.lovercommon.R$drawable: int anychat_btn_logout_01
com.yuning.lovercommon.R$drawable: int anychat_btn_switchvideo_bg
com.yuning.lovercommon.R$drawable: int anychat_btn_warting_01
com.yuning.lovercommon.R$drawable: int anychat_button_background
com.yuning.lovercommon.R$drawable: int anychat_camera_off
com.yuning.lovercommon.R$drawable: int anychat_camera_on
com.yuning.lovercommon.R$drawable: int anychat_cell_01
com.yuning.lovercommon.R$drawable: int anychat_et_border
com.yuning.lovercommon.R$drawable: int anychat_goback
com.yuning.lovercommon.R$drawable: int anychat_ip
com.yuning.lovercommon.R$drawable: int anychat_role_1
com.yuning.lovercommon.R$drawable: int anychat_role_2
com.yuning.lovercommon.R$drawable: int anychat_role_3
com.yuning.lovercommon.R$drawable: int anychat_role_4
com.yuning.lovercommon.R$drawable: int anychat_role_5
com.yuning.lovercommon.R$drawable: int anychat_smalltip_1
com.yuning.lovercommon.R$drawable: int anychat_smalltip_2
com.yuning.lovercommon.R$drawable: int anychat_smalltip_3
com.yuning.lovercommon.R$drawable: int anychat_smalltip_4
com.yuning.lovercommon.R$drawable: int anychat_speak_off
com.yuning.lovercommon.R$drawable: int anychat_speak_on
com.yuning.lovercommon.R$drawable: int anychat_switchvideo
com.yuning.lovercommon.R$drawable: int anychat_video_bg
com.yuning.lovercommon.R$drawable: int anychat_videoremote_bg
com.yuning.lovercommon.R$drawable: int arc_menu_close
com.yuning.lovercommon.R$drawable: int arc_menu_close_pressed
com.yuning.lovercommon.R$drawable: int arc_menu_close_selector
com.yuning.lovercommon.R$drawable: int arc_menu_item_1
com.yuning.lovercommon.R$drawable: int arc_menu_item_2
com.yuning.lovercommon.R$drawable: int arc_menu_item_3
com.yuning.lovercommon.R$drawable: int background_common
com.yuning.lovercommon.R$drawable: int background_main
com.yuning.lovercommon.R$drawable: int background_music_bottom
com.yuning.lovercommon.R$drawable: int background_settings
com.yuning.lovercommon.R$drawable: int background_settings_item
com.yuning.lovercommon.R$drawable: int background_settings_item_pressed
com.yuning.lovercommon.R$drawable: int background_settings_item_selector
com.yuning.lovercommon.R$drawable: int base_mode_animation_1
com.yuning.lovercommon.R$drawable: int base_mode_animation_2
com.yuning.lovercommon.R$drawable: int base_mode_animation_3
com.yuning.lovercommon.R$drawable: int base_mode_animation_4
com.yuning.lovercommon.R$drawable: int base_mode_animation_5
com.yuning.lovercommon.R$drawable: int base_mode_base
com.yuning.lovercommon.R$drawable: int base_mode_base_pressed
com.yuning.lovercommon.R$drawable: int base_mode_base_selector
com.yuning.lovercommon.R$drawable: int base_mode_btn_bar_bg
com.yuning.lovercommon.R$drawable: int base_mode_next_level
com.yuning.lovercommon.R$drawable: int base_mode_next_level_disabled
com.yuning.lovercommon.R$drawable: int base_mode_next_level_pressed
com.yuning.lovercommon.R$drawable: int base_mode_next_level_selector
com.yuning.lovercommon.R$drawable: int base_mode_pause
com.yuning.lovercommon.R$drawable: int base_mode_pause_pressed
com.yuning.lovercommon.R$drawable: int base_mode_pause_selector
com.yuning.lovercommon.R$drawable: int base_mode_play
com.yuning.lovercommon.R$drawable: int base_mode_play_pressed
com.yuning.lovercommon.R$drawable: int base_mode_play_selector
com.yuning.lovercommon.R$drawable: int base_mode_prev_level
com.yuning.lovercommon.R$drawable: int base_mode_prev_level_disabled
com.yuning.lovercommon.R$drawable: int base_mode_prev_level_pressed
com.yuning.lovercommon.R$drawable: int base_mode_prev_level_selector
com.yuning.lovercommon.R$drawable: int base_mode_voice
com.yuning.lovercommon.R$drawable: int base_mode_voice_animation
com.yuning.lovercommon.R$drawable: int base_mode_voice_animation_1
com.yuning.lovercommon.R$drawable: int base_mode_voice_animation_2
com.yuning.lovercommon.R$drawable: int base_mode_voice_animation_3
com.yuning.lovercommon.R$drawable: int base_mode_voice_pressed
com.yuning.lovercommon.R$drawable: int base_mode_voice_record
com.yuning.lovercommon.R$drawable: int base_mode_voice_record_pressed
com.yuning.lovercommon.R$drawable: int base_mode_voice_record_selector
com.yuning.lovercommon.R$drawable: int base_mode_voice_selector
com.yuning.lovercommon.R$drawable: int base_mode_voice_tips
com.yuning.lovercommon.R$drawable: int base_mode_voice_tips_pressed
com.yuning.lovercommon.R$drawable: int base_mode_voice_tips_selector
com.yuning.lovercommon.R$drawable: int battery_level_extremely_low
com.yuning.lovercommon.R$drawable: int battery_level_high
com.yuning.lovercommon.R$drawable: int battery_level_low
com.yuning.lovercommon.R$drawable: int checkbox_checked
com.yuning.lovercommon.R$drawable: int checkbox_noraml
com.yuning.lovercommon.R$drawable: int checkbox_selector
com.yuning.lovercommon.R$drawable: int child_back_icon_normal
com.yuning.lovercommon.R$drawable: int child_back_icon_pressed
com.yuning.lovercommon.R$drawable: int child_back_icon_selector
com.yuning.lovercommon.R$drawable: int child_title_bg
com.yuning.lovercommon.R$drawable: int classic_mode_play
com.yuning.lovercommon.R$drawable: int classic_mode_play_pressed
com.yuning.lovercommon.R$drawable: int classic_mode_play_selector
com.yuning.lovercommon.R$drawable: int classic_mode_stop
com.yuning.lovercommon.R$drawable: int classic_mode_stop_pressed
com.yuning.lovercommon.R$drawable: int classic_mode_stop_selector
com.yuning.lovercommon.R$drawable: int classic_mode_top_bar_bg
com.yuning.lovercommon.R$drawable: int classic_mode_wave_animation
com.yuning.lovercommon.R$drawable: int classic_mode_wave_animation_1
com.yuning.lovercommon.R$drawable: int classic_mode_wave_animation_2
com.yuning.lovercommon.R$drawable: int classic_mode_wave_animation_3
com.yuning.lovercommon.R$drawable: int classic_mode_wave_animation_4
com.yuning.lovercommon.R$drawable: int classic_mode_wave_animation_5
com.yuning.lovercommon.R$drawable: int dance_mode_animation
com.yuning.lovercommon.R$drawable: int dance_mode_animation_1
com.yuning.lovercommon.R$drawable: int dance_mode_animation_2
com.yuning.lovercommon.R$drawable: int dance_mode_animation_3
com.yuning.lovercommon.R$drawable: int dance_mode_animation_4
com.yuning.lovercommon.R$drawable: int dance_mode_level
com.yuning.lovercommon.R$drawable: int dance_mode_level_0
com.yuning.lovercommon.R$drawable: int dance_mode_level_1
com.yuning.lovercommon.R$drawable: int dance_mode_level_2
com.yuning.lovercommon.R$drawable: int dance_mode_level_3
com.yuning.lovercommon.R$drawable: int dance_mode_level_4
com.yuning.lovercommon.R$drawable: int dance_mode_level_5
com.yuning.lovercommon.R$drawable: int dance_mode_level_6
com.yuning.lovercommon.R$drawable: int dance_mode_level_7
com.yuning.lovercommon.R$drawable: int dance_mode_level_8
com.yuning.lovercommon.R$drawable: int dance_mode_level_9
com.yuning.lovercommon.R$drawable: int dance_mode_tips_bg
com.yuning.lovercommon.R$drawable: int dialog_background
com.yuning.lovercommon.R$drawable: int dialog_btn_bg
com.yuning.lovercommon.R$drawable: int dialog_btn_bg_pressed
com.yuning.lovercommon.R$drawable: int dialog_btn_bg_selector
com.yuning.lovercommon.R$drawable: int dialog_list_divider
com.yuning.lovercommon.R$drawable: int dialog_list_selector
com.yuning.lovercommon.R$drawable: int dialog_list_selector_pressed
com.yuning.lovercommon.R$drawable: int dialog_title_background
com.yuning.lovercommon.R$drawable: int digit_keypad_btn_bg
com.yuning.lovercommon.R$drawable: int digit_keypad_btn_bg_pressed
com.yuning.lovercommon.R$drawable: int digit_keypad_btn_bg_reverse_selector
com.yuning.lovercommon.R$drawable: int digit_keypad_btn_bg_selector
com.yuning.lovercommon.R$drawable: int digit_keypad_delete
com.yuning.lovercommon.R$drawable: int digit_keypad_line
com.yuning.lovercommon.R$drawable: int digit_keypad_password
com.yuning.lovercommon.R$drawable: int digit_keypad_password_input
com.yuning.lovercommon.R$drawable: int fw_update_bottom
com.yuning.lovercommon.R$drawable: int fw_update_btn_bg_disabled
com.yuning.lovercommon.R$drawable: int fw_update_btn_bg_normal
com.yuning.lovercommon.R$drawable: int fw_update_btn_bg_pressed
com.yuning.lovercommon.R$drawable: int fw_update_btn_bg_selector
com.yuning.lovercommon.R$drawable: int fw_update_progress_bar
com.yuning.lovercommon.R$drawable: int fw_update_progress_bar_background
com.yuning.lovercommon.R$drawable: int fw_update_progress_bar_background_primary
com.yuning.lovercommon.R$drawable: int fw_update_top
com.yuning.lovercommon.R$drawable: int game_mode_btn_bg
com.yuning.lovercommon.R$drawable: int game_mode_btn_bg_pressed
com.yuning.lovercommon.R$drawable: int game_mode_btn_bg_selector
com.yuning.lovercommon.R$drawable: int game_mode_default_icon
com.yuning.lovercommon.R$drawable: int game_mode_flag_download
com.yuning.lovercommon.R$drawable: int game_mode_flag_install
com.yuning.lovercommon.R$drawable: int game_mode_flag_loading
com.yuning.lovercommon.R$drawable: int game_mode_flag_pause
com.yuning.lovercommon.R$drawable: int game_mode_flag_run
com.yuning.lovercommon.R$drawable: int game_mode_item_bg_1
com.yuning.lovercommon.R$drawable: int game_mode_item_bg_2
com.yuning.lovercommon.R$drawable: int hand_draw_image_bg
com.yuning.lovercommon.R$drawable: int hand_draw_play
com.yuning.lovercommon.R$drawable: int hand_draw_play_pressed
com.yuning.lovercommon.R$drawable: int hand_draw_play_selector
com.yuning.lovercommon.R$drawable: int hand_draw_stop
com.yuning.lovercommon.R$drawable: int hand_draw_stop_pressed
com.yuning.lovercommon.R$drawable: int hand_draw_stop_selector
com.yuning.lovercommon.R$drawable: int hr_back_white
com.yuning.lovercommon.R$drawable: int ic_launcher
com.yuning.lovercommon.R$drawable: int index_foot_connected
com.yuning.lovercommon.R$drawable: int index_foot_connected_pressed
com.yuning.lovercommon.R$drawable: int index_foot_connected_selector
com.yuning.lovercommon.R$drawable: int index_foot_disconnected
com.yuning.lovercommon.R$drawable: int index_foot_progress_anim
com.yuning.lovercommon.R$drawable: int index_foot_scan_connected
com.yuning.lovercommon.R$drawable: int index_foot_scan_refresh
com.yuning.lovercommon.R$drawable: int layout_backgroud
com.yuning.lovercommon.R$drawable: int line
com.yuning.lovercommon.R$drawable: int line_background
com.yuning.lovercommon.R$drawable: int main_basic_mode
com.yuning.lovercommon.R$drawable: int main_basic_mode_pressed
com.yuning.lovercommon.R$drawable: int main_basic_mode_selector
com.yuning.lovercommon.R$drawable: int main_classic_mode
com.yuning.lovercommon.R$drawable: int main_classic_mode_pressed
com.yuning.lovercommon.R$drawable: int main_classic_mode_selector
com.yuning.lovercommon.R$drawable: int main_entertainment_mode
com.yuning.lovercommon.R$drawable: int main_entertainment_mode_pressed
com.yuning.lovercommon.R$drawable: int main_entertainment_mode_selector
com.yuning.lovercommon.R$drawable: int main_personal_mode
com.yuning.lovercommon.R$drawable: int main_personal_mode_pressed
com.yuning.lovercommon.R$drawable: int main_personal_mode_selector
com.yuning.lovercommon.R$drawable: int main_remote_mode
com.yuning.lovercommon.R$drawable: int main_remote_mode_pressed
com.yuning.lovercommon.R$drawable: int main_remote_mode_selector
com.yuning.lovercommon.R$drawable: int main_settings
com.yuning.lovercommon.R$drawable: int main_settings_pressed
com.yuning.lovercommon.R$drawable: int main_settings_selector
com.yuning.lovercommon.R$drawable: int main_settings_tips
com.yuning.lovercommon.R$drawable: int music_add
com.yuning.lovercommon.R$drawable: int music_add_list_background
com.yuning.lovercommon.R$drawable: int music_add_list_divider
com.yuning.lovercommon.R$drawable: int music_add_pressed
com.yuning.lovercommon.R$drawable: int music_add_selector
com.yuning.lovercommon.R$drawable: int music_album_cover_default
com.yuning.lovercommon.R$drawable: int music_album_cover_foreground
com.yuning.lovercommon.R$drawable: int music_default_normal
com.yuning.lovercommon.R$drawable: int music_default_selected
com.yuning.lovercommon.R$drawable: int music_file_normal
com.yuning.lovercommon.R$drawable: int music_file_selected
com.yuning.lovercommon.R$drawable: int music_mode_seekbar_img
com.yuning.lovercommon.R$drawable: int music_next
com.yuning.lovercommon.R$drawable: int music_next_pressed
com.yuning.lovercommon.R$drawable: int music_next_selector
com.yuning.lovercommon.R$drawable: int music_pause
com.yuning.lovercommon.R$drawable: int music_pause_pressed
com.yuning.lovercommon.R$drawable: int music_pause_selector
com.yuning.lovercommon.R$drawable: int music_play
com.yuning.lovercommon.R$drawable: int music_play_pressed
com.yuning.lovercommon.R$drawable: int music_play_selector
com.yuning.lovercommon.R$drawable: int music_prev
com.yuning.lovercommon.R$drawable: int music_prev_pressed
com.yuning.lovercommon.R$drawable: int music_prev_selector
com.yuning.lovercommon.R$drawable: int music_seekbar
com.yuning.lovercommon.R$drawable: int music_seekbar_background
com.yuning.lovercommon.R$drawable: int music_seekbar_progress
com.yuning.lovercommon.R$drawable: int music_seekbar_thumb
com.yuning.lovercommon.R$drawable: int music_tips
com.yuning.lovercommon.R$drawable: int music_title_add
com.yuning.lovercommon.R$drawable: int music_title_add_pressed
com.yuning.lovercommon.R$drawable: int music_title_add_selector
com.yuning.lovercommon.R$drawable: int remote_mode_add_info_section_bg
com.yuning.lovercommon.R$drawable: int remote_mode_btn_bg
com.yuning.lovercommon.R$drawable: int remote_mode_btn_bg_pressed
com.yuning.lovercommon.R$drawable: int remote_mode_btn_bg_selector
com.yuning.lovercommon.R$drawable: int remote_mode_camera_switch
com.yuning.lovercommon.R$drawable: int remote_mode_camera_switch_pressed
com.yuning.lovercommon.R$drawable: int remote_mode_camera_switch_selector
com.yuning.lovercommon.R$drawable: int remote_mode_default_icon
com.yuning.lovercommon.R$drawable: int remote_mode_default_icon_outer
com.yuning.lovercommon.R$drawable: int remote_mode_delete
com.yuning.lovercommon.R$drawable: int remote_mode_delete_pressed
com.yuning.lovercommon.R$drawable: int remote_mode_delete_selector
com.yuning.lovercommon.R$drawable: int remote_mode_finish_btn_bg
com.yuning.lovercommon.R$drawable: int remote_mode_finish_btn_bg_pressed
com.yuning.lovercommon.R$drawable: int remote_mode_finish_btn_bg_selector
com.yuning.lovercommon.R$drawable: int remote_mode_info_bg
com.yuning.lovercommon.R$drawable: int remote_mode_other_default_icon
com.yuning.lovercommon.R$drawable: int remote_mode_other_default_icon_pressed
com.yuning.lovercommon.R$drawable: int remote_mode_other_default_icon_selector
com.yuning.lovercommon.R$drawable: int remote_mode_send_sms
com.yuning.lovercommon.R$drawable: int remote_mode_send_sms_pressed
com.yuning.lovercommon.R$drawable: int remote_mode_send_sms_selector
com.yuning.lovercommon.R$drawable: int remote_mode_send_weixin
com.yuning.lovercommon.R$drawable: int remote_mode_send_weixin_pressed
com.yuning.lovercommon.R$drawable: int remote_mode_send_weixin_selector
com.yuning.lovercommon.R$drawable: int remote_mode_speaker_off
com.yuning.lovercommon.R$drawable: int remote_mode_speaker_off_pressed
com.yuning.lovercommon.R$drawable: int remote_mode_speaker_off_selector
com.yuning.lovercommon.R$drawable: int remote_mode_speaker_on
com.yuning.lovercommon.R$drawable: int remote_mode_speaker_on_pressed
com.yuning.lovercommon.R$drawable: int remote_mode_speaker_on_selector
com.yuning.lovercommon.R$drawable: int remote_mode_video_end
com.yuning.lovercommon.R$drawable: int remote_mode_video_end_pressed
com.yuning.lovercommon.R$drawable: int remote_mode_video_end_selector
com.yuning.lovercommon.R$drawable: int seekbar_thumb
com.yuning.lovercommon.R$drawable: int seekbar_thumb_normal
com.yuning.lovercommon.R$drawable: int seekbar_thumb_pressed
com.yuning.lovercommon.R$drawable: int set_mode_content_bg
com.yuning.lovercommon.R$drawable: int set_mode_icon
com.yuning.lovercommon.R$drawable: int set_mode_item_bg
com.yuning.lovercommon.R$drawable: int settings_update_tips
com.yuning.lovercommon.R$drawable: int shake_background
com.yuning.lovercommon.R$drawable: int shake_progress
com.yuning.lovercommon.R$drawable: int shopping
com.yuning.lovercommon.R$drawable: int sing_mode_animation
com.yuning.lovercommon.R$drawable: int sing_mode_animation_1
com.yuning.lovercommon.R$drawable: int sing_mode_animation_2
com.yuning.lovercommon.R$drawable: int title_bar_back
com.yuning.lovercommon.R$drawable: int title_bar_back_pressed
com.yuning.lovercommon.R$drawable: int title_bar_back_selector
com.yuning.lovercommon.R$drawable: int title_bar_bg
com.yuning.lovercommon.R$drawable: int title_bar_right
com.yuning.lovercommon.R$drawable: int title_bar_right_pressed
com.yuning.lovercommon.R$drawable: int title_bar_right_selector
com.yuning.lovercommon.R$drawable: int umeng_common_gradient_green
com.yuning.lovercommon.R$drawable: int umeng_common_gradient_orange
com.yuning.lovercommon.R$drawable: int umeng_common_gradient_red
com.yuning.lovercommon.R$drawable: int umeng_update_btn_check_off_focused_holo_light
com.yuning.lovercommon.R$drawable: int umeng_update_btn_check_off_holo_light
com.yuning.lovercommon.R$drawable: int umeng_update_btn_check_off_pressed_holo_light
com.yuning.lovercommon.R$drawable: int umeng_update_btn_check_on_focused_holo_light
com.yuning.lovercommon.R$drawable: int umeng_update_btn_check_on_holo_light
com.yuning.lovercommon.R$drawable: int umeng_update_btn_check_on_pressed_holo_light
com.yuning.lovercommon.R$drawable: int umeng_update_button_cancel_bg_focused
com.yuning.lovercommon.R$drawable: int umeng_update_button_cancel_bg_normal
com.yuning.lovercommon.R$drawable: int umeng_update_button_cancel_bg_selector
com.yuning.lovercommon.R$drawable: int umeng_update_button_cancel_bg_tap
com.yuning.lovercommon.R$drawable: int umeng_update_button_check_selector
com.yuning.lovercommon.R$drawable: int umeng_update_button_close_bg_selector
com.yuning.lovercommon.R$drawable: int umeng_update_button_ok_bg_focused
com.yuning.lovercommon.R$drawable: int umeng_update_button_ok_bg_normal
com.yuning.lovercommon.R$drawable: int umeng_update_button_ok_bg_selector
com.yuning.lovercommon.R$drawable: int umeng_update_button_ok_bg_tap
com.yuning.lovercommon.R$drawable: int umeng_update_close_bg_normal
com.yuning.lovercommon.R$drawable: int umeng_update_close_bg_tap
com.yuning.lovercommon.R$drawable: int umeng_update_dialog_bg
com.yuning.lovercommon.R$drawable: int umeng_update_title_bg
com.yuning.lovercommon.R$drawable: int umeng_update_wifi_disable
com.yuning.lovercommon.R$drawable: int video_bar_bg
com.yuning.lovercommon.R$drawable: int video_full_screen
com.yuning.lovercommon.R$drawable: int video_full_screen_pressed
com.yuning.lovercommon.R$drawable: int video_full_screen_selector
com.yuning.lovercommon.R$drawable: int video_mode_default_thumbnail
com.yuning.lovercommon.R$drawable: int video_mode_list_item_bg_selector
com.yuning.lovercommon.R$drawable: int video_mode_pause
com.yuning.lovercommon.R$drawable: int video_mode_pause_pressed
com.yuning.lovercommon.R$drawable: int video_mode_pause_selector
com.yuning.lovercommon.R$drawable: int video_mode_play
com.yuning.lovercommon.R$drawable: int video_mode_play_pressed
com.yuning.lovercommon.R$drawable: int video_mode_play_selector
com.yuning.lovercommon.R$drawable: int video_progress_img
com.yuning.lovercommon.R$drawable: int video_seekbar
com.yuning.lovercommon.R$drawable: int video_seekbar_background
com.yuning.lovercommon.R$drawable: int video_seekbar_progress
com.yuning.lovercommon.R$drawable: int video_seekbar_thumb
com.yuning.lovercommon.R$drawable: int video_view_bg
com.yuning.lovercommon.R$drawable: int voice_ctr_btn_gray
com.yuning.lovercommon.R$drawable: int voice_ctr_btn_white
com.yuning.lovercommon.R$drawable: int voice_ctr_call_bg
com.yuning.lovercommon.R$drawable: int voice_ctr_qq_bg
com.yuning.lovercommon.R$drawable: int voice_ctr_weixin_bg
com.yuning.lovercommon.R$drawable: int voicectr_yuancheng_bg
com.yuning.lovercommon.R$drawable: int volume_bar_bg
com.yuning.lovercommon.R$drawable: int volume_normal
com.yuning.lovercommon.R$drawable: int volume_pressed
com.yuning.lovercommon.R$drawable: int volume_selector
com.yuning.lovercommon.R$drawable: int yaoyiyao_content_0
com.yuning.lovercommon.R$drawable: int yaoyiyao_content_1
com.yuning.lovercommon.R$drawable: int yaoyiyao_content_selector
com.yuning.lovercommon.R$drawable: int zhendong_content_bg
com.yuning.lovercommon.R$drawable: int zhendong_custom_line
com.yuning.lovercommon.R$drawable: int zhendong_custom_play_normal
com.yuning.lovercommon.R$drawable: int zhendong_custom_play_pressed
com.yuning.lovercommon.R$drawable: int zhendong_custom_play_selector
com.yuning.lovercommon.R$drawable: int zhendong_custom_selected01
com.yuning.lovercommon.R$drawable: int zhendong_custom_selected02
com.yuning.lovercommon.R$drawable: int zhendong_custom_selected03
com.yuning.lovercommon.R$drawable: int zhendong_custom_selected04
com.yuning.lovercommon.R$drawable: int zhendong_custom_selected05
com.yuning.lovercommon.R$drawable: int zhendong_custom_selected06
com.yuning.lovercommon.R$drawable: int zhendong_custom_selected07
com.yuning.lovercommon.R$drawable: int zhendong_custom_selected08
com.yuning.lovercommon.R$drawable: int zhendong_custom_selected09
com.yuning.lovercommon.R$drawable: int zhendong_custom_selected10
com.yuning.lovercommon.R$drawable: int zhendong_custom_selected11
com.yuning.lovercommon.R$drawable: int zhendong_custom_selected12
com.yuning.lovercommon.R$drawable: int zhendong_custom_selected13
com.yuning.lovercommon.R$drawable: int zhendong_custom_selected14
com.yuning.lovercommon.R$drawable: int zhendong_custom_selected15
com.yuning.lovercommon.R$drawable: int zhendong_custom_selected16
com.yuning.lovercommon.R$drawable: int zhendong_custom_stop_normal
com.yuning.lovercommon.R$drawable: int zhendong_custom_stop_pressed
com.yuning.lovercommon.R$drawable: int zhendong_custom_stop_selector
com.yuning.lovercommon.R$drawable: int zhendong_custom_unselected
com.yuning.lovercommon.R$drawable: int zhendong_item_01_normal
com.yuning.lovercommon.R$drawable: int zhendong_item_01_pressed
com.yuning.lovercommon.R$drawable: int zhendong_item_01_selector
com.yuning.lovercommon.R$drawable: int zhendong_item_02_normal
com.yuning.lovercommon.R$drawable: int zhendong_item_02_pressed
com.yuning.lovercommon.R$drawable: int zhendong_item_02_selector
com.yuning.lovercommon.R$drawable: int zhendong_item_03_normal
com.yuning.lovercommon.R$drawable: int zhendong_item_03_pressed
com.yuning.lovercommon.R$drawable: int zhendong_item_03_selector
com.yuning.lovercommon.R$drawable: int zhendong_item_04_normal
com.yuning.lovercommon.R$drawable: int zhendong_item_04_pressed
com.yuning.lovercommon.R$drawable: int zhendong_item_04_selector
com.yuning.lovercommon.R$drawable: int zhendong_item_05_normal
com.yuning.lovercommon.R$drawable: int zhendong_item_05_pressed
com.yuning.lovercommon.R$drawable: int zhendong_item_05_selector
com.yuning.lovercommon.R$drawable: int zhendong_item_06_normal
com.yuning.lovercommon.R$drawable: int zhendong_item_06_pressed
com.yuning.lovercommon.R$drawable: int zhendong_item_06_selector
com.yuning.lovercommon.R$drawable: int zhendong_item_07_normal
com.yuning.lovercommon.R$drawable: int zhendong_item_07_pressed
com.yuning.lovercommon.R$drawable: int zhendong_item_07_selector
com.yuning.lovercommon.R$drawable: int zhendong_item_08_normal
com.yuning.lovercommon.R$drawable: int zhendong_item_08_pressed
com.yuning.lovercommon.R$drawable: int zhendong_item_08_selector
com.yuning.lovercommon.R$drawable: int zhendong_item_09_normal
com.yuning.lovercommon.R$drawable: int zhendong_item_09_pressed
com.yuning.lovercommon.R$drawable: int zhendong_item_09_selector
com.yuning.lovercommon.R$drawable: int zhendong_item_10_normal
com.yuning.lovercommon.R$drawable: int zhendong_item_10_pressed
com.yuning.lovercommon.R$drawable: int zhendong_item_10_selector
com.yuning.lovercommon.R$drawable: int zhendong_item_11_normal
com.yuning.lovercommon.R$drawable: int zhendong_item_11_pressed
com.yuning.lovercommon.R$drawable: int zhendong_item_11_selector
com.yuning.lovercommon.R$drawable: int zhendong_item_12_normal
com.yuning.lovercommon.R$drawable: int zhendong_item_12_pressed
com.yuning.lovercommon.R$drawable: int zhendong_item_12_selector
com.yuning.lovercommon.R$drawable: int zhendong_item_13_normal
com.yuning.lovercommon.R$drawable: int zhendong_item_13_pressed
com.yuning.lovercommon.R$drawable: int zhendong_item_13_selector
com.yuning.lovercommon.R$drawable: int zhendong_item_14_normal
com.yuning.lovercommon.R$drawable: int zhendong_item_14_pressed
com.yuning.lovercommon.R$drawable: int zhendong_item_14_selector
com.yuning.lovercommon.R$drawable: int zhendong_item_15_normal
com.yuning.lovercommon.R$drawable: int zhendong_item_15_pressed
com.yuning.lovercommon.R$drawable: int zhendong_item_15_selector
com.yuning.lovercommon.R$drawable: int zhendong_item_16_normal
com.yuning.lovercommon.R$drawable: int zhendong_item_16_pressed
com.yuning.lovercommon.R$drawable: int zhendong_item_16_selector
com.yuning.lovercommon.R$drawable: int zhendong_item_selected_bg
com.yuning.lovercommon.R$drawable: int zhendong_strength_list_activited
com.yuning.lovercommon.R$drawable: int zhendong_strength_list_normal
com.yuning.lovercommon.R$id
com.yuning.lovercommon.R$id: int ImgSwichVideo
com.yuning.lovercommon.R$id: int ai_talk_current_level
com.yuning.lovercommon.R$id: int ai_talk_current_mode
com.yuning.lovercommon.R$id: int ai_talk_less
com.yuning.lovercommon.R$id: int ai_talk_less_btn
com.yuning.lovercommon.R$id: int ai_talk_more
com.yuning.lovercommon.R$id: int ai_talk_more_btn
com.yuning.lovercommon.R$id: int ai_talk_next
com.yuning.lovercommon.R$id: int ai_talk_next_btn
com.yuning.lovercommon.R$id: int ai_talk_prev
com.yuning.lovercommon.R$id: int ai_talk_prev_btn
com.yuning.lovercommon.R$id: int ai_talk_start
com.yuning.lovercommon.R$id: int ai_talk_stop
com.yuning.lovercommon.R$id: int ai_talk_voice_line
com.yuning.lovercommon.R$id: int ai_talk_voice_line_anim
com.yuning.lovercommon.R$id: int app_version
com.yuning.lovercommon.R$id: int back_icon
com.yuning.lovercommon.R$id: int base_mode_animation
com.yuning.lovercommon.R$id: int base_mode_level
com.yuning.lovercommon.R$id: int base_mode_next_level
com.yuning.lovercommon.R$id: int base_mode_play_pause
com.yuning.lovercommon.R$id: int base_mode_prev_level
com.yuning.lovercommon.R$id: int base_mode_voice_tips
com.yuning.lovercommon.R$id: int basic_mode_voice_animation
com.yuning.lovercommon.R$id: int basic_mode_voice_bg
com.yuning.lovercommon.R$id: int basic_mode_voice_record
com.yuning.lovercommon.R$id: int bat_level
com.yuning.lovercommon.R$id: int btn_cameraControl
com.yuning.lovercommon.R$id: int btn_confirm
com.yuning.lovercommon.R$id: int btn_keyboard_1
com.yuning.lovercommon.R$id: int btn_keyboard_2
com.yuning.lovercommon.R$id: int btn_keyboard_3
com.yuning.lovercommon.R$id: int btn_keyboard_4
com.yuning.lovercommon.R$id: int btn_keyboard_5
com.yuning.lovercommon.R$id: int btn_keyboard_6
com.yuning.lovercommon.R$id: int btn_keyboard_7
com.yuning.lovercommon.R$id: int btn_load_c
com.yuning.lovercommon.R$id: int btn_speakControl
com.yuning.lovercommon.R$id: int button_send_value
com.yuning.lovercommon.R$id: int cellBackground
com.yuning.lovercommon.R$id: int check_add
com.yuning.lovercommon.R$id: int classic_mode_play_stop
com.yuning.lovercommon.R$id: int classic_mode_wave
com.yuning.lovercommon.R$id: int configModelLable
com.yuning.lovercommon.R$id: int connection_state
com.yuning.lovercommon.R$id: int control_hint
com.yuning.lovercommon.R$id: int control_layout
com.yuning.lovercommon.R$id: int customModelConfigBtn
com.yuning.lovercommon.R$id: int custom_draw_start_stop
com.yuning.lovercommon.R$id: int dance_mode_animation
com.yuning.lovercommon.R$id: int dance_mode_level
com.yuning.lovercommon.R$id: int data_value
com.yuning.lovercommon.R$id: int device_address
com.yuning.lovercommon.R$id: int device_name
com.yuning.lovercommon.R$id: int dialog_list
com.yuning.lovercommon.R$id: int dialog_low_battery_image
com.yuning.lovercommon.R$id: int dialog_low_battery_message
com.yuning.lovercommon.R$id: int dialog_message
com.yuning.lovercommon.R$id: int dialog_no
com.yuning.lovercommon.R$id: int dialog_no_layout
com.yuning.lovercommon.R$id: int dialog_send_btn
com.yuning.lovercommon.R$id: int dialog_title
com.yuning.lovercommon.R$id: int dialog_yes
com.yuning.lovercommon.R$id: int dialog_yes_layout
com.yuning.lovercommon.R$id: int digit_keypad_0
com.yuning.lovercommon.R$id: int digit_keypad_1
com.yuning.lovercommon.R$id: int digit_keypad_2
com.yuning.lovercommon.R$id: int digit_keypad_3
com.yuning.lovercommon.R$id: int digit_keypad_4
com.yuning.lovercommon.R$id: int digit_keypad_5
com.yuning.lovercommon.R$id: int digit_keypad_6
com.yuning.lovercommon.R$id: int digit_keypad_7
com.yuning.lovercommon.R$id: int digit_keypad_8
com.yuning.lovercommon.R$id: int digit_keypad_9
com.yuning.lovercommon.R$id: int digit_keypad_delete
com.yuning.lovercommon.R$id: int digit_password_keypad
com.yuning.lovercommon.R$id: int edittext_input_value
com.yuning.lovercommon.R$id: int enableP2PBox
com.yuning.lovercommon.R$id: int endCall
com.yuning.lovercommon.R$id: int fixColorDeviation
com.yuning.lovercommon.R$id: int frame_local_area
com.yuning.lovercommon.R$id: int fw_version
com.yuning.lovercommon.R$id: int gatt_connect_flag
com.yuning.lovercommon.R$id: int gatt_device_list
com.yuning.lovercommon.R$id: int gatt_scan_progress
com.yuning.lovercommon.R$id: int gatt_scan_searched
com.yuning.lovercommon.R$id: int gridview
com.yuning.lovercommon.R$id: int imageView
com.yuning.lovercommon.R$id: int image_wave
com.yuning.lovercommon.R$id: int image_wave_layout
com.yuning.lovercommon.R$id: int input_value
com.yuning.lovercommon.R$id: int item_artist
com.yuning.lovercommon.R$id: int item_duration
com.yuning.lovercommon.R$id: int item_img
com.yuning.lovercommon.R$id: int item_iv
com.yuning.lovercommon.R$id: int item_iv_flag
com.yuning.lovercommon.R$id: int item_iv_flag_btn
com.yuning.lovercommon.R$id: int item_layout
com.yuning.lovercommon.R$id: int item_size
com.yuning.lovercommon.R$id: int item_title
com.yuning.lovercommon.R$id: int item_tv
com.yuning.lovercommon.R$id: int lw_file
com.yuning.lovercommon.R$id: int ly_keyboard_btn_Area_1
com.yuning.lovercommon.R$id: int ly_keyboard_btn_Area_2
com.yuning.lovercommon.R$id: int ly_keyboard_btn_Area_3
com.yuning.lovercommon.R$id: int mRoleID
com.yuning.lovercommon.R$id: int mainUIEditIP
com.yuning.lovercommon.R$id: int mainUIEditPort
com.yuning.lovercommon.R$id: int mainUIEditRoomID
com.yuning.lovercommon.R$id: int mainUILogoutBtn
com.yuning.lovercommon.R$id: int mainUIStartBtn
com.yuning.lovercommon.R$id: int mainUITitle
com.yuning.lovercommon.R$id: int mainUIWaitingBtn
com.yuning.lovercommon.R$id: int mainUIbottomBuildMsg
com.yuning.lovercommon.R$id: int mainUIbottomConnMsg
com.yuning.lovercommon.R$id: int main_connect_state
com.yuning.lovercommon.R$id: int main_et_name
com.yuning.lovercommon.R$id: int main_layout
com.yuning.lovercommon.R$id: int main_settings
com.yuning.lovercommon.R$id: int main_settings_tips
com.yuning.lovercommon.R$id: int menu_refresh
com.yuning.lovercommon.R$id: int menu_scan
com.yuning.lovercommon.R$id: int menu_stop
com.yuning.lovercommon.R$id: int mname
com.yuning.lovercommon.R$id: int music_add_list
com.yuning.lovercommon.R$id: int music_artist
com.yuning.lovercommon.R$id: int music_cover_workspace
com.yuning.lovercommon.R$id: int music_duration
com.yuning.lovercommon.R$id: int music_next
com.yuning.lovercommon.R$id: int music_operation
com.yuning.lovercommon.R$id: int music_play_time
com.yuning.lovercommon.R$id: int music_prev
com.yuning.lovercommon.R$id: int music_seekbar
com.yuning.lovercommon.R$id: int music_seekbar_layout
com.yuning.lovercommon.R$id: int music_tips
com.yuning.lovercommon.R$id: int music_title
com.yuning.lovercommon.R$id: int name
com.yuning.lovercommon.R$id: int oad_file_help
com.yuning.lovercommon.R$id: int password_change
com.yuning.lovercommon.R$id: int password_input_1
com.yuning.lovercommon.R$id: int password_input_2
com.yuning.lovercommon.R$id: int password_input_3
com.yuning.lovercommon.R$id: int password_input_4
com.yuning.lovercommon.R$id: int password_input_layout
com.yuning.lovercommon.R$id: int password_status
com.yuning.lovercommon.R$id: int password_tips
com.yuning.lovercommon.R$id: int password_wrong_tips
com.yuning.lovercommon.R$id: int pb
com.yuning.lovercommon.R$id: int pb_progress
com.yuning.lovercommon.R$id: int product_name
com.yuning.lovercommon.R$id: int progress
com.yuning.lovercommon.R$id: int progressBar1
com.yuning.lovercommon.R$id: int remote_mode_add_btn
com.yuning.lovercommon.R$id: int remote_mode_camera_switch
com.yuning.lovercommon.R$id: int remote_mode_connect_message
com.yuning.lovercommon.R$id: int remote_mode_default_icon_outer
com.yuning.lovercommon.R$id: int remote_mode_invitation_edit
com.yuning.lovercommon.R$id: int remote_mode_launcher_text
com.yuning.lovercommon.R$id: int remote_mode_link_list
com.yuning.lovercommon.R$id: int remote_mode_list_btn
com.yuning.lovercommon.R$id: int remote_mode_list_delete
com.yuning.lovercommon.R$id: int remote_mode_name_edit
com.yuning.lovercommon.R$id: int remote_mode_ok_btn
com.yuning.lovercommon.R$id: int remote_mode_other_person
com.yuning.lovercommon.R$id: int remote_mode_send_edit
com.yuning.lovercommon.R$id: int remote_mode_send_sms
com.yuning.lovercommon.R$id: int remote_mode_send_weixin
com.yuning.lovercommon.R$id: int remote_mode_skip_btn
com.yuning.lovercommon.R$id: int remote_mode_speaker_ctrl
com.yuning.lovercommon.R$id: int remote_mode_video_control_layout
com.yuning.lovercommon.R$id: int remote_mode_video_end
com.yuning.lovercommon.R$id: int remote_mode_video_main_layout
com.yuning.lovercommon.R$id: int resolutionTV
com.yuning.lovercommon.R$id: int returnImgBtn
com.yuning.lovercommon.R$id: int rl_main
com.yuning.lovercommon.R$id: int roleHeaderImg
com.yuning.lovercommon.R$id: int roleListView
com.yuning.lovercommon.R$id: int rt_layout
com.yuning.lovercommon.R$id: int saveBtn
com.yuning.lovercommon.R$id: int save_layout
com.yuning.lovercommon.R$id: int serverModelConfigBtn
com.yuning.lovercommon.R$id: int set_mode_apk_version
com.yuning.lovercommon.R$id: int set_mode_firmware_version
com.yuning.lovercommon.R$id: int settings_update_tips
com.yuning.lovercommon.R$id: int shopping_image
com.yuning.lovercommon.R$id: int shopping_layout
com.yuning.lovercommon.R$id: int shopping_text
com.yuning.lovercommon.R$id: int sing_mode_animation
com.yuning.lovercommon.R$id: int surface_local
com.yuning.lovercommon.R$id: int surface_remote
com.yuning.lovercommon.R$id: int textView1
com.yuning.lovercommon.R$id: int text_tips
com.yuning.lovercommon.R$id: int titleName
com.yuning.lovercommon.R$id: int title_back
com.yuning.lovercommon.R$id: int title_name
com.yuning.lovercommon.R$id: int title_right_button
com.yuning.lovercommon.R$id: int title_right_image
com.yuning.lovercommon.R$id: int tw_directory
com.yuning.lovercommon.R$id: int umeng_common_icon_view
com.yuning.lovercommon.R$id: int umeng_common_notification
com.yuning.lovercommon.R$id: int umeng_common_notification_controller
com.yuning.lovercommon.R$id: int umeng_common_progress_bar
com.yuning.lovercommon.R$id: int umeng_common_progress_text
com.yuning.lovercommon.R$id: int umeng_common_rich_notification_cancel
com.yuning.lovercommon.R$id: int umeng_common_rich_notification_continue
com.yuning.lovercommon.R$id: int umeng_common_title
com.yuning.lovercommon.R$id: int umeng_update_content
com.yuning.lovercommon.R$id: int umeng_update_id_cancel
com.yuning.lovercommon.R$id: int umeng_update_id_check
com.yuning.lovercommon.R$id: int umeng_update_id_close
com.yuning.lovercommon.R$id: int umeng_update_id_ignore
com.yuning.lovercommon.R$id: int umeng_update_id_ok
com.yuning.lovercommon.R$id: int umeng_update_wifi_indicator
com.yuning.lovercommon.R$id: int useAECBox
com.yuning.lovercommon.R$id: int useARMv6Box
com.yuning.lovercommon.R$id: int useHWCodecBox
com.yuning.lovercommon.R$id: int videoAutoRotation
com.yuning.lovercommon.R$id: int videoBitrateSpinner
com.yuning.lovercommon.R$id: int videoBitrateTitle
com.yuning.lovercommon.R$id: int videoFPSSpinner
com.yuning.lovercommon.R$id: int videoFPSSpinnerTitle
com.yuning.lovercommon.R$id: int videoOverlayBox
com.yuning.lovercommon.R$id: int videoPresetSpinner
com.yuning.lovercommon.R$id: int videoPresetSpinnerTitle
com.yuning.lovercommon.R$id: int videoQualitySpinner
com.yuning.lovercommon.R$id: int videoQualitySpinnerTitle
com.yuning.lovercommon.R$id: int videoRotateBox
com.yuning.lovercommon.R$id: int videoShowGPURender
com.yuning.lovercommon.R$id: int videoSizeSpinner
com.yuning.lovercommon.R$id: int video_add_list
com.yuning.lovercommon.R$id: int video_bar
com.yuning.lovercommon.R$id: int video_duration
com.yuning.lovercommon.R$id: int video_full_screen
com.yuning.lovercommon.R$id: int video_layout
com.yuning.lovercommon.R$id: int video_list
com.yuning.lovercommon.R$id: int video_mode_play_pause
com.yuning.lovercommon.R$id: int video_play_time
com.yuning.lovercommon.R$id: int video_seekbar
com.yuning.lovercommon.R$id: int video_session
com.yuning.lovercommon.R$id: int videoview
com.yuning.lovercommon.R$id: int voice_ctr_call_icon
com.yuning.lovercommon.R$id: int voice_ctr_qq_icon
com.yuning.lovercommon.R$id: int voice_ctr_weixin_icon
com.yuning.lovercommon.R$id: int waitingLayout
com.yuning.lovercommon.R$id: int web_view
com.yuning.lovercommon.R$id: int yaoyiyao_content_img
com.yuning.lovercommon.R$id: int zhendong_content
com.yuning.lovercommon.R$id: int zhendong_custom_list_01
com.yuning.lovercommon.R$id: int zhendong_custom_list_02
com.yuning.lovercommon.R$id: int zhendong_custom_list_03
com.yuning.lovercommon.R$id: int zhendong_custom_list_04
com.yuning.lovercommon.R$id: int zhendong_custom_start
com.yuning.lovercommon.R$id: int zhendong_item_img_01
com.yuning.lovercommon.R$id: int zhendong_item_img_02
com.yuning.lovercommon.R$id: int zhendong_item_img_03
com.yuning.lovercommon.R$id: int zhendong_item_img_04
com.yuning.lovercommon.R$id: int zhendong_item_img_05
com.yuning.lovercommon.R$id: int zhendong_item_img_06
com.yuning.lovercommon.R$id: int zhendong_item_img_07
com.yuning.lovercommon.R$id: int zhendong_item_img_08
com.yuning.lovercommon.R$id: int zhendong_item_img_09
com.yuning.lovercommon.R$id: int zhendong_item_img_10
com.yuning.lovercommon.R$id: int zhendong_item_img_11
com.yuning.lovercommon.R$id: int zhendong_item_img_12
com.yuning.lovercommon.R$id: int zhendong_item_img_13
com.yuning.lovercommon.R$id: int zhendong_item_img_14
com.yuning.lovercommon.R$id: int zhendong_item_img_15
com.yuning.lovercommon.R$id: int zhendong_item_img_16
com.yuning.lovercommon.R$id: int zhendong_move_choice_icon
com.yuning.lovercommon.R$id: int zhendong_move_item_icon
com.yuning.lovercommon.R$layout
com.yuning.lovercommon.R$layout: int actionbar_indeterminate_progress
com.yuning.lovercommon.R$layout: int activity_file
com.yuning.lovercommon.R$layout: int activity_fwupdate
com.yuning.lovercommon.R$layout: int activity_version
com.yuning.lovercommon.R$layout: int aitalkmode
com.yuning.lovercommon.R$layout: int anychat_activity_main
com.yuning.lovercommon.R$layout: int anychat_role_list
com.yuning.lovercommon.R$layout: int anychat_titlebar
com.yuning.lovercommon.R$layout: int anychat_video_frame
com.yuning.lovercommon.R$layout: int anychat_video_session
com.yuning.lovercommon.R$layout: int anychat_videoconfig
com.yuning.lovercommon.R$layout: int arc_menu
com.yuning.lovercommon.R$layout: int arc_menu_item
com.yuning.lovercommon.R$layout: int basic_mode
com.yuning.lovercommon.R$layout: int basic_voice_mode
com.yuning.lovercommon.R$layout: int classic_custom_mode
com.yuning.lovercommon.R$layout: int classic_mode
com.yuning.lovercommon.R$layout: int custom_dialog
com.yuning.lovercommon.R$layout: int custom_draw_mode
com.yuning.lovercommon.R$layout: int dance_mode
com.yuning.lovercommon.R$layout: int dialog_low_battery
com.yuning.lovercommon.R$layout: int digit_password_keypad
com.yuning.lovercommon.R$layout: int element_file
com.yuning.lovercommon.R$layout: int game_mode
com.yuning.lovercommon.R$layout: int game_mode_item
com.yuning.lovercommon.R$layout: int gatt_services_characteristics
com.yuning.lovercommon.R$layout: int listitem_device
com.yuning.lovercommon.R$layout: int main_activity
com.yuning.lovercommon.R$layout: int multi_devices_dialog
com.yuning.lovercommon.R$layout: int music_add
com.yuning.lovercommon.R$layout: int music_add_item
com.yuning.lovercommon.R$layout: int music_cover
com.yuning.lovercommon.R$layout: int music_mode
com.yuning.lovercommon.R$layout: int password
com.yuning.lovercommon.R$layout: int password_process
com.yuning.lovercommon.R$layout: int remote_mode
com.yuning.lovercommon.R$layout: int remote_mode_add_finish
com.yuning.lovercommon.R$layout: int remote_mode_add_info
com.yuning.lovercommon.R$layout: int remote_mode_link_list_item
com.yuning.lovercommon.R$layout: int remote_mode_send_dialog
com.yuning.lovercommon.R$layout: int set_mode
com.yuning.lovercommon.R$layout: int set_mode_app_check
com.yuning.lovercommon.R$layout: int shopping_activity
com.yuning.lovercommon.R$layout: int sing_mode
com.yuning.lovercommon.R$layout: int tips_layout
com.yuning.lovercommon.R$layout: int title_bar
com.yuning.lovercommon.R$layout: int umeng_common_download_notification
com.yuning.lovercommon.R$layout: int umeng_update_dialog
com.yuning.lovercommon.R$layout: int video_add
com.yuning.lovercommon.R$layout: int video_add_item
com.yuning.lovercommon.R$layout: int video_mode
com.yuning.lovercommon.R$layout: int video_mode_list_item
com.yuning.lovercommon.R$layout: int voice_cmd_mode
com.yuning.lovercommon.R$layout: int voicectrl_yuancheng_mode
com.yuning.lovercommon.R$layout: int yaoyiyao_mode
com.yuning.lovercommon.R$layout: int zhendong_mode
com.yuning.lovercommon.R$menu
com.yuning.lovercommon.R$menu: int main
com.yuning.lovercommon.R$raw
com.yuning.lovercommon.R$raw: int default_video
com.yuning.lovercommon.R$string
com.yuning.lovercommon.R$string: int HelloTitle
com.yuning.lovercommon.R$string: int UMAppUpdate
com.yuning.lovercommon.R$string: int UMBreak_Network
com.yuning.lovercommon.R$string: int UMDialog_InstallAPK
com.yuning.lovercommon.R$string: int UMGprsCondition
com.yuning.lovercommon.R$string: int UMIgnore
com.yuning.lovercommon.R$string: int UMNewVersion
com.yuning.lovercommon.R$string: int UMNotNow
com.yuning.lovercommon.R$string: int UMTargetSize
com.yuning.lovercommon.R$string: int UMToast_IsUpdating
com.yuning.lovercommon.R$string: int UMUpdateCheck
com.yuning.lovercommon.R$string: int UMUpdateContent
com.yuning.lovercommon.R$string: int UMUpdateNow
com.yuning.lovercommon.R$string: int UMUpdateSize
com.yuning.lovercommon.R$string: int UMUpdateTitle
com.yuning.lovercommon.R$string: int ai_talk_current_level
com.yuning.lovercommon.R$string: int ai_talk_current_mode
com.yuning.lovercommon.R$string: int ai_talk_edit_dialog_cancel
com.yuning.lovercommon.R$string: int ai_talk_edit_dialog_ok
com.yuning.lovercommon.R$string: int ai_talk_edit_dialog_title
com.yuning.lovercommon.R$string: int ai_talk_edit_dialog_too_short
com.yuning.lovercommon.R$string: int ai_talk_help
com.yuning.lovercommon.R$string: int ai_talk_info
com.yuning.lovercommon.R$string: int ai_talk_less
com.yuning.lovercommon.R$string: int ai_talk_mode
com.yuning.lovercommon.R$string: int ai_talk_more
com.yuning.lovercommon.R$string: int ai_talk_next
com.yuning.lovercommon.R$string: int ai_talk_prev
com.yuning.lovercommon.R$string: int ai_talk_stop
com.yuning.lovercommon.R$string: int app_name
com.yuning.lovercommon.R$string: int app_name_actAbout
com.yuning.lovercommon.R$string: int app_name_actDiscovery
com.yuning.lovercommon.R$string: int app_name_actKeyBoard
com.yuning.lovercommon.R$string: int app_not_installed
com.yuning.lovercommon.R$string: int back_dialog_cancle
com.yuning.lovercommon.R$string: int back_dialog_mgs
com.yuning.lovercommon.R$string: int back_dialog_ok
com.yuning.lovercommon.R$string: int back_dialog_title
com.yuning.lovercommon.R$string: int basic_mode
com.yuning.lovercommon.R$string: int basic_mode_levle
com.yuning.lovercommon.R$string: int basic_mode_tips
com.yuning.lovercommon.R$string: int basic_mode_voice_tips
com.yuning.lovercommon.R$string: int basic_voice_max
com.yuning.lovercommon.R$string: int basic_voice_mode
com.yuning.lovercommon.R$string: int basic_voice_order_1
com.yuning.lovercommon.R$string: int basic_voice_order_2
com.yuning.lovercommon.R$string: int basic_voice_order_3
com.yuning.lovercommon.R$string: int basic_voice_order_4
com.yuning.lovercommon.R$string: int basic_voice_order_5
com.yuning.lovercommon.R$string: int basic_voice_order_6
com.yuning.lovercommon.R$string: int basic_voice_pause
com.yuning.lovercommon.R$string: int battery_low_button
com.yuning.lovercommon.R$string: int battery_low_msg
com.yuning.lovercommon.R$string: int battery_low_notify
com.yuning.lovercommon.R$string: int battery_mode
com.yuning.lovercommon.R$string: int battery_mode_full
com.yuning.lovercommon.R$string: int battery_mode_low
com.yuning.lovercommon.R$string: int ble_not_supported
com.yuning.lovercommon.R$string: int btn_Keyboard_mode
com.yuning.lovercommon.R$string: int btn_Normal_mode
com.yuning.lovercommon.R$string: int btn_click_me
com.yuning.lovercommon.R$string: int btn_connect
com.yuning.lovercommon.R$string: int btn_main_Send
com.yuning.lovercommon.R$string: int btn_reSearch
com.yuning.lovercommon.R$string: int btn_yes
com.yuning.lovercommon.R$string: int cannect_status
com.yuning.lovercommon.R$string: int classic_mode
com.yuning.lovercommon.R$string: int click_to_start
com.yuning.lovercommon.R$string: int click_to_stop
com.yuning.lovercommon.R$string: int close_device
com.yuning.lovercommon.R$string: int confirm_cancel
com.yuning.lovercommon.R$string: int confirm_connect
com.yuning.lovercommon.R$string: int confirm_disconnect
com.yuning.lovercommon.R$string: int connect_device_cancel_pair_cancel
com.yuning.lovercommon.R$string: int connect_device_cancel_pair_info
com.yuning.lovercommon.R$string: int connect_device_cancel_pair_ok
com.yuning.lovercommon.R$string: int connect_device_cancel_pair_title
com.yuning.lovercommon.R$string: int connect_device_confirm_connect_info
com.yuning.lovercommon.R$string: int connect_device_confirm_connect_title
com.yuning.lovercommon.R$string: int connect_device_confirm_disconnect_info
com.yuning.lovercommon.R$string: int connect_device_confirm_disconnect_title
com.yuning.lovercommon.R$string: int connect_device_confirm_pair_cancel
com.yuning.lovercommon.R$string: int connect_device_confirm_pair_info
com.yuning.lovercommon.R$string: int connect_device_confirm_pair_ok
com.yuning.lovercommon.R$string: int connect_device_confirm_pair_title
com.yuning.lovercommon.R$string: int connected
com.yuning.lovercommon.R$string: int connecting_device
com.yuning.lovercommon.R$string: int custom_draw_mode
com.yuning.lovercommon.R$string: int custom_draw_mode_info
com.yuning.lovercommon.R$string: int custom_draw_mode_start_help
com.yuning.lovercommon.R$string: int custom_mode
com.yuning.lovercommon.R$string: int dance_help
com.yuning.lovercommon.R$string: int dance_mode
com.yuning.lovercommon.R$string: int dance_tips
com.yuning.lovercommon.R$string: int dance_title
com.yuning.lovercommon.R$string: int data_send_error
com.yuning.lovercommon.R$string: int data_send_ok
com.yuning.lovercommon.R$string: int device_has_been_connected
com.yuning.lovercommon.R$string: int device_has_not_been_connected
com.yuning.lovercommon.R$string: int device_toy
com.yuning.lovercommon.R$string: int dialog_battery_extremely_low_message
com.yuning.lovercommon.R$string: int dialog_battery_extremely_low_title
com.yuning.lovercommon.R$string: int dialog_battery_low_message
com.yuning.lovercommon.R$string: int dialog_battery_low_title
com.yuning.lovercommon.R$string: int dialog_tips
com.yuning.lovercommon.R$string: int dialog_title_Err
com.yuning.lovercommon.R$string: int dialog_title_IO_Mode_Set
com.yuning.lovercommon.R$string: int dialog_title_Operat_Mode
com.yuning.lovercommon.R$string: int dialog_title_keyboard_Set
com.yuning.lovercommon.R$string: int disconnected
com.yuning.lovercommon.R$string: int download_image
com.yuning.lovercommon.R$string: int download_network_wrong
com.yuning.lovercommon.R$string: int download_no_enough_storage
com.yuning.lovercommon.R$string: int download_no_sdcard
com.yuning.lovercommon.R$string: int endCall1
com.yuning.lovercommon.R$string: int error_bluetooth_not_supported
com.yuning.lovercommon.R$string: int et_actDiscovery_SendText_Hint
com.yuning.lovercommon.R$string: int find_multi_devices
com.yuning.lovercommon.R$string: int force_update
com.yuning.lovercommon.R$string: int force_update_firmware
com.yuning.lovercommon.R$string: int force_update_firmware_message
com.yuning.lovercommon.R$string: int force_updating_firmware
com.yuning.lovercommon.R$string: int fwupdate_failed
com.yuning.lovercommon.R$string: int fwupdate_get_target_info_failed
com.yuning.lovercommon.R$string: int fwupdate_oad_service_initialisationfailed
com.yuning.lovercommon.R$string: int game_mode
com.yuning.lovercommon.R$string: int game_mode_download
com.yuning.lovercommon.R$string: int game_mode_downloading
com.yuning.lovercommon.R$string: int game_mode_install
com.yuning.lovercommon.R$string: int game_mode_pause
com.yuning.lovercommon.R$string: int game_mode_size
com.yuning.lovercommon.R$string: int game_mode_start
com.yuning.lovercommon.R$string: int game_mode_tips
com.yuning.lovercommon.R$string: int game_title
com.yuning.lovercommon.R$string: int hand_draw_mode
com.yuning.lovercommon.R$string: int hand_draw_mode_tips
com.yuning.lovercommon.R$string: int handdraw_title
com.yuning.lovercommon.R$string: int label_data
com.yuning.lovercommon.R$string: int label_device_address
com.yuning.lovercommon.R$string: int label_state
com.yuning.lovercommon.R$string: int main_connect_close_others
com.yuning.lovercommon.R$string: int main_connect_no_toy
com.yuning.lovercommon.R$string: int main_connect_state_click_again_to_disconnect
com.yuning.lovercommon.R$string: int main_connect_state_closing_device
com.yuning.lovercommon.R$string: int main_connect_state_long_press_to_confirm
com.yuning.lovercommon.R$string: int main_connect_state_shake
com.yuning.lovercommon.R$string: int main_connect_state_success
com.yuning.lovercommon.R$string: int main_connect_state_success_beautiful
com.yuning.lovercommon.R$string: int menu_Clear
com.yuning.lovercommon.R$string: int menu_connect
com.yuning.lovercommon.R$string: int menu_disconnect
com.yuning.lovercommon.R$string: int menu_keyboard_set
com.yuning.lovercommon.R$string: int menu_keyboard_set_over
com.yuning.lovercommon.R$string: int menu_main_About
com.yuning.lovercommon.R$string: int menu_main_Connection
com.yuning.lovercommon.R$string: int menu_main_IO_Mode
com.yuning.lovercommon.R$string: int menu_pair
com.yuning.lovercommon.R$string: int menu_scan
com.yuning.lovercommon.R$string: int menu_stop
com.yuning.lovercommon.R$string: int mp3_mode
com.yuning.lovercommon.R$string: int mp3_mode_button_start
com.yuning.lovercommon.R$string: int mp3_mode_button_stop
com.yuning.lovercommon.R$string: int mp3_mode_title
com.yuning.lovercommon.R$string: int mp3_reset_default
com.yuning.lovercommon.R$string: int mp3_select_file
com.yuning.lovercommon.R$string: int msg_Bluetooth_conn_lost
com.yuning.lovercommon.R$string: int msg_Hex_String_Illegal
com.yuning.lovercommon.R$string: int msg_actDiscovery_Bluetooth_Bond_fail
com.yuning.lovercommon.R$string: int msg_actDiscovery_Bluetooth_Bond_msg
com.yuning.lovercommon.R$string: int msg_actDiscovery_Bluetooth_Open
com.yuning.lovercommon.R$string: int msg_actDiscovery_Bluetooth_Open_Fail
com.yuning.lovercommon.R$string: int msg_actDiscovery_Bluetooth_Open_Modle
com.yuning.lovercommon.R$string: int msg_actDiscovery_Bluetooth_SPP_Conn_Fail
com.yuning.lovercommon.R$string: int msg_actDiscovery_Connevction_Access
com.yuning.lovercommon.R$string: int msg_actDiscovery_Search
com.yuning.lovercommon.R$string: int msg_actDiscovery_SendBytesErr
com.yuning.lovercommon.R$string: int msg_actDiscovery_select_device
com.yuning.lovercommon.R$string: int msg_connect_history
com.yuning.lovercommon.R$string: int msg_connect_ok
com.yuning.lovercommon.R$string: int msg_connecting
com.yuning.lovercommon.R$string: int msg_device_bluetooth_error
com.yuning.lovercommon.R$string: int msg_device_cancel_pair
com.yuning.lovercommon.R$string: int msg_device_confirm_pair
com.yuning.lovercommon.R$string: int msg_please_connect
com.yuning.lovercommon.R$string: int msg_please_pair
com.yuning.lovercommon.R$string: int msg_re_connect
com.yuning.lovercommon.R$string: int music_add
com.yuning.lovercommon.R$string: int music_add_done
com.yuning.lovercommon.R$string: int music_mode
com.yuning.lovercommon.R$string: int music_mode_default_name
com.yuning.lovercommon.R$string: int music_mode_operation_tips
com.yuning.lovercommon.R$string: int music_title
com.yuning.lovercommon.R$string: int network_error
com.yuning.lovercommon.R$string: int no
com.yuning.lovercommon.R$string: int no_data
com.yuning.lovercommon.R$string: int no_image
com.yuning.lovercommon.R$string: int oad_file_error
com.yuning.lovercommon.R$string: int oad_file_help
com.yuning.lovercommon.R$string: int oad_file_help_force
com.yuning.lovercommon.R$string: int oad_file_not_product
com.yuning.lovercommon.R$string: int oad_file_old_version
com.yuning.lovercommon.R$string: int oad_update_complete
com.yuning.lovercommon.R$string: int open_device_massage
com.yuning.lovercommon.R$string: int open_device_no
com.yuning.lovercommon.R$string: int open_device_title
com.yuning.lovercommon.R$string: int open_device_yes
com.yuning.lovercommon.R$string: int password_change
com.yuning.lovercommon.R$string: int password_close
com.yuning.lovercommon.R$string: int password_input
com.yuning.lovercommon.R$string: int password_input_again_please
com.yuning.lovercommon.R$string: int password_input_again_wrong_please
com.yuning.lovercommon.R$string: int password_input_error
com.yuning.lovercommon.R$string: int password_input_new_again_please
com.yuning.lovercommon.R$string: int password_input_new_please
com.yuning.lovercommon.R$string: int password_input_old_please
com.yuning.lovercommon.R$string: int password_input_one_minute_retry
com.yuning.lovercommon.R$string: int password_input_please
com.yuning.lovercommon.R$string: int password_open
com.yuning.lovercommon.R$string: int password_set
com.yuning.lovercommon.R$string: int password_settings
com.yuning.lovercommon.R$string: int password_tips
com.yuning.lovercommon.R$string: int pinlv_mode
com.yuning.lovercommon.R$string: int pinlv_mode_stop
com.yuning.lovercommon.R$string: int product_name
com.yuning.lovercommon.R$string: int prog_ogoing
com.yuning.lovercommon.R$string: int rb_IO_Mode_Set_Char
com.yuning.lovercommon.R$string: int rb_IO_Mode_Set_Hex
com.yuning.lovercommon.R$string: int remote_mode
com.yuning.lovercommon.R$string: int remote_mode_add
com.yuning.lovercommon.R$string: int remote_mode_add_info_title
com.yuning.lovercommon.R$string: int remote_mode_cancel
com.yuning.lovercommon.R$string: int remote_mode_connect_message
com.yuning.lovercommon.R$string: int remote_mode_connect_message_enter
com.yuning.lovercommon.R$string: int remote_mode_connect_timeout
com.yuning.lovercommon.R$string: int remote_mode_dialog_len_massage
com.yuning.lovercommon.R$string: int remote_mode_dialog_tips
com.yuning.lovercommon.R$string: int remote_mode_disconnect_message
com.yuning.lovercommon.R$string: int remote_mode_edit
com.yuning.lovercommon.R$string: int remote_mode_exit_remote
com.yuning.lovercommon.R$string: int remote_mode_finish
com.yuning.lovercommon.R$string: int remote_mode_invitation_code
com.yuning.lovercommon.R$string: int remote_mode_launcher
com.yuning.lovercommon.R$string: int remote_mode_link_max
com.yuning.lovercommon.R$string: int remote_mode_link_prefix
com.yuning.lovercommon.R$string: int remote_mode_message_content
com.yuning.lovercommon.R$string: int remote_mode_name_tips
com.yuning.lovercommon.R$string: int remote_mode_next
com.yuning.lovercommon.R$string: int remote_mode_null_connection_tips
com.yuning.lovercommon.R$string: int remote_mode_null_name_tips
com.yuning.lovercommon.R$string: int remote_mode_ok
com.yuning.lovercommon.R$string: int remote_mode_person_audio_interrupt
com.yuning.lovercommon.R$string: int remote_mode_person_offline
com.yuning.lovercommon.R$string: int remote_mode_person_video_interrupt
com.yuning.lovercommon.R$string: int remote_mode_receiver
com.yuning.lovercommon.R$string: int remote_mode_secure_tips
com.yuning.lovercommon.R$string: int remote_mode_send
com.yuning.lovercommon.R$string: int remote_mode_send_dialog_message
com.yuning.lovercommon.R$string: int remote_mode_send_failed
com.yuning.lovercommon.R$string: int remote_mode_send_success
com.yuning.lovercommon.R$string: int remote_mode_send_title
com.yuning.lovercommon.R$string: int remote_mode_send_to
com.yuning.lovercommon.R$string: int remote_mode_send_wrong_number
com.yuning.lovercommon.R$string: int remote_mode_sending
com.yuning.lovercommon.R$string: int remote_mode_skip
com.yuning.lovercommon.R$string: int remote_mode_tips_title
com.yuning.lovercommon.R$string: int remote_mode_weixin_not_installed
com.yuning.lovercommon.R$string: int remote_mode_wrong_room_id
com.yuning.lovercommon.R$string: int scanning_device
com.yuning.lovercommon.R$string: int set_mode
com.yuning.lovercommon.R$string: int set_mode_air_update
com.yuning.lovercommon.R$string: int set_mode_apk_version
com.yuning.lovercommon.R$string: int set_mode_app_check
com.yuning.lovercommon.R$string: int set_mode_app_check_tips
com.yuning.lovercommon.R$string: int set_mode_app_version
com.yuning.lovercommon.R$string: int set_mode_checking
com.yuning.lovercommon.R$string: int set_mode_clear_cancel
com.yuning.lovercommon.R$string: int set_mode_clear_connection_history
com.yuning.lovercommon.R$string: int set_mode_clear_data_history
com.yuning.lovercommon.R$string: int set_mode_clear_msg
com.yuning.lovercommon.R$string: int set_mode_clear_ok
com.yuning.lovercommon.R$string: int set_mode_clear_use_msg
com.yuning.lovercommon.R$string: int set_mode_firmware_update
com.yuning.lovercommon.R$string: int set_mode_firmware_version
com.yuning.lovercommon.R$string: int set_mode_fw_version
com.yuning.lovercommon.R$string: int set_mode_fw_version_unknown
com.yuning.lovercommon.R$string: int set_mode_help
com.yuning.lovercommon.R$string: int set_mode_latest_version
com.yuning.lovercommon.R$string: int set_mode_powered_by
com.yuning.lovercommon.R$string: int set_mode_version
com.yuning.lovercommon.R$string: int shopping_loading
com.yuning.lovercommon.R$string: int shopping_tips
com.yuning.lovercommon.R$string: int shopping_title
com.yuning.lovercommon.R$string: int sing_mode
com.yuning.lovercommon.R$string: int sing_title
com.yuning.lovercommon.R$string: int tips_title
com.yuning.lovercommon.R$string: int title_devices
com.yuning.lovercommon.R$string: int tv_IO_Mode_Set_Input
com.yuning.lovercommon.R$string: int tv_IO_Mode_Set_Output
com.yuning.lovercommon.R$string: int tv_actDiscovery_Receive_Show_Init
com.yuning.lovercommon.R$string: int tv_actKeyBoard_Init
com.yuning.lovercommon.R$string: int tv_keyboard_set_BtnName
com.yuning.lovercommon.R$string: int tv_keyboard_set_SendValue
com.yuning.lovercommon.R$string: int umeng_common_action_cancel
com.yuning.lovercommon.R$string: int umeng_common_action_continue
com.yuning.lovercommon.R$string: int umeng_common_action_info_exist
com.yuning.lovercommon.R$string: int umeng_common_action_pause
com.yuning.lovercommon.R$string: int umeng_common_download_failed
com.yuning.lovercommon.R$string: int umeng_common_download_finish
com.yuning.lovercommon.R$string: int umeng_common_download_notification_prefix
com.yuning.lovercommon.R$string: int umeng_common_icon
com.yuning.lovercommon.R$string: int umeng_common_info_interrupt
com.yuning.lovercommon.R$string: int umeng_common_network_break_alert
com.yuning.lovercommon.R$string: int umeng_common_patch_finish
com.yuning.lovercommon.R$string: int umeng_common_pause_notification_prefix
com.yuning.lovercommon.R$string: int umeng_common_silent_download_finish
com.yuning.lovercommon.R$string: int umeng_common_start_download_notification
com.yuning.lovercommon.R$string: int umeng_common_start_patch_notification
com.yuning.lovercommon.R$string: int unknown_characteristic
com.yuning.lovercommon.R$string: int unknown_device
com.yuning.lovercommon.R$string: int unknown_service
com.yuning.lovercommon.R$string: int vdoply_mode
com.yuning.lovercommon.R$string: int vdoply_reset_default
com.yuning.lovercommon.R$string: int vdoply_select_file
com.yuning.lovercommon.R$string: int video_add
com.yuning.lovercommon.R$string: int video_add_done
com.yuning.lovercommon.R$string: int video_mode
com.yuning.lovercommon.R$string: int video_mode_default_name
com.yuning.lovercommon.R$string: int video_title
com.yuning.lovercommon.R$string: int voice_ctr_yuancheng_back_info
com.yuning.lovercommon.R$string: int voice_ctr_yuancheng_call
com.yuning.lovercommon.R$string: int voice_ctr_yuancheng_help
com.yuning.lovercommon.R$string: int voice_ctr_yuancheng_info
com.yuning.lovercommon.R$string: int voice_ctr_yuancheng_qq
com.yuning.lovercommon.R$string: int voice_ctr_yuancheng_title
com.yuning.lovercommon.R$string: int voice_ctr_yuancheng_wenxin
com.yuning.lovercommon.R$string: int voicecmdbuttonstr
com.yuning.lovercommon.R$string: int voicectrl_mode
com.yuning.lovercommon.R$string: int yaoyiyao_help
com.yuning.lovercommon.R$string: int yaoyiyao_mode
com.yuning.lovercommon.R$string: int yes
com.yuning.lovercommon.R$string: int zhendong_custom_help
com.yuning.lovercommon.R$string: int zhendong_custom_mode
com.yuning.lovercommon.R$string: int zhendong_custom_toast
com.yuning.lovercommon.R$string: int zhendong_item_01
com.yuning.lovercommon.R$string: int zhendong_item_02
com.yuning.lovercommon.R$string: int zhendong_item_03
com.yuning.lovercommon.R$string: int zhendong_item_04
com.yuning.lovercommon.R$string: int zhendong_item_05
com.yuning.lovercommon.R$string: int zhendong_item_06
com.yuning.lovercommon.R$string: int zhendong_item_07
com.yuning.lovercommon.R$string: int zhendong_item_08
com.yuning.lovercommon.R$string: int zhendong_item_09
com.yuning.lovercommon.R$string: int zhendong_item_10
com.yuning.lovercommon.R$string: int zhendong_item_11
com.yuning.lovercommon.R$string: int zhendong_item_12
com.yuning.lovercommon.R$string: int zhendong_item_13
com.yuning.lovercommon.R$string: int zhendong_item_14
com.yuning.lovercommon.R$string: int zhendong_item_15
com.yuning.lovercommon.R$string: int zhendong_item_16
com.yuning.lovercommon.R$string: int zhendong_mode
com.yuning.lovercommon.R$string: int zhendong_strength
com.yuning.lovercommon.R$string: int zhendong_strength_1
com.yuning.lovercommon.R$string: int zhendong_strength_2
com.yuning.lovercommon.R$string: int zhendong_strength_3
com.yuning.lovercommon.R$string: int zhendong_strength_4
com.yuning.lovercommon.R$string: int zhendong_strength_5
com.yuning.lovercommon.R$string: int zhendong_strength_6
com.yuning.lovercommon.R$string: int zhendong_strength_7
com.yuning.lovercommon.R$string: int zhendong_strength_set
com.yuning.lovercommon.R$string: int zhendong_strength_stop
com.yuning.lovercommon.R$style
com.yuning.lovercommon.R$style: int AnychatAppBaseTheme
com.yuning.lovercommon.R$style: int AnychatAppTheme
com.yuning.lovercommon.R$style: int AppBaseTheme
com.yuning.lovercommon.R$style: int AppTheme
com.yuning.lovercommon.R$style: int CustomTitleBarBackground
com.yuning.lovercommon.R$style: int CustomTitleBarTheme
com.yuning.lovercommon.R$style: int FullscreenTheme
com.yuning.lovercommon.R$style: int ServiceHeaderItem
com.yuning.lovercommon.R$style: int ServiceHeaderRow
com.yuning.lovercommon.R$style: int ServiceItem
com.yuning.lovercommon.R$style: int ServiceItemValue
com.yuning.lovercommon.R$style: int ServiceRow
com.yuning.lovercommon.R$style: int aboutStyle
com.yuning.lovercommon.R$style: int dataStyle
com.yuning.lovercommon.R$style: int dataStyle1
com.yuning.lovercommon.R$style: int dataStyle2
com.yuning.lovercommon.R$style: int devlistStyle
com.yuning.lovercommon.R$style: int dialog_btn
com.yuning.lovercommon.R$style: int digit_keypad_btn
com.yuning.lovercommon.R$style: int dirStyle
com.yuning.lovercommon.R$style: int fw_update_progress
com.yuning.lovercommon.R$style: int infoStyle
com.yuning.lovercommon.R$style: int listItemStyle
com.yuning.lovercommon.R$style: int logStyle
com.yuning.lovercommon.R$style: int nameStyle
com.yuning.lovercommon.R$style: int nameStyle_inactive
com.yuning.lovercommon.R$style: int nameStyleSelected
com.yuning.lovercommon.R$style: int statusStyle
com.yuning.lovercommon.R$style: int statusStyle_Busy
com.yuning.lovercommon.R$style: int statusStyle_Disabled
com.yuning.lovercommon.R$style: int statusStyle_Failure
com.yuning.lovercommon.R$style: int statusStyle_Success
com.yuning.lovercommon.R$style: int statusStyleSmall
com.yuning.lovercommon.R$style: int tabwidgetStyle
com.yuning.lovercommon.R$style: int tbStartStyle
com.yuning.lovercommon.R$styleable
com.yuning.lovercommon.R$styleable: int ArcLayout_childSize
com.yuning.lovercommon.R$styleable: int ArcLayout_fromDegrees
com.yuning.lovercommon.R$styleable: int ArcLayout_toDegrees
com.yuning.lovercommon.R$styleable: int ArcMenu_childSize
com.yuning.lovercommon.R$styleable: int ArcMenu_fromDegrees
com.yuning.lovercommon.R$styleable: int ArcMenu_toDegrees
com.yuning.lovercommon.R$styleable: int Seekbar_progressDrawable
com.yuning.lovercommon.R$styleable: int Seekbar_thumb
com.yuning.lovercommon.R$xml
com.yuning.lovercommon.R$xml: int gatt_uuid
com.yuning.remote.RemoteModeAddFinish
com.yuning.remote.RemoteModeAddFinish: RemoteModeAddFinish()
com.yuning.remote.RemoteModeAddInfo
com.yuning.remote.RemoteModeAddInfo: RemoteModeAddInfo()
com.yuning.remote.RemoteModeMain
com.yuning.remote.RemoteModeMain: RemoteModeMain()
com.yuning.ui.ArcLayout
com.yuning.ui.ArcLayout: ArcLayout(android.content.Context)
com.yuning.ui.ArcLayout: ArcLayout(android.content.Context,android.util.AttributeSet)
com.yuning.ui.ArcMenu
com.yuning.ui.ArcMenu: ArcMenu(android.content.Context,android.util.AttributeSet)
com.yuning.ui.DigitPasswordKeyPad
com.yuning.ui.DigitPasswordKeyPad: DigitPasswordKeyPad(android.content.Context)
com.yuning.ui.DigitPasswordKeyPad: DigitPasswordKeyPad(android.content.Context,android.util.AttributeSet)
com.yuning.ui.DigitPasswordKeyPad: DigitPasswordKeyPad(android.content.Context,android.util.AttributeSet,int)
com.yuning.ui.MusicCover
com.yuning.ui.MusicCover: MusicCover(android.content.Context)
com.yuning.ui.MusicCover: MusicCover(android.content.Context,android.util.AttributeSet)
com.yuning.ui.MusicCover: MusicCover(android.content.Context,android.util.AttributeSet,int)
com.yuning.ui.MusicCoverWorkspace
com.yuning.ui.MusicCoverWorkspace: MusicCoverWorkspace(android.content.Context)
com.yuning.ui.MusicCoverWorkspace: MusicCoverWorkspace(android.content.Context,android.util.AttributeSet)
com.yuning.ui.MusicCoverWorkspace: MusicCoverWorkspace(android.content.Context,android.util.AttributeSet,int)
com.yuning.ui.SquareLinearLayout
com.yuning.ui.SquareLinearLayout: SquareLinearLayout(android.content.Context)
com.yuning.ui.SquareLinearLayout: SquareLinearLayout(android.content.Context,android.util.AttributeSet)
com.yuning.ui.SquareLinearLayout: SquareLinearLayout(android.content.Context,android.util.AttributeSet,int)
com.yuning.util.VerticalSeekbar
com.yuning.util.VerticalSeekbar: VerticalSeekbar(android.content.Context,android.util.AttributeSet)
com.yuning.util.VerticalSeekbar: VerticalSeekbar(android.content.Context,android.util.AttributeSet,int)
com.yuning.view.MyVerticalSeekBar
com.yuning.view.MyVerticalSeekBar: MyVerticalSeekBar(android.content.Context,android.util.AttributeSet)
com.yuning.view.MyVerticalSeekBar: MyVerticalSeekBar(android.content.Context,android.util.AttributeSet,int)
com.yuning.view.ShakeProgressBar
com.yuning.view.ShakeProgressBar: ShakeProgressBar(android.content.Context,android.util.AttributeSet)
com.yuning.view.VisualizerView
com.yuning.view.VisualizerView: VisualizerView(android.content.Context,android.util.AttributeSet)
com.yuning.view.VisualizerView: VisualizerView(android.content.Context,android.util.AttributeSet,int)
org.android.agoo.client.AgooSettings$Mode: org.android.agoo.client.AgooSettings$Mode[] values()
org.android.agoo.client.AgooSettings$Mode: org.android.agoo.client.AgooSettings$Mode valueOf(java.lang.String)
org.android.agoo.client.BaseBroadcastReceiver
org.android.agoo.client.BaseBroadcastReceiver: BaseBroadcastReceiver()
org.android.agoo.client.BaseIntentService
org.android.agoo.client.BaseIntentService: BaseIntentService()
org.android.agoo.proc.ServiceProtect
org.android.agoo.proc.ServiceProtect: int start(java.lang.String,java.lang.String,java.lang.String,int)
org.android.agoo.proc.ServiceProtect: void stop()
org.android.agoo.proc.ServiceProtect: int hasRted()
org.android.agoo.proc.ServiceProtect: void startTest(java.lang.String,java.lang.String,java.lang.String,int)
org.android.agoo.proc.b
org.android.agoo.proc.b: b()
org.android.agoo.service.AgooService
org.android.agoo.service.AgooService: AgooService()
org.android.agoo.service.ElectionService
org.android.agoo.service.ElectionService: ElectionService()
org.android.agoo.service.ElectionService$ElectionResult
org.android.agoo.service.ElectionService$ElectionResult: android.os.Parcelable$Creator CREATOR
u.aly.ag: u.aly.ag[] values()
u.aly.ag: u.aly.ag valueOf(java.lang.String)
u.aly.ah$e: u.aly.ah$e[] values()
u.aly.ah$e: u.aly.ah$e valueOf(java.lang.String)
u.aly.ai$e: u.aly.ai$e[] values()
u.aly.ai$e: u.aly.ai$e valueOf(java.lang.String)
u.aly.aj$e: u.aly.aj$e[] values()
u.aly.aj$e: u.aly.aj$e valueOf(java.lang.String)
u.aly.ak$e: u.aly.ak$e[] values()
u.aly.ak$e: u.aly.ak$e valueOf(java.lang.String)
u.aly.al$e: u.aly.al$e[] values()
u.aly.al$e: u.aly.al$e valueOf(java.lang.String)
u.aly.am$e: u.aly.am$e[] values()
u.aly.am$e: u.aly.am$e valueOf(java.lang.String)
u.aly.an: u.aly.an[] values()
u.aly.an: u.aly.an valueOf(java.lang.String)
u.aly.ao$e: u.aly.ao$e[] values()
u.aly.ao$e: u.aly.ao$e valueOf(java.lang.String)
u.aly.ap: u.aly.ap[] values()
u.aly.ap: u.aly.ap valueOf(java.lang.String)
u.aly.aq$e: u.aly.aq$e[] values()
u.aly.aq$e: u.aly.aq$e valueOf(java.lang.String)
u.aly.ar$e: u.aly.ar$e[] values()
u.aly.ar$e: u.aly.ar$e valueOf(java.lang.String)
u.aly.as$e: u.aly.as$e[] values()
u.aly.as$e: u.aly.as$e valueOf(java.lang.String)
u.aly.at$e: u.aly.at$e[] values()
u.aly.at$e: u.aly.at$e valueOf(java.lang.String)
u.aly.au$e: u.aly.au$e[] values()
u.aly.au$e: u.aly.au$e valueOf(java.lang.String)
u.aly.av$e: u.aly.av$e[] values()
u.aly.av$e: u.aly.av$e valueOf(java.lang.String)
u.aly.aw$e: u.aly.aw$e[] values()
u.aly.aw$e: u.aly.aw$e valueOf(java.lang.String)
u.aly.ax$e: u.aly.ax$e[] values()
u.aly.ax$e: u.aly.ax$e valueOf(java.lang.String)
u.aly.ay$e: u.aly.ay$e[] values()
u.aly.ay$e: u.aly.ay$e valueOf(java.lang.String)
u.aly.az$a: u.aly.az$a[] values()
u.aly.az$a: u.aly.az$a valueOf(java.lang.String)
u.aly.ba$e: u.aly.ba$e[] values()
u.aly.ba$e: u.aly.ba$e valueOf(java.lang.String)
u.aly.bb$e: u.aly.bb$e[] values()
u.aly.bb$e: u.aly.bb$e valueOf(java.lang.String)
u.aly.bc: u.aly.bc[] values()
u.aly.bc: u.aly.bc valueOf(java.lang.String)
u.aly.bd$e: u.aly.bd$e[] values()
u.aly.bd$e: u.aly.bd$e valueOf(java.lang.String)
u.aly.be$e: u.aly.be$e[] values()
u.aly.be$e: u.aly.be$e valueOf(java.lang.String)
u.aly.bf$e: u.aly.bf$e[] values()
u.aly.bf$e: u.aly.bf$e valueOf(java.lang.String)
u.aly.bg$e: u.aly.bg$e[] values()
u.aly.bg$e: u.aly.bg$e valueOf(java.lang.String)
u.aly.bh$e: u.aly.bh$e[] values()
u.aly.bh$e: u.aly.bh$e valueOf(java.lang.String)
u.aly.bn: bn(org.json.JSONObject)
u.aly.bn$a: u.aly.bn$a[] values()
u.aly.bn$a: u.aly.bn$a valueOf(java.lang.String)
u.aly.bq: bq(org.json.JSONObject)
u.upd.f: f(org.json.JSONObject)
u.upd.f$a: u.upd.f$a[] values()
u.upd.f$a: u.upd.f$a valueOf(java.lang.String)
u.upd.i: i(org.json.JSONObject)
